#
#
# DO NOT EDIT THIS FILE, IT'S AUTOGENERATED FROM XS MODULES AND WILL BE UPDATED AUTOMATICALLY
#
#
package Algorithm::Diff::XS {
sub DESTROY;
sub _CREATE_;
sub _core_loop_;
}
package AptPkg {
sub _init_config;
sub _init_system;
sub _parse_cmdline;
}
package AptPkg::Cache::_depends {
sub CompType;
sub CompTypeDeb;
sub DESTROY;
sub DepType;
sub Index;
sub ParentPkg;
sub ParentVer;
sub TargetPkg;
sub TargetVer;
}
package AptPkg::Cache::_desc_file {
sub DESTROY;
sub File;
}
package AptPkg::Cache::_description {
sub DESTROY;
sub FileList;
sub LanguageCode;
sub md5;
}
package AptPkg::Cache::_package {
sub Arch;
sub CurrentState;
sub CurrentVer;
sub DESTROY;
sub Flags;
sub FullName;
sub Index;
sub InstState;
sub Name;
sub Next;
sub ProvidesList;
sub RevDependsList;
sub Section;
sub SelectedState;
sub VersionList;
}
package AptPkg::Cache::_pkg_file {
sub Archive;
sub Component;
sub DESTROY;
sub FileName;
sub Index;
sub IndexType;
sub IsOk;
sub Label;
sub Origin;
sub Site;
sub Version;
}
package AptPkg::Cache::_provides {
sub DESTROY;
sub Index;
sub Name;
sub OwnerPkg;
sub OwnerVer;
sub ProvideVersion;
}
package AptPkg::Cache::_ver_file {
sub DESTROY;
sub File;
sub Index;
sub Offset;
sub Size;
}
package AptPkg::Cache::_version {
sub Arch;
sub DESTROY;
sub DependsList;
sub DescriptionList;
sub FileList;
sub Index;
sub InstalledSize;
sub MultiArch;
sub ParentPkg;
sub Priority;
sub ProvidesList;
sub Section;
sub Size;
sub TranslatedDescription;
sub VerStr;
}
package AptPkg::Config::_item {
sub Child;
sub FullTag;
sub Next;
sub Parent;
sub Tag;
sub Value;
}
package AptPkg::Dep {
sub Conflicts;
sub Depends;
sub Equals;
sub Greater;
sub GreaterEq;
sub Less;
sub LessEq;
sub NoOp;
sub NotEquals;
sub Obsoletes;
sub Or;
sub PreDepends;
sub Recommends;
sub Replaces;
sub Suggests;
}
package AptPkg::Flag {
sub Auto;
sub Essential;
sub Important;
}
package AptPkg::State {
sub ConfigFiles;
sub DeInstall;
sub Extra;
sub HalfConfigured;
sub HalfInstalled;
sub Hold;
sub HoldInst;
sub HoldReInstReq;
sub Important;
sub Install;
sub Installed;
sub NotInstalled;
sub Ok;
sub Optional;
sub Purge;
sub ReInstReq;
sub Required;
sub Standard;
sub UnPacked;
sub Unknown;
}
package AptPkg::System {
sub Label;
sub Lock;
sub UnLock;
sub VS;
}
package AptPkg::Version {
sub All;
sub AllAllowed;
sub AllForeign;
sub Allowed;
sub CheckDep;
sub CmpReleaseVer;
sub CmpVersion;
sub Foreign;
sub Label;
sub None;
sub Same;
sub UpstreamVersion;
}
package AptPkg::_cache {
sub Close;
sub DESTROY;
sub FileList;
sub FindPkg;
sub MultiArchCache;
sub NativeArch;
sub Open;
sub Packages;
sub PkgBegin;
sub Policy;
sub new;
}
package AptPkg::_config {
sub DESTROY;
sub Dump;
sub Exists;
sub ExistsAny;
sub Find;
sub FindAny;
sub FindB;
sub FindDir;
sub FindFile;
sub ReadConfigDir;
sub ReadConfigFile;
sub Set;
sub Tree;
sub new;
}
package AptPkg::_pkg_records {
sub DESTROY;
sub Lookup;
sub cache;
}
package AptPkg::_policy {
sub DESTROY;
sub GetCandidateVer;
sub GetMatch;
sub GetPriority;
}
package AptPkg::_source_list {
sub DESTROY;
sub new;
}
package AptPkg::_src_records {
sub DESTROY;
sub Find;
sub Restart;
sub new;
}
package B {
sub CLONE;
sub address;
sub amagic_generation;
sub begin_av;
sub cast_I32;
sub cchar;
sub check_av;
sub comppadlist;
sub cstring;
sub curstash;
sub defstash;
sub diehook;
sub dowarn;
sub end_av;
sub formfeed;
sub hash;
sub inc_gv;
sub init_av;
sub main_cv;
sub main_root;
sub main_start;
sub minus_c;
sub opnumber;
sub perlstring;
sub ppname;
sub regex_padav;
sub save_BEGINs;
sub sub_generation;
sub sv_no;
sub sv_undef;
sub sv_yes;
sub svref_2object;
sub threadsv_names;
sub unitcheck_av;
sub walkoptree;
sub walkoptree_debug;
sub warnhook;
}
package B::AV {
sub ARRAY;
sub ARRAYelt;
sub FILL;
sub MAX;
}
package B::BINOP {
sub last;
}
package B::BM {
sub PREVIOUS;
sub RARE;
sub TABLE;
sub USEFUL;
}
package B::COP {
sub arybase;
sub cop_seq;
sub file;
sub filegv;
sub hints;
sub hints_hash;
sub io;
sub label;
sub line;
sub stash;
sub stashoff;
sub stashpv;
sub warnings;
}
package B::CV {
sub CONST;
sub CvFLAGS;
sub DEPTH;
sub FILE;
sub GV;
sub HSCXT;
sub NAME_HEK;
sub OUTSIDE;
sub OUTSIDE_SEQ;
sub PADLIST;
sub ROOT;
sub START;
sub STASH;
sub XSUB;
sub XSUBANY;
sub const_sv;
}
package B::Deparse {
sub main_cv;
sub main_root;
sub main_start;
sub opnumber;
sub perlstring;
sub svref_2object;
}
package B::FM {
sub LINES;
}
package B::GV {
sub AV;
sub CV;
sub CVGEN;
sub EGV;
sub FILE;
sub FILEGV;
sub FORM;
sub GP;
sub GPFLAGS;
sub GvFLAGS;
sub GvREFCNT;
sub HV;
sub IO;
sub LINE;
sub NAME;
sub STASH;
sub SV;
sub isGV_with_GP;
sub is_empty;
}
package B::HE {
sub HASH;
sub SVKEY_force;
sub VAL;
}
package B::HV {
sub ARRAY;
sub FILL;
sub KEYS;
sub MAX;
sub NAME;
sub RITER;
}
package B::IO {
sub BOTTOM_GV;
sub BOTTOM_NAME;
sub FMT_GV;
sub FMT_NAME;
sub IoFLAGS;
sub IoTYPE;
sub IsSTD;
sub LINES;
sub LINES_LEFT;
sub PAGE;
sub PAGE_LEN;
sub TOP_GV;
sub TOP_NAME;
}
package B::IV {
sub IV;
sub IVX;
sub RV;
sub UVX;
sub needs64bits;
sub packiv;
}
package B::LISTOP {
sub children;
}
package B::LOGOP {
sub other;
}
package B::LOOP {
sub lastop;
sub nextop;
sub redoop;
}
package B::MAGIC {
sub FLAGS;
sub LENGTH;
sub MOREMAGIC;
sub OBJ;
sub PRIVATE;
sub PTR;
sub REGEX;
sub TYPE;
sub precomp;
}
package B::METHOP {
sub first;
sub meth_sv;
sub rclass;
}
package B::NV {
sub NV;
sub NVX;
}
package B::OP {
sub desc;
sub flags;
sub folded;
sub moresib;
sub name;
sub next;
sub oplist;
sub opt;
sub parent;
sub ppaddr;
sub private;
sub savefree;
sub sibling;
sub size;
sub slabbed;
sub spare;
sub static;
sub targ;
sub type;
}
package B::PADLIST {
sub ARRAY;
sub ARRAYelt;
sub MAX;
sub NAMES;
sub REFCNT;
sub id;
sub outid;
}
package B::PADNAME {
sub COP_SEQ_RANGE_HIGH;
sub COP_SEQ_RANGE_LOW;
sub FLAGS;
sub LEN;
sub OURSTASH;
sub PARENT_FAKELEX_FLAGS;
sub PARENT_PAD_INDEX;
sub PROTOCV;
sub PV;
sub PVX;
sub REFCNT;
sub SvSTASH;
sub TYPE;
}
package B::PADNAMELIST {
sub ARRAY;
sub ARRAYelt;
sub MAX;
sub REFCNT;
}
package B::PADOP {
sub gv;
sub padix;
sub sv;
}
package B::PMOP {
sub code_list;
sub pmflags;
sub pmoffset;
sub pmregexp;
sub pmreplroot;
sub pmreplstart;
sub pmstash;
sub pmstashpv;
sub precomp;
sub reflags;
}
package B::PV {
sub CUR;
sub LEN;
sub PV;
sub PVBM;
sub PVX;
sub RV;
sub as_string;
}
package B::PVLV {
sub TARG;
sub TARGLEN;
sub TARGOFF;
sub TYPE;
}
package B::PVMG {
sub MAGIC;
sub SvSTASH;
}
package B::PVOP {
sub pv;
}
package B::REGEXP {
sub REGEX;
sub compflags;
sub precomp;
sub qr_anoncv;
}
package B::RHE {
sub HASH;
}
package B::SV {
sub FLAGS;
sub MAGICAL;
sub POK;
sub REFCNT;
sub ROK;
sub SvTYPE;
sub object_2svref;
}
package B::SVOP {
sub gv;
sub sv;
}
package B::UNOP {
sub first;
}
package B::UNOP_AUX {
sub aux_list;
sub string;
}
package Bit::Vector {
sub Abs;
sub Absolute;
sub And;
sub AndNot;
sub Bit_Copy;
sub Bit_Off;
sub Bit_On;
sub Block_Read;
sub Block_Store;
sub Chunk_List_Read;
sub Chunk_List_Store;
sub Chunk_Read;
sub Chunk_Store;
sub Clone;
sub Closure;
sub Compare;
sub Complement;
sub Concat;
sub Concat_List;
sub Copy;
sub Create;
sub DESTROY;
sub Delete;
sub Difference;
sub Divide;
sub Empty;
sub Empty_Interval;
sub ExclusiveOr;
sub Fill;
sub Fill_Interval;
sub Flip;
sub Flip_Interval;
sub GCD;
sub Index_List_Read;
sub Index_List_Remove;
sub Index_List_Store;
sub Insert;
sub Intersection;
sub Interval_Copy;
sub Interval_Empty;
sub Interval_Fill;
sub Interval_Flip;
sub Interval_Reverse;
sub Interval_Scan_dec;
sub Interval_Scan_inc;
sub Interval_Substitute;
sub LSB;
sub Lexicompare;
sub Long_Bits;
sub MSB;
sub Max;
sub Min;
sub Move_Left;
sub Move_Right;
sub Multiplication;
sub Multiply;
sub Neg;
sub Negate;
sub Norm2;
sub Norm3;
sub Norm;
sub Not;
sub Or;
sub Power;
sub Primes;
sub Product;
sub Resize;
sub Reverse;
sub Shadow;
sub Sign;
sub Size;
sub Transpose;
sub Unfake;
sub Union;
sub Version;
sub Word_Bits;
sub Word_Delete;
sub Word_Insert;
sub Word_List_Read;
sub Word_List_Store;
sub Word_Read;
sub Word_Size;
sub Word_Store;
sub Xor;
sub add;
sub bit_flip;
sub bit_test;
sub contains;
sub dec;
sub decrement;
sub equal;
sub flip;
sub from_ASCII;
sub from_Bin;
sub from_Dec;
sub from_Enum;
sub from_Hex;
sub from_string;
sub in;
sub inc;
sub inclusion;
sub increment;
sub is_empty;
sub is_full;
sub lsb;
sub msb;
sub new;
sub new_Bin;
sub new_Dec;
sub new_Enum;
sub new_Hex;
sub rotate_left;
sub rotate_right;
sub shift_left;
sub shift_right;
sub sub;
sub subset;
sub subtract;
sub to_ASCII;
sub to_Bin;
sub to_Dec;
sub to_Enum;
sub to_Hex;
sub to_String;
}
package Cache::FastMmap {
sub fc_close($) ;
sub fc_delete($$$) ;
sub fc_dump_page($) ;
sub fc_expunge($$$$) ;
sub fc_get($$) ;
sub fc_get_keys($$) ;
sub fc_get_page_details($) ;
sub fc_hash($$) ;
sub fc_init($) ;
sub fc_is_locked($) ;
sub fc_lock($$) ;
sub fc_new() ;
sub fc_read($$$) ;
sub fc_reset_page_details($) ;
sub fc_set($$$) ;
sub fc_set_param($$$) ;
sub fc_unlock($) ;
sub fc_write($$$$$$) ;
}
package Cairo {
sub HAS_FT_FONT;
sub HAS_PDF_SURFACE;
sub HAS_PNG_FUNCTIONS;
sub HAS_PS_SURFACE;
sub HAS_RECORDING_SURFACE;
sub HAS_SVG_SURFACE;
sub LIB_VERSION;
sub LIB_VERSION_ENCODE;
sub VERSION_ENCODE;
sub lib_version;
sub lib_version_string;
sub version;
sub version_string;
}
package Cairo::Context {
sub DESTROY;
sub append_path;
sub arc;
sub arc_negative;
sub clip;
sub clip_extents;
sub clip_preserve;
sub close_path;
sub copy_clip_rectangle_list;
sub copy_page;
sub copy_path;
sub copy_path_flat;
sub create;
sub curve_to;
sub device_to_user;
sub device_to_user_distance;
sub fill;
sub fill_extents;
sub fill_preserve;
sub font_extents;
sub get_antialias;
sub get_current_point;
sub get_dash;
sub get_fill_rule;
sub get_font_face;
sub get_font_matrix;
sub get_font_options;
sub get_group_target;
sub get_line_cap;
sub get_line_join;
sub get_line_width;
sub get_matrix;
sub get_miter_limit;
sub get_operator;
sub get_scaled_font;
sub get_source;
sub get_target;
sub get_tolerance;
sub glyph_extents;
sub glyph_path;
sub has_current_point;
sub identity_matrix;
sub in_clip;
sub in_fill;
sub in_stroke;
sub line_to;
sub mask;
sub mask_surface;
sub move_to;
sub new_path;
sub new_sub_path;
sub paint;
sub paint_with_alpha;
sub path_extents;
sub pop_group;
sub pop_group_to_source;
sub push_group;
sub push_group_with_content;
sub rectangle;
sub rel_curve_to;
sub rel_line_to;
sub rel_move_to;
sub reset_clip;
sub restore;
sub rotate;
sub save;
sub scale;
sub select_font_face;
sub set_antialias;
sub set_dash;
sub set_fill_rule;
sub set_font_face;
sub set_font_matrix;
sub set_font_options;
sub set_font_size;
sub set_line_cap;
sub set_line_join;
sub set_line_width;
sub set_matrix;
sub set_miter_limit;
sub set_operator;
sub set_scaled_font;
sub set_source;
sub set_source_rgb;
sub set_source_rgba;
sub set_source_surface;
sub set_tolerance;
sub show_glyphs;
sub show_page;
sub show_text;
sub show_text_glyphs;
sub status;
sub stroke;
sub stroke_extents;
sub stroke_preserve;
sub text_extents;
sub text_path;
sub transform;
sub translate;
sub user_to_device;
sub user_to_device_distance;
}
package Cairo::FontFace {
sub DESTROY;
sub get_type;
sub status;
}
package Cairo::FontOptions {
sub DESTROY;
sub create;
sub equal;
sub get_antialias;
sub get_hint_metrics;
sub get_hint_style;
sub get_subpixel_order;
sub hash;
sub merge;
sub set_antialias;
sub set_hint_metrics;
sub set_hint_style;
sub set_subpixel_order;
sub status;
}
package Cairo::Format {
sub stride_for_width;
}
package Cairo::FtFontFace {
sub create;
}
package Cairo::Gradient {
sub add_color_stop_rgb;
sub add_color_stop_rgba;
sub get_color_stops;
}
package Cairo::ImageSurface {
sub create;
sub create_for_data;
sub create_from_png;
sub create_from_png_stream;
sub get_data;
sub get_format;
sub get_height;
sub get_stride;
sub get_width;
}
package Cairo::LinearGradient {
sub create;
sub get_points;
}
package Cairo::Matrix {
sub DESTROY;
sub init;
sub init_identity;
sub init_rotate;
sub init_scale;
sub init_translate;
sub invert;
sub multiply;
sub rotate;
sub scale;
sub transform_distance;
sub transform_point;
sub translate;
}
package Cairo::Path {
sub DESTROY;
sub FETCH;
sub FETCHSIZE;
}
package Cairo::Path::Data {
sub EXISTS;
sub FETCH;
sub FIRSTKEY;
sub NEXTKEY;
sub STORE;
}
package Cairo::Path::Point {
sub FETCH;
sub FETCHSIZE;
sub STORE;
}
package Cairo::Path::Points {
sub FETCH;
sub FETCHSIZE;
sub STORE;
}
package Cairo::Pattern {
sub DESTROY;
sub get_extend;
sub get_filter;
sub get_matrix;
sub get_type;
sub set_extend;
sub set_filter;
sub set_matrix;
sub status;
}
package Cairo::PdfSurface {
sub create;
sub create_for_stream;
sub get_versions;
sub restrict_to_version;
sub set_size;
sub version_to_string;
}
package Cairo::PsSurface {
sub create;
sub create_for_stream;
sub dsc_begin_page_setup;
sub dsc_begin_setup;
sub dsc_comment;
sub get_eps;
sub get_levels;
sub level_to_string;
sub restrict_to_level;
sub set_eps;
sub set_size;
}
package Cairo::RadialGradient {
sub create;
sub get_circles;
}
package Cairo::RecordingSurface {
sub create;
sub ink_extents;
}
package Cairo::Region {
sub DESTROY;
sub contains_point;
sub contains_rectangle;
sub create;
sub equal;
sub get_extents;
sub get_rectangle;
sub intersect;
sub intersect_rectangle;
sub is_empty;
sub num_rectangles;
sub status;
sub subtract;
sub subtract_rectangle;
sub translate;
sub union;
sub union_rectangle;
sub xor;
sub xor_rectangle;
}
package Cairo::ScaledFont {
sub DESTROY;
sub create;
sub extents;
sub get_ctm;
sub get_font_face;
sub get_font_matrix;
sub get_font_options;
sub get_scale_matrix;
sub get_type;
sub glyph_extents;
sub status;
sub text_extents;
sub text_to_glyphs;
}
package Cairo::SolidPattern {
sub create_rgb;
sub create_rgba;
sub get_rgba;
}
package Cairo::Surface {
sub DESTROY;
sub copy_page;
sub create_for_rectangle;
sub create_similar;
sub finish;
sub flush;
sub get_content;
sub get_device_offset;
sub get_fallback_resolution;
sub get_font_options;
sub get_type;
sub has_show_text_glyphs;
sub mark_dirty;
sub mark_dirty_rectangle;
sub set_device_offset;
sub set_fallback_resolution;
sub show_page;
sub status;
sub write_to_png;
sub write_to_png_stream;
}
package Cairo::SurfacePattern {
sub create;
sub get_surface;
}
package Cairo::SvgSurface {
sub create;
sub create_for_stream;
sub get_versions;
sub restrict_to_version;
sub version_to_string;
}
package Cairo::ToyFontFace {
sub create;
sub get_family;
sub get_slant;
sub get_weight;
}
package Carp {
sub downgrade;
sub is_utf8;
}
package Class::C3::XS {
sub _calculate_method_dispatch_table;
sub _nextcan;
sub _plsubgen;
sub calculateMRO;
}
package Class::Load {
sub is_class_loaded;
}
package Class::Load::XS {
sub is_class_loaded;
}
package Class::MOP {
sub blessed($) ;
sub check_package_cache_flag($) ;
sub get_code_info($) ;
sub isweak($) ;
sub weaken($) ;
}
package Class::MOP::Attribute {
sub associated_class;
sub associated_methods;
sub blessed($) ;
sub weaken($) ;
}
package Class::MOP::Class {
sub all(&@) ;
sub blessed($) ;
sub constructor_class;
sub constructor_name;
sub destructor_class;
sub immutable_trait;
sub instance_metaclass;
sub subname;
}
package Class::MOP::Instance {
sub associated_metaclass;
sub blessed($) ;
sub isweak($) ;
sub slot_hash;
sub slots;
sub weaken($) ;
}
package Class::MOP::Method {
sub blessed($) ;
sub body;
sub is_stub;
sub name;
sub package_name;
sub reftype($) ;
sub weaken($) ;
}
package Class::MOP::Method::Accessor {
sub blessed($) ;
sub weaken($) ;
}
package Class::MOP::Method::Constructor {
sub blessed($) ;
sub weaken($) ;
}
package Class::MOP::Method::Generated {
sub definition_context;
sub is_inline;
}
package Class::MOP::Method::Inlined {
sub _expected_method_class;
sub refaddr($) ;
}
package Class::MOP::Method::Meta {
sub blessed($) ;
sub weaken($) ;
}
package Class::MOP::Method::Wrapped {
sub blessed($) ;
sub subname;
}
package Class::MOP::Mixin {
sub blessed($) ;
}
package Class::MOP::Mixin::AttributeCore {
sub accessor;
sub blessed($) ;
sub builder;
sub clearer;
sub definition_context;
sub init_arg;
sub initializer;
sub insertion_order;
sub name;
sub predicate;
sub reader;
sub writer;
}
package Class::MOP::Mixin::HasAttributes {
sub _attribute_map;
sub attribute_metaclass;
sub blessed($) ;
}
package Class::MOP::Mixin::HasMethods {
sub _method_map;
sub blessed($) ;
sub method_metaclass;
sub reftype($) ;
sub subname;
sub wrapped_method_metaclass;
}
package Class::MOP::Mixin::HasOverloads {
sub blessed($) ;
}
package Class::MOP::Object {
sub blessed($) ;
}
package Class::MOP::Overload {
sub blessed($) ;
sub weaken($) ;
}
package Class::MOP::Package {
sub blessed($) ;
sub name;
sub weaken($) ;
}
package Class::XSAccessor {
sub __entersub_optimized__() ;
sub _newxs_compat_accessor;
sub _newxs_compat_setter;
sub accessor;
sub array_accessor;
sub array_accessor_init;
sub array_setter;
sub array_setter_init;
sub chained_accessor;
sub chained_setter;
sub constant_false;
sub constant_true;
sub constructor;
sub defined_predicate;
sub exists_predicate;
sub getter;
sub lvalue_accessor;
sub newxs_accessor;
sub newxs_boolean;
sub newxs_constructor;
sub newxs_defined_predicate;
sub newxs_exists_predicate;
sub newxs_getter;
sub newxs_lvalue_accessor;
sub newxs_predicate;
sub newxs_setter;
sub newxs_test;
sub setter;
sub test;
}
package Class::XSAccessor::Array {
sub accessor;
sub chained_accessor;
sub chained_setter;
sub constructor;
sub getter;
sub lvalue_accessor;
sub newxs_accessor;
sub newxs_constructor;
sub newxs_getter;
sub newxs_lvalue_accessor;
sub newxs_predicate;
sub newxs_setter;
sub predicate;
sub setter;
}
package Clone {
sub clone($;$) ;
}
package Compress::Raw::Bunzip2 {
sub DESTROY;
sub DispStream;
sub bzinflate;
sub compressedBytes;
sub inflateCount;
sub new;
sub status;
sub total_in_lo32;
sub total_out_lo32;
sub uncompressedBytes;
}
package Compress::Raw::Bzip2 {
sub DESTROY;
sub DispStream;
sub bzclose;
sub bzdeflate;
sub bzflush;
sub bzlibversion;
sub compressedBytes;
sub constant;
sub new;
sub total_in_lo32;
sub total_out_lo32;
sub uncompressedBytes;
}
package Compress::Raw::Zlib {
sub ZLIB_VERNUM;
sub _deflateInit;
sub _inflateInit;
sub _inflateScanInit;
sub adler32;
sub adler32_combine;
sub constant;
sub crc32;
sub crc32_combine;
sub zlibCompileFlags;
sub zlib_version;
}
package Compress::Raw::Zlib::deflateStream {
sub DESTROY;
sub DispStream;
sub _deflateParams;
sub adler32;
sub compressedBytes;
sub crc32;
sub deflate;
sub deflateReset;
sub deflateTune;
sub dict_adler;
sub flush;
sub get_Bufsize;
sub get_Level;
sub get_Strategy;
sub msg;
sub status;
sub total_in;
sub total_out;
sub uncompressedBytes;
}
package Compress::Raw::Zlib::inflateScanStream {
sub DESTROY;
sub DispStream;
sub _createDeflateStream;
sub adler32;
sub compressedBytes;
sub crc32;
sub getEndOffset;
sub getLastBlockOffset;
sub getLastBufferOffset;
sub inflateCount;
sub inflateReset;
sub resetLastBlockByte;
sub scan;
sub status;
sub uncompressedBytes;
}
package Compress::Raw::Zlib::inflateStream {
sub DESTROY;
sub DispStream;
sub adler32;
sub compressedBytes;
sub crc32;
sub dict_adler;
sub get_Bufsize;
sub inflate;
sub inflateCount;
sub inflateReset;
sub inflateSync;
sub msg;
sub set_Append;
sub status;
sub total_in;
sub total_out;
sub uncompressedBytes;
}
package Config {
sub AUTOLOAD;
}
package Cpanel::JSON::XS {
sub CLONE;
sub DESTROY;
sub _from_json($;$) ;
sub _to_json($) ;
sub allow_barekey;
sub allow_bignum;
sub allow_blessed;
sub allow_nonref;
sub allow_singlequote;
sub allow_stringify;
sub allow_tags;
sub allow_unknown;
sub ascii;
sub binary;
sub canonical;
sub convert_blessed;
sub decode;
sub decode_json($;$) ;
sub decode_prefix;
sub encode;
sub encode_json($) ;
sub escape_slash;
sub filter_json_object;
sub filter_json_single_key_object;
sub get_allow_barekey;
sub get_allow_bignum;
sub get_allow_blessed;
sub get_allow_nonref;
sub get_allow_singlequote;
sub get_allow_stringify;
sub get_allow_tags;
sub get_allow_unknown;
sub get_ascii;
sub get_binary;
sub get_canonical;
sub get_convert_blessed;
sub get_escape_slash;
sub get_indent;
sub get_latin1;
sub get_max_depth;
sub get_max_size;
sub get_relaxed;
sub get_shrink;
sub get_space_after;
sub get_space_before;
sub get_stringify_infnan;
sub get_utf8;
sub incr_parse;
sub incr_reset;
sub incr_skip;
sub indent;
sub latin1;
sub max_depth;
sub max_size;
sub new;
sub pretty;
sub relaxed;
sub shrink;
sub sort_by;
sub space_after;
sub space_before;
sub stringify_infnan;
sub utf8;
}
package Cwd {
sub CLONE;
sub abs_path;
sub fastcwd;
sub getcwd;
sub realpath;
}
package DBD::SQLite {
sub ALTER_TABLE() ;
sub ANALYZE() ;
sub ATTACH() ;
sub COPY() ;
sub CREATE_INDEX() ;
sub CREATE_TABLE() ;
sub CREATE_TEMP_INDEX() ;
sub CREATE_TEMP_TABLE() ;
sub CREATE_TEMP_TRIGGER() ;
sub CREATE_TEMP_VIEW() ;
sub CREATE_TRIGGER() ;
sub CREATE_VIEW() ;
sub CREATE_VTABLE() ;
sub DELETE() ;
sub DENY() ;
sub DETACH() ;
sub DROP_INDEX() ;
sub DROP_TABLE() ;
sub DROP_TEMP_INDEX() ;
sub DROP_TEMP_TABLE() ;
sub DROP_TEMP_TRIGGER() ;
sub DROP_TEMP_VIEW() ;
sub DROP_TRIGGER() ;
sub DROP_VIEW() ;
sub DROP_VTABLE() ;
sub FUNCTION() ;
sub IGNORE() ;
sub INSERT() ;
sub OK() ;
sub OPEN_CREATE() ;
sub OPEN_FULLMUTEX() ;
sub OPEN_MEMORY() ;
sub OPEN_NOMUTEX() ;
sub OPEN_PRIVATECACHE() ;
sub OPEN_READONLY() ;
sub OPEN_READWRITE() ;
sub OPEN_SHAREDCACHE() ;
sub OPEN_URI() ;
sub PRAGMA() ;
sub READ() ;
sub RECURSIVE() ;
sub REINDEX() ;
sub SAVEPOINT() ;
sub SELECT() ;
sub TRANSACTION() ;
sub UPDATE() ;
sub _const__authorizer_action_codes() ;
sub _const__authorizer_action_codes_3006008() ;
sub _const__authorizer_action_codes_3008003() ;
sub _const__authorizer_return_codes() ;
sub _const__flags_for_file_open_operations() ;
sub _const__flags_for_file_open_operations_3006002() ;
sub _const__flags_for_file_open_operations_3006018() ;
sub _const__flags_for_file_open_operations_3007007() ;
sub _const__flags_for_file_open_operations_3007013() ;
sub compile_options;
sub sqlite_status;
sub strglob;
sub strlike;
}
package DBD::SQLite::Constants {
sub SQLITE_ABORT() ;
sub SQLITE_ABORT_ROLLBACK() ;
sub SQLITE_ALTER_TABLE() ;
sub SQLITE_ANALYZE() ;
sub SQLITE_ATTACH() ;
sub SQLITE_AUTH() ;
sub SQLITE_AUTH_USER() ;
sub SQLITE_BLOB() ;
sub SQLITE_BUSY() ;
sub SQLITE_BUSY_RECOVERY() ;
sub SQLITE_BUSY_SNAPSHOT() ;
sub SQLITE_CANTOPEN() ;
sub SQLITE_CANTOPEN_CONVPATH() ;
sub SQLITE_CANTOPEN_FULLPATH() ;
sub SQLITE_CANTOPEN_ISDIR() ;
sub SQLITE_CANTOPEN_NOTEMPDIR() ;
sub SQLITE_CONSTRAINT() ;
sub SQLITE_CONSTRAINT_CHECK() ;
sub SQLITE_CONSTRAINT_COMMITHOOK() ;
sub SQLITE_CONSTRAINT_FOREIGNKEY() ;
sub SQLITE_CONSTRAINT_FUNCTION() ;
sub SQLITE_CONSTRAINT_NOTNULL() ;
sub SQLITE_CONSTRAINT_PRIMARYKEY() ;
sub SQLITE_CONSTRAINT_ROWID() ;
sub SQLITE_CONSTRAINT_TRIGGER() ;
sub SQLITE_CONSTRAINT_UNIQUE() ;
sub SQLITE_CONSTRAINT_VTAB() ;
sub SQLITE_COPY() ;
sub SQLITE_CORRUPT() ;
sub SQLITE_CORRUPT_VTAB() ;
sub SQLITE_CREATE_INDEX() ;
sub SQLITE_CREATE_TABLE() ;
sub SQLITE_CREATE_TEMP_INDEX() ;
sub SQLITE_CREATE_TEMP_TABLE() ;
sub SQLITE_CREATE_TEMP_TRIGGER() ;
sub SQLITE_CREATE_TEMP_VIEW() ;
sub SQLITE_CREATE_TRIGGER() ;
sub SQLITE_CREATE_VIEW() ;
sub SQLITE_CREATE_VTABLE() ;
sub SQLITE_DELETE() ;
sub SQLITE_DENY() ;
sub SQLITE_DETACH() ;
sub SQLITE_DETERMINISTIC() ;
sub SQLITE_DONE() ;
sub SQLITE_DROP_INDEX() ;
sub SQLITE_DROP_TABLE() ;
sub SQLITE_DROP_TEMP_INDEX() ;
sub SQLITE_DROP_TEMP_TABLE() ;
sub SQLITE_DROP_TEMP_TRIGGER() ;
sub SQLITE_DROP_TEMP_VIEW() ;
sub SQLITE_DROP_TRIGGER() ;
sub SQLITE_DROP_VIEW() ;
sub SQLITE_DROP_VTABLE() ;
sub SQLITE_EMPTY() ;
sub SQLITE_ERROR() ;
sub SQLITE_FLOAT() ;
sub SQLITE_FORMAT() ;
sub SQLITE_FULL() ;
sub SQLITE_FUNCTION() ;
sub SQLITE_IGNORE() ;
sub SQLITE_INSERT() ;
sub SQLITE_INTEGER() ;
sub SQLITE_INTERNAL() ;
sub SQLITE_INTERRUPT() ;
sub SQLITE_IOERR() ;
sub SQLITE_IOERR_ACCESS() ;
sub SQLITE_IOERR_AUTH() ;
sub SQLITE_IOERR_BLOCKED() ;
sub SQLITE_IOERR_CHECKRESERVEDLOCK() ;
sub SQLITE_IOERR_CLOSE() ;
sub SQLITE_IOERR_CONVPATH() ;
sub SQLITE_IOERR_DELETE() ;
sub SQLITE_IOERR_DELETE_NOENT() ;
sub SQLITE_IOERR_DIR_CLOSE() ;
sub SQLITE_IOERR_DIR_FSYNC() ;
sub SQLITE_IOERR_FSTAT() ;
sub SQLITE_IOERR_FSYNC() ;
sub SQLITE_IOERR_GETTEMPPATH() ;
sub SQLITE_IOERR_LOCK() ;
sub SQLITE_IOERR_MMAP() ;
sub SQLITE_IOERR_NOMEM() ;
sub SQLITE_IOERR_RDLOCK() ;
sub SQLITE_IOERR_READ() ;
sub SQLITE_IOERR_SEEK() ;
sub SQLITE_IOERR_SHMLOCK() ;
sub SQLITE_IOERR_SHMMAP() ;
sub SQLITE_IOERR_SHMOPEN() ;
sub SQLITE_IOERR_SHMSIZE() ;
sub SQLITE_IOERR_SHORT_READ() ;
sub SQLITE_IOERR_TRUNCATE() ;
sub SQLITE_IOERR_UNLOCK() ;
sub SQLITE_IOERR_VNODE() ;
sub SQLITE_IOERR_WRITE() ;
sub SQLITE_LOCKED() ;
sub SQLITE_LOCKED_SHAREDCACHE() ;
sub SQLITE_MISMATCH() ;
sub SQLITE_MISUSE() ;
sub SQLITE_NOLFS() ;
sub SQLITE_NOMEM() ;
sub SQLITE_NOTADB() ;
sub SQLITE_NOTFOUND() ;
sub SQLITE_NOTICE() ;
sub SQLITE_NOTICE_RECOVER_ROLLBACK() ;
sub SQLITE_NOTICE_RECOVER_WAL() ;
sub SQLITE_NULL() ;
sub SQLITE_OK() ;
sub SQLITE_OPEN_CREATE() ;
sub SQLITE_OPEN_FULLMUTEX() ;
sub SQLITE_OPEN_MEMORY() ;
sub SQLITE_OPEN_NOMUTEX() ;
sub SQLITE_OPEN_PRIVATECACHE() ;
sub SQLITE_OPEN_READONLY() ;
sub SQLITE_OPEN_READWRITE() ;
sub SQLITE_OPEN_SHAREDCACHE() ;
sub SQLITE_OPEN_URI() ;
sub SQLITE_PERM() ;
sub SQLITE_PRAGMA() ;
sub SQLITE_PROTOCOL() ;
sub SQLITE_RANGE() ;
sub SQLITE_READ() ;
sub SQLITE_READONLY() ;
sub SQLITE_READONLY_CANTLOCK() ;
sub SQLITE_READONLY_DBMOVED() ;
sub SQLITE_READONLY_RECOVERY() ;
sub SQLITE_READONLY_ROLLBACK() ;
sub SQLITE_RECURSIVE() ;
sub SQLITE_REINDEX() ;
sub SQLITE_ROW() ;
sub SQLITE_SAVEPOINT() ;
sub SQLITE_SCHEMA() ;
sub SQLITE_SELECT() ;
sub SQLITE_TOOBIG() ;
sub SQLITE_TRANSACTION() ;
sub SQLITE_UPDATE() ;
sub SQLITE_VERSION_NUMBER() ;
sub SQLITE_WARNING() ;
sub SQLITE_WARNING_AUTOINDEX() ;
sub _const_authorizer_action_codes() ;
sub _const_authorizer_action_codes_3006008() ;
sub _const_authorizer_action_codes_3008003() ;
sub _const_authorizer_return_codes() ;
sub _const_compile_time_library_version_numbers() ;
sub _const_extended_result_codes_3006002() ;
sub _const_extended_result_codes_3006005() ;
sub _const_extended_result_codes_3006007() ;
sub _const_extended_result_codes_3006012() ;
sub _const_extended_result_codes_3007000() ;
sub _const_extended_result_codes_3007007() ;
sub _const_extended_result_codes_3007011() ;
sub _const_extended_result_codes_3007012() ;
sub _const_extended_result_codes_3007015() ;
sub _const_extended_result_codes_3007016() ;
sub _const_extended_result_codes_3007017() ;
sub _const_extended_result_codes_3008000() ;
sub _const_extended_result_codes_3008001() ;
sub _const_extended_result_codes_3008002() ;
sub _const_extended_result_codes_3008003() ;
sub _const_extended_result_codes_3008007() ;
sub _const_extended_result_codes_3009000() ;
sub _const_extended_result_codes_3010000() ;
sub _const_flags_for_file_open_operations() ;
sub _const_flags_for_file_open_operations_3006002() ;
sub _const_flags_for_file_open_operations_3006018() ;
sub _const_flags_for_file_open_operations_3007007() ;
sub _const_flags_for_file_open_operations_3007013() ;
sub _const_function_flags_3008003() ;
sub _const_fundamental_datatypes() ;
sub _const_result_codes() ;
sub _const_result_codes_3007017() ;
}
package DBD::SQLite::db {
sub DESTROY;
sub FETCH;
sub STORE;
sub _do;
sub _login;
sub backup_from_file;
sub backup_to_file;
sub busy_timeout;
sub collation_needed;
sub commit;
sub commit_hook;
sub create_aggregate;
sub create_collation;
sub create_function;
sub create_module;
sub db_filename;
sub db_status;
sub disconnect;
sub enable_load_extension;
sub last_insert_id;
sub last_insert_rowid;
sub load_extension;
sub profile;
sub progress_handler;
sub register_fts3_perl_tokenizer;
sub rollback;
sub rollback_hook;
sub selectall_arrayref;
sub selectrow_array;
sub selectrow_arrayref;
sub set_authorizer;
sub sqlite_backup_from_file;
sub sqlite_backup_to_file;
sub sqlite_busy_timeout;
sub sqlite_collation_needed;
sub sqlite_commit_hook;
sub sqlite_create_aggregate;
sub sqlite_create_collation;
sub sqlite_create_function;
sub sqlite_create_module;
sub sqlite_db_filename;
sub sqlite_db_status;
sub sqlite_enable_load_extension;
sub sqlite_last_insert_rowid;
sub sqlite_load_extension;
sub sqlite_profile;
sub sqlite_progress_handler;
sub sqlite_register_fts3_perl_tokenizer;
sub sqlite_rollback_hook;
sub sqlite_set_authorizer;
sub sqlite_table_column_metadata;
sub sqlite_trace;
sub sqlite_update_hook;
sub table_column_metadata;
sub update_hook;
}
package DBD::SQLite::dr {
sub dbixs_revision;
sub discon_all_;
sub disconnect_all;
}
package DBD::SQLite::st {
sub DESTROY;
sub FETCH;
sub FETCH_attrib;
sub STORE;
sub _prepare;
sub bind_col;
sub bind_param;
sub bind_param_inout;
sub blob_read;
sub execute;
sub fetch;
sub fetchall_arrayref;
sub fetchrow;
sub fetchrow_array;
sub fetchrow_arrayref;
sub finish;
sub rows;
sub sqlite_st_status;
sub st_status;
}
package DBD::_::common {
sub DELETE;
sub DESTROY;
sub FETCH;
sub STORE;
sub debug;
sub dump_handle;
sub err;
sub errstr;
sub private_data;
sub rows;
sub set_err;
sub state;
sub swap_inner_handle;
sub trace;
sub trace_msg;
}
package DBD::_::db {
sub connected;
sub preparse;
sub take_imp_data;
}
package DBD::_::dr {
sub dbixs_revision;
}
package DBD::_::st {
sub DESTROY;
sub _get_fbav;
sub _set_fbav;
sub bind_col;
sub fetch;
sub fetchrow;
sub fetchrow_array;
sub fetchrow_arrayref;
sub fetchrow_hashref;
sub finish;
sub rows;
}
package DBD::_mem::common {
sub DESTROY;
}
package DBD::mysql {
sub constant;
}
package DBD::mysql::GetInfo {
sub dbd_mysql_get_info;
}
package DBD::mysql::db {
sub DESTROY;
sub FETCH;
sub SQL_ALL_TYPES() ;
sub SQL_ARRAY() ;
sub SQL_ARRAY_LOCATOR() ;
sub SQL_BIGINT() ;
sub SQL_BINARY() ;
sub SQL_BIT() ;
sub SQL_BLOB() ;
sub SQL_BLOB_LOCATOR() ;
sub SQL_BOOLEAN() ;
sub SQL_CHAR() ;
sub SQL_CLOB() ;
sub SQL_CLOB_LOCATOR() ;
sub SQL_DATE() ;
sub SQL_DATETIME() ;
sub SQL_DECIMAL() ;
sub SQL_DOUBLE() ;
sub SQL_FLOAT() ;
sub SQL_GUID() ;
sub SQL_INTEGER() ;
sub SQL_INTERVAL() ;
sub SQL_INTERVAL_DAY() ;
sub SQL_INTERVAL_DAY_TO_HOUR() ;
sub SQL_INTERVAL_DAY_TO_MINUTE() ;
sub SQL_INTERVAL_DAY_TO_SECOND() ;
sub SQL_INTERVAL_HOUR() ;
sub SQL_INTERVAL_HOUR_TO_MINUTE() ;
sub SQL_INTERVAL_HOUR_TO_SECOND() ;
sub SQL_INTERVAL_MINUTE() ;
sub SQL_INTERVAL_MINUTE_TO_SECOND() ;
sub SQL_INTERVAL_MONTH() ;
sub SQL_INTERVAL_SECOND() ;
sub SQL_INTERVAL_YEAR() ;
sub SQL_INTERVAL_YEAR_TO_MONTH() ;
sub SQL_LONGVARBINARY() ;
sub SQL_LONGVARCHAR() ;
sub SQL_MULTISET() ;
sub SQL_MULTISET_LOCATOR() ;
sub SQL_NUMERIC() ;
sub SQL_REAL() ;
sub SQL_REF() ;
sub SQL_ROW() ;
sub SQL_SMALLINT() ;
sub SQL_TIME() ;
sub SQL_TIMESTAMP() ;
sub SQL_TINYINT() ;
sub SQL_TYPE_DATE() ;
sub SQL_TYPE_TIME() ;
sub SQL_TYPE_TIMESTAMP() ;
sub SQL_TYPE_TIMESTAMP_WITH_TIMEZONE() ;
sub SQL_TYPE_TIME_WITH_TIMEZONE() ;
sub SQL_UDT() ;
sub SQL_UDT_LOCATOR() ;
sub SQL_UNKNOWN_TYPE() ;
sub SQL_VARBINARY() ;
sub SQL_VARCHAR() ;
sub SQL_WCHAR() ;
sub SQL_WLONGVARCHAR() ;
sub SQL_WVARCHAR() ;
sub STORE;
sub _ListDBs;
sub _async_check;
sub _login;
sub commit;
sub disconnect;
sub do($$;$@) ;
sub last_insert_id;
sub mysql_async_ready;
sub mysql_async_result;
sub mysql_fd;
sub ping($) ;
sub quote($$;$) ;
sub rollback;
sub selectall_arrayref;
sub selectrow_array;
sub selectrow_arrayref;
sub type_info_all;
}
package DBD::mysql::dr {
sub SQL_ALL_TYPES() ;
sub SQL_ARRAY() ;
sub SQL_ARRAY_LOCATOR() ;
sub SQL_BIGINT() ;
sub SQL_BINARY() ;
sub SQL_BIT() ;
sub SQL_BLOB() ;
sub SQL_BLOB_LOCATOR() ;
sub SQL_BOOLEAN() ;
sub SQL_CHAR() ;
sub SQL_CLOB() ;
sub SQL_CLOB_LOCATOR() ;
sub SQL_DATE() ;
sub SQL_DATETIME() ;
sub SQL_DECIMAL() ;
sub SQL_DOUBLE() ;
sub SQL_FLOAT() ;
sub SQL_GUID() ;
sub SQL_INTEGER() ;
sub SQL_INTERVAL() ;
sub SQL_INTERVAL_DAY() ;
sub SQL_INTERVAL_DAY_TO_HOUR() ;
sub SQL_INTERVAL_DAY_TO_MINUTE() ;
sub SQL_INTERVAL_DAY_TO_SECOND() ;
sub SQL_INTERVAL_HOUR() ;
sub SQL_INTERVAL_HOUR_TO_MINUTE() ;
sub SQL_INTERVAL_HOUR_TO_SECOND() ;
sub SQL_INTERVAL_MINUTE() ;
sub SQL_INTERVAL_MINUTE_TO_SECOND() ;
sub SQL_INTERVAL_MONTH() ;
sub SQL_INTERVAL_SECOND() ;
sub SQL_INTERVAL_YEAR() ;
sub SQL_INTERVAL_YEAR_TO_MONTH() ;
sub SQL_LONGVARBINARY() ;
sub SQL_LONGVARCHAR() ;
sub SQL_MULTISET() ;
sub SQL_MULTISET_LOCATOR() ;
sub SQL_NUMERIC() ;
sub SQL_REAL() ;
sub SQL_REF() ;
sub SQL_ROW() ;
sub SQL_SMALLINT() ;
sub SQL_TIME() ;
sub SQL_TIMESTAMP() ;
sub SQL_TINYINT() ;
sub SQL_TYPE_DATE() ;
sub SQL_TYPE_TIME() ;
sub SQL_TYPE_TIMESTAMP() ;
sub SQL_TYPE_TIMESTAMP_WITH_TIMEZONE() ;
sub SQL_TYPE_TIME_WITH_TIMEZONE() ;
sub SQL_UDT() ;
sub SQL_UDT_LOCATOR() ;
sub SQL_UNKNOWN_TYPE() ;
sub SQL_VARBINARY() ;
sub SQL_VARCHAR() ;
sub SQL_WCHAR() ;
sub SQL_WLONGVARCHAR() ;
sub SQL_WVARCHAR() ;
sub _ListDBs;
sub _admin_internal;
sub dbixs_revision;
}
package DBD::mysql::st {
sub DESTROY;
sub FETCH;
sub FETCH_attrib;
sub STORE;
sub _async_check;
sub _prepare;
sub bind_param;
sub bind_param_inout;
sub blob_read;
sub dataseek($$) ;
sub execute;
sub fetch;
sub fetchall_arrayref;
sub fetchrow;
sub fetchrow_array;
sub fetchrow_arrayref;
sub finish;
sub more_results;
sub mysql_async_ready;
sub mysql_async_result;
sub rows;
}
package DBI {
sub DBIf_TRACE_CON() ;
sub DBIf_TRACE_DBD() ;
sub DBIf_TRACE_ENC() ;
sub DBIf_TRACE_SQL() ;
sub DBIf_TRACE_TXN() ;
sub DBIpp_cm_XX() ;
sub DBIpp_cm_br() ;
sub DBIpp_cm_cs() ;
sub DBIpp_cm_dd() ;
sub DBIpp_cm_dw() ;
sub DBIpp_cm_hs() ;
sub DBIpp_ph_XX() ;
sub DBIpp_ph_cn() ;
sub DBIpp_ph_cs() ;
sub DBIpp_ph_qm() ;
sub DBIpp_ph_sp() ;
sub DBIpp_st_XX() ;
sub DBIpp_st_bs() ;
sub DBIpp_st_qq() ;
sub DBIstcf_DISCARD_STRING() ;
sub DBIstcf_STRICT() ;
sub SQL_ALL_TYPES() ;
sub SQL_ARRAY() ;
sub SQL_ARRAY_LOCATOR() ;
sub SQL_BIGINT() ;
sub SQL_BINARY() ;
sub SQL_BIT() ;
sub SQL_BLOB() ;
sub SQL_BLOB_LOCATOR() ;
sub SQL_BOOLEAN() ;
sub SQL_CHAR() ;
sub SQL_CLOB() ;
sub SQL_CLOB_LOCATOR() ;
sub SQL_CURSOR_DYNAMIC() ;
sub SQL_CURSOR_FORWARD_ONLY() ;
sub SQL_CURSOR_KEYSET_DRIVEN() ;
sub SQL_CURSOR_STATIC() ;
sub SQL_CURSOR_TYPE_DEFAULT() ;
sub SQL_DATE() ;
sub SQL_DATETIME() ;
sub SQL_DECIMAL() ;
sub SQL_DOUBLE() ;
sub SQL_FLOAT() ;
sub SQL_GUID() ;
sub SQL_INTEGER() ;
sub SQL_INTERVAL() ;
sub SQL_INTERVAL_DAY() ;
sub SQL_INTERVAL_DAY_TO_HOUR() ;
sub SQL_INTERVAL_DAY_TO_MINUTE() ;
sub SQL_INTERVAL_DAY_TO_SECOND() ;
sub SQL_INTERVAL_HOUR() ;
sub SQL_INTERVAL_HOUR_TO_MINUTE() ;
sub SQL_INTERVAL_HOUR_TO_SECOND() ;
sub SQL_INTERVAL_MINUTE() ;
sub SQL_INTERVAL_MINUTE_TO_SECOND() ;
sub SQL_INTERVAL_MONTH() ;
sub SQL_INTERVAL_SECOND() ;
sub SQL_INTERVAL_YEAR() ;
sub SQL_INTERVAL_YEAR_TO_MONTH() ;
sub SQL_LONGVARBINARY() ;
sub SQL_LONGVARCHAR() ;
sub SQL_MULTISET() ;
sub SQL_MULTISET_LOCATOR() ;
sub SQL_NUMERIC() ;
sub SQL_REAL() ;
sub SQL_REF() ;
sub SQL_ROW() ;
sub SQL_SMALLINT() ;
sub SQL_TIME() ;
sub SQL_TIMESTAMP() ;
sub SQL_TINYINT() ;
sub SQL_TYPE_DATE() ;
sub SQL_TYPE_TIME() ;
sub SQL_TYPE_TIMESTAMP() ;
sub SQL_TYPE_TIMESTAMP_WITH_TIMEZONE() ;
sub SQL_TYPE_TIME_WITH_TIMEZONE() ;
sub SQL_UDT() ;
sub SQL_UDT_LOCATOR() ;
sub SQL_UNKNOWN_TYPE() ;
sub SQL_VARBINARY() ;
sub SQL_VARCHAR() ;
sub SQL_WCHAR() ;
sub SQL_WLONGVARCHAR() ;
sub SQL_WVARCHAR() ;
sub _clone_dbis;
sub _concat_hash_sorted;
sub _dbi_state_lval;
sub _debug_dispatch;
sub _get_imp_data;
sub _handles;
sub _install_method;
sub _new_handle;
sub _setup_handle;
sub _svdump;
sub constant() ;
sub dbi_profile;
sub dbi_profile_merge;
sub dbi_profile_merge_nodes;
sub dbi_time;
sub dump_handle;
sub hash;
sub looks_like_number;
sub neat;
sub set_err;
sub sql_type_cast;
sub trace;
sub trace_msg;
}
package DBI::common {
sub CLEAR;
sub DELETE;
sub DESTROY;
sub EXISTS;
sub FETCH;
sub FETCH_many;
sub FIRSTKEY;
sub NEXTKEY;
sub STORE;
sub can;
sub debug;
sub dump_handle;
sub err;
sub errstr;
sub func;
sub parse_trace_flag;
sub parse_trace_flags;
sub private_attribute_info;
sub private_data;
sub set_err;
sub state;
sub swap_inner_handle;
sub trace;
sub trace_msg;
sub visit_child_handles;
}
package DBI::db {
sub TIEHASH;
sub begin_work;
sub clone;
sub column_info;
sub commit;
sub connected;
sub data_sources;
sub disconnect;
sub do;
sub foreign_key_info;
sub get_info;
sub last_insert_id;
sub ping;
sub prepare;
sub prepare_cached;
sub preparse;
sub primary_key;
sub primary_key_info;
sub quote;
sub quote_identifier;
sub rollback;
sub rows;
sub selectall_array;
sub selectall_arrayref;
sub selectall_hashref;
sub selectcol_arrayref;
sub selectrow_array;
sub selectrow_arrayref;
sub selectrow_hashref;
sub statistics_info;
sub table_info;
sub tables;
sub take_imp_data;
sub type_info;
sub type_info_all;
}
package DBI::dr {
sub TIEHASH;
sub connect;
sub connect_cached;
sub data_sources;
sub dbixs_revision;
sub default_user;
sub disconnect_all;
}
package DBI::st {
sub TIEHASH;
sub _get_fbav;
sub _set_fbav;
sub bind_col;
sub bind_columns;
sub bind_param;
sub bind_param_array;
sub bind_param_inout;
sub bind_param_inout_array;
sub blob_copy_to_file;
sub blob_read;
sub cancel;
sub dump_results;
sub execute;
sub execute_array;
sub execute_for_fetch;
sub fetch;
sub fetchall_arrayref;
sub fetchall_hashref;
sub fetchrow;
sub fetchrow_array;
sub fetchrow_arrayref;
sub fetchrow_hashref;
sub finish;
sub more_results;
sub rows;
}
package DBI::var {
sub FETCH;
}
package Data::Alias {
sub alias;
sub copy;
}
package Data::Dumper {
sub Dumpxs($;$$) ;
sub _vstring($) ;
}
package Date::Calc::XS {
sub Add_Delta_DHMS;
sub Add_Delta_Days;
sub Add_Delta_YM;
sub Add_Delta_YMD;
sub Add_Delta_YMDHMS;
sub Add_N_Delta_YMD;
sub Add_N_Delta_YMDHMS;
sub Business_to_Standard;
sub Calendar;
sub Compress;
sub Compressed_to_Text;
sub Date_to_Days;
sub Date_to_Text;
sub Date_to_Text_Long;
sub Date_to_Time;
sub Day_of_Week;
sub Day_of_Week_Abbreviation;
sub Day_of_Week_to_Text;
sub Day_of_Year;
sub Days_in_Month;
sub Days_in_Year;
sub Decode_Date_EU;
sub Decode_Date_US;
sub Decode_Day_of_Week;
sub Decode_Language;
sub Decode_Month;
sub Delta_DHMS;
sub Delta_Days;
sub Delta_YMD;
sub Delta_YMDHMS;
sub Easter_Sunday;
sub English_Ordinal;
sub Fixed_Window;
sub Gmtime;
sub ISO_LC;
sub ISO_UC;
sub Language;
sub Language_to_Text;
sub Languages;
sub Localtime;
sub Mktime;
sub Monday_of_Week;
sub Month_to_Text;
sub Moving_Window;
sub N_Delta_YMD;
sub N_Delta_YMDHMS;
sub Normalize_DHMS;
sub Now;
sub Nth_Weekday_of_Month_Year;
sub Standard_to_Business;
sub System_Clock;
sub This_Year;
sub Time_to_Date;
sub Timezone;
sub Today;
sub Today_and_Now;
sub Uncompress;
sub Version;
sub Week_Number;
sub Week_of_Year;
sub Weeks_in_Year;
sub check_business_date;
sub check_compressed;
sub check_date;
sub check_time;
sub leap_year;
}
package DateTime {
sub _accumulated_leap_seconds($$) ;
sub _day_has_leap_second($$) ;
sub _day_length($$) ;
sub _is_leap_year($$) ;
sub _normalize_leap_seconds($$$) ;
sub _normalize_tai_seconds($$$) ;
sub _rd2ymd($$;$) ;
sub _seconds_as_components($$;$$) ;
sub _time_as_seconds($$$$) ;
sub _ymd2rd($$$$) ;
}
package Devel::Caller {
sub _context_cv;
sub _context_op;
}
package Devel::LexAlias {
sub _lexalias;
}
package Devel::OverloadInfo {
sub blessed($) ;
}
package Devel::Peek {
sub CvGV;
sub DeadCode;
sub Dump;
sub DumpArray;
sub DumpProg;
sub SvREFCNT(\[$@%&*]) ;
sub fill_mstats;
sub mstat;
sub mstats2hash($\%;$) ;
sub mstats_fillhash(\%;$) ;
sub runops_debug;
}
package Devel::StackTrace {
sub blessed($) ;
}
package Digest::MD5 {
sub DESTROY;
sub add;
sub addfile;
sub b64digest;
sub clone;
sub context;
sub digest;
sub hexdigest;
sub md5;
sub md5_base64;
sub md5_hex;
sub new;
sub reset;
}
package Digest::SHA {
sub DESTROY($) ;
sub F_ALLOCSP() ;
sub F_ALLOCSP64() ;
sub F_COMPAT() ;
sub F_DUP2FD() ;
sub F_FREESP() ;
sub F_FREESP64() ;
sub F_FSYNC() ;
sub F_FSYNC64() ;
sub F_NODNY() ;
sub F_POSIX() ;
sub F_RDACC() ;
sub F_RDDNY() ;
sub F_RWACC() ;
sub F_RWDNY() ;
sub F_SHARE() ;
sub F_UNSHARE() ;
sub F_WRACC() ;
sub F_WRDNY() ;
sub O_ALIAS() ;
sub O_DEFER() ;
sub O_EXLOCK() ;
sub O_NOINHERIT() ;
sub O_RANDOM() ;
sub O_RAW() ;
sub O_RSRC() ;
sub O_SEQUENTIAL() ;
sub O_SHLOCK() ;
sub O_TEMPORARY() ;
sub _addfilebin($$) ;
sub _addfileuniv($$) ;
sub _getstate($) ;
sub _putstate($$) ;
sub add($;@) ;
sub algorithm($) ;
sub b64digest($) ;
sub clone($) ;
sub digest($) ;
sub hashsize($) ;
sub hexdigest($) ;
sub hmac_sha1(;@) ;
sub hmac_sha1_base64(;@) ;
sub hmac_sha1_hex(;@) ;
sub hmac_sha224(;@) ;
sub hmac_sha224_base64(;@) ;
sub hmac_sha224_hex(;@) ;
sub hmac_sha256(;@) ;
sub hmac_sha256_base64(;@) ;
sub hmac_sha256_hex(;@) ;
sub hmac_sha384(;@) ;
sub hmac_sha384_base64(;@) ;
sub hmac_sha384_hex(;@) ;
sub hmac_sha512(;@) ;
sub hmac_sha512224(;@) ;
sub hmac_sha512224_base64(;@) ;
sub hmac_sha512224_hex(;@) ;
sub hmac_sha512256(;@) ;
sub hmac_sha512256_base64(;@) ;
sub hmac_sha512256_hex(;@) ;
sub hmac_sha512_base64(;@) ;
sub hmac_sha512_hex(;@) ;
sub newSHA($$) ;
sub sha1(;@) ;
sub sha1_base64(;@) ;
sub sha1_hex(;@) ;
sub sha224(;@) ;
sub sha224_base64(;@) ;
sub sha224_hex(;@) ;
sub sha256(;@) ;
sub sha256_base64(;@) ;
sub sha256_hex(;@) ;
sub sha384(;@) ;
sub sha384_base64(;@) ;
sub sha384_hex(;@) ;
sub sha512(;@) ;
sub sha512224(;@) ;
sub sha512224_base64(;@) ;
sub sha512224_hex(;@) ;
sub sha512256(;@) ;
sub sha512256_base64(;@) ;
sub sha512256_hex(;@) ;
sub sha512_base64(;@) ;
sub sha512_hex(;@) ;
sub shainit($$) ;
sub sharewind($) ;
sub shawrite($$$) ;
}
package Digest::SHA1 {
sub DESTROY;
sub add;
sub addfile;
sub b64digest;
sub clone;
sub digest;
sub hexdigest;
sub new;
sub sha1;
sub sha1_base64;
sub sha1_hex;
sub sha1_transform;
}
package Digest::base {
sub add;
sub clone;
sub digest;
sub new;
}
package DynaLoader {
sub CLONE;
sub boot_DynaLoader;
sub dl_error;
sub dl_find_symbol;
sub dl_install_xsub;
sub dl_load_file;
sub dl_undef_symbols;
sub dl_unload_file;
}
package Encode {
sub DIE_ON_ERR() ;
sub FB_CROAK() ;
sub FB_DEFAULT() ;
sub FB_HTMLCREF() ;
sub FB_PERLQQ() ;
sub FB_QUIET() ;
sub FB_WARN() ;
sub FB_XMLCREF() ;
sub HTMLCREF() ;
sub LEAVE_SRC() ;
sub PERLQQ() ;
sub RETURN_ON_ERR() ;
sub STOP_AT_PARTIAL() ;
sub WARN_ON_ERR() ;
sub XMLCREF() ;
sub _bytes_to_utf8($;@) ;
sub _utf8_off($) ;
sub _utf8_on($) ;
sub _utf8_to_bytes($;@) ;
sub is_16bit;
sub is_8bit;
sub is_utf8($;$) ;
sub utf8_downgrade;
sub utf8_upgrade;
}
package Encode::CN::HZ {
sub FB_CROAK() ;
sub FB_DEFAULT() ;
sub FB_HTMLCREF() ;
sub FB_PERLQQ() ;
sub FB_QUIET() ;
sub FB_WARN() ;
sub FB_XMLCREF() ;
}
package Encode::JP::JIS7 {
sub FB_CROAK() ;
sub FB_DEFAULT() ;
sub FB_HTMLCREF() ;
sub FB_PERLQQ() ;
sub FB_QUIET() ;
sub FB_WARN() ;
sub FB_XMLCREF() ;
}
package Encode::KR::2022_KR {
sub FB_CROAK() ;
sub FB_DEFAULT() ;
sub FB_HTMLCREF() ;
sub FB_PERLQQ() ;
sub FB_QUIET() ;
sub FB_WARN() ;
sub FB_XMLCREF() ;
}
package Encode::Unicode {
sub decode;
sub decode_xs;
sub encode;
sub encode_xs;
}
package Encode::XS {
sub cat_decode($$$$$;$) ;
sub decode($$;$) ;
sub encode($$;$) ;
sub mime_name($) ;
sub name($) ;
sub needs_lines($) ;
sub perlio_ok($) ;
sub renew($) ;
sub renewed($) ;
}
package Encode::utf8 {
sub decode;
sub decode_xs;
sub encode;
sub encode_xs;
}
package Eval::Closure {
sub reftype($) ;
}
package Exception::Class {
sub blessed($) ;
sub reftype($) ;
}
package Exception::Class::Base {
sub blessed($) ;
}
package FCGI {
sub Accept($) ;
sub Attach($) ;
sub CloseSocket($) ;
sub DESTROY;
sub Detach($) ;
sub Finish($) ;
sub Flush($) ;
sub GetEnvironment($) ;
sub GetHandles($) ;
sub IsFastCGI($) ;
sub LastCall($) ;
sub OpenSocket($$) ;
sub RequestX(***$$$) ;
sub StartFilterData($) ;
}
package FCGI::Stream {
sub CLOSE;
sub EOF;
sub FILENO;
sub GETC;
sub PRINT;
sub READ;
sub WRITE;
}
package Fcntl {
sub AUTOLOAD;
sub FCREAT() ;
sub FDEFER() ;
sub FDSYNC() ;
sub FEXCL() ;
sub FLARGEFILE() ;
sub FRSYNC() ;
sub FSYNC() ;
sub FTRUNC() ;
sub F_ALLOCSP() ;
sub F_ALLOCSP64() ;
sub F_COMPAT() ;
sub F_DUP2FD() ;
sub F_FREESP() ;
sub F_FREESP64() ;
sub F_FSYNC() ;
sub F_FSYNC64() ;
sub F_NODNY() ;
sub F_POSIX() ;
sub F_RDACC() ;
sub F_RDDNY() ;
sub F_RWACC() ;
sub F_RWDNY() ;
sub F_SHARE() ;
sub F_UNSHARE() ;
sub F_WRACC() ;
sub F_WRDNY() ;
sub O_ALIAS() ;
sub O_ALT_IO() ;
sub O_DEFER() ;
sub O_EVTONLY() ;
sub O_EXLOCK() ;
sub O_IGNORE_CTTY() ;
sub O_NOINHERIT() ;
sub O_NOLINK() ;
sub O_NOSIGPIPE() ;
sub O_NOTRANS() ;
sub O_RANDOM() ;
sub O_RAW() ;
sub O_RSRC() ;
sub O_SEQUENTIAL() ;
sub O_SHLOCK() ;
sub O_SYMLINK() ;
sub O_TEMPORARY() ;
sub O_TTY_INIT() ;
sub S_ENFMT() ;
sub S_IFMT;
sub S_IFWHT() ;
sub S_IMODE;
sub S_ISBLK;
sub S_ISCHR;
sub S_ISDIR;
sub S_ISFIFO;
sub S_ISLNK;
sub S_ISREG;
sub S_ISSOCK;
sub S_ISTXT() ;
}
package File::FcntlLock {
sub ARG_MAX() ;
sub CHILD_MAX() ;
sub CLK_TCK() ;
sub C_fcntl_lock($$$$) ;
sub EOTHER() ;
sub EPROCLIM() ;
sub LDBL_EPSILON() ;
sub LDBL_MAX() ;
sub LDBL_MIN() ;
sub LINK_MAX() ;
sub L_tmpname() ;
sub NDEBUG;
sub OPEN_MAX() ;
sub STREAM_MAX() ;
sub S_ISBLK;
sub S_ISCHR;
sub S_ISDIR;
sub S_ISFIFO;
sub S_ISREG;
sub TZNAME_MAX() ;
sub WEXITSTATUS;
sub WIFEXITED;
sub WIFSIGNALED;
sub WIFSTOPPED;
sub WSTOPSIG;
sub WTERMSIG;
sub _exit;
sub abort;
sub access;
sub acos;
sub asctime;
sub asin;
sub assert;
sub atan;
sub atexit;
sub atof;
sub atoi;
sub atol;
sub bsearch;
sub calloc;
sub ceil;
sub cfgetispeed;
sub cfgetospeed;
sub cfsetispeed;
sub cfsetospeed;
sub clearerr;
sub clock;
sub cosh;
sub creat;
sub ctermid;
sub ctime;
sub cuserid;
sub difftime;
sub div;
sub dup2;
sub dup;
sub errno;
sub execl;
sub execle;
sub execlp;
sub execv;
sub execve;
sub execvp;
sub fabs;
sub fclose;
sub fdopen;
sub feof;
sub ferror;
sub fflush;
sub fgetc;
sub fgetpos;
sub fgets;
sub floor;
sub fmod;
sub fopen;
sub fpathconf;
sub fprintf;
sub fputc;
sub fputs;
sub fread;
sub free;
sub freopen;
sub frexp;
sub fscanf;
sub fseek;
sub fsetpos;
sub fstat;
sub fsync;
sub ftell;
sub fwrite;
sub getchar;
sub getcwd;
sub getegid;
sub getenv;
sub geteuid;
sub getgid;
sub getgroups;
sub getpid;
sub gets;
sub getuid;
sub isalnum;
sub isalpha;
sub isatty;
sub iscntrl;
sub isdigit;
sub isgraph;
sub islower;
sub isprint;
sub ispunct;
sub isspace;
sub isupper;
sub isxdigit;
sub labs;
sub ldexp;
sub ldiv;
sub localeconv;
sub log10;
sub longjmp;
sub lseek;
sub malloc;
sub mblen;
sub mbstowcs;
sub mbtowc;
sub memchr;
sub memcmp;
sub memcpy;
sub memmove;
sub memset;
sub mkfifo;
sub mktime;
sub modf;
sub offsetof;
sub pathconf;
sub pause;
sub pow;
sub putc;
sub putchar;
sub puts;
sub qsort;
sub raise;
sub realloc;
sub remove;
sub rewind;
sub scanf;
sub setbuf;
sub setgid;
sub setjmp;
sub setlocale;
sub setpgid;
sub setsid;
sub setuid;
sub setvbuf;
sub sigaction;
sub siglongjmp;
sub signal;
sub sigpending;
sub sigprocmask;
sub sigsetjmp;
sub sigsuspend;
sub sinh;
sub sscanf;
sub stderr;
sub stdin;
sub stdout;
sub strcat;
sub strchr;
sub strcmp;
sub strcoll;
sub strcpy;
sub strcspn;
sub strerror;
sub strftime;
sub strlen;
sub strncat;
sub strncmp;
sub strncpy;
sub strpbrk;
sub strrchr;
sub strspn;
sub strstr;
sub strtod;
sub strtok;
sub strtol;
sub strtoul;
sub strxfrm;
sub sysconf;
sub tan;
sub tanh;
sub tcdrain;
sub tcflow;
sub tcflush;
sub tcgetattr;
sub tcgetpgrp;
sub tcsendbreak;
sub tcsetattr;
sub tcsetpgrp;
sub tmpfile;
sub tmpnam;
sub tolower;
sub toupper;
sub ttyname;
sub tzname;
sub tzset;
sub uname;
sub ungetc;
sub vfprintf;
sub vprintf;
sub vsprintf;
sub wcstombs;
sub wctomb;
}
package File::FcntlLock::Core {
sub ARG_MAX() ;
sub CHILD_MAX() ;
sub CLK_TCK() ;
sub EOTHER() ;
sub EPROCLIM() ;
sub LDBL_EPSILON() ;
sub LDBL_MAX() ;
sub LDBL_MIN() ;
sub LINK_MAX() ;
sub L_tmpname() ;
sub NDEBUG;
sub OPEN_MAX() ;
sub STREAM_MAX() ;
sub S_ISBLK;
sub S_ISCHR;
sub S_ISDIR;
sub S_ISFIFO;
sub S_ISREG;
sub TZNAME_MAX() ;
sub WEXITSTATUS;
sub WIFEXITED;
sub WIFSIGNALED;
sub WIFSTOPPED;
sub WSTOPSIG;
sub WTERMSIG;
sub _exit;
sub abort;
sub access;
sub acos;
sub asctime;
sub asin;
sub assert;
sub atan;
sub atexit;
sub atof;
sub atoi;
sub atol;
sub bsearch;
sub calloc;
sub ceil;
sub cfgetispeed;
sub cfgetospeed;
sub cfsetispeed;
sub cfsetospeed;
sub clearerr;
sub clock;
sub cosh;
sub creat;
sub ctermid;
sub ctime;
sub cuserid;
sub difftime;
sub div;
sub dup2;
sub dup;
sub errno;
sub execl;
sub execle;
sub execlp;
sub execv;
sub execve;
sub execvp;
sub fabs;
sub fclose;
sub fdopen;
sub feof;
sub ferror;
sub fflush;
sub fgetc;
sub fgetpos;
sub fgets;
sub floor;
sub fmod;
sub fopen;
sub fpathconf;
sub fprintf;
sub fputc;
sub fputs;
sub fread;
sub free;
sub freopen;
sub frexp;
sub fscanf;
sub fseek;
sub fsetpos;
sub fstat;
sub fsync;
sub ftell;
sub fwrite;
sub getchar;
sub getcwd;
sub getegid;
sub getenv;
sub geteuid;
sub getgid;
sub getgroups;
sub getpid;
sub gets;
sub getuid;
sub isalnum;
sub isalpha;
sub isatty;
sub iscntrl;
sub isdigit;
sub isgraph;
sub islower;
sub isprint;
sub ispunct;
sub isspace;
sub isupper;
sub isxdigit;
sub labs;
sub ldexp;
sub ldiv;
sub localeconv;
sub log10;
sub longjmp;
sub lseek;
sub malloc;
sub mblen;
sub mbstowcs;
sub mbtowc;
sub memchr;
sub memcmp;
sub memcpy;
sub memmove;
sub memset;
sub mkfifo;
sub mktime;
sub modf;
sub offsetof;
sub pathconf;
sub pause;
sub pow;
sub putc;
sub putchar;
sub puts;
sub qsort;
sub raise;
sub realloc;
sub remove;
sub rewind;
sub scanf;
sub setbuf;
sub setgid;
sub setjmp;
sub setlocale;
sub setpgid;
sub setsid;
sub setuid;
sub setvbuf;
sub sigaction;
sub siglongjmp;
sub signal;
sub sigpending;
sub sigprocmask;
sub sigsetjmp;
sub sigsuspend;
sub sinh;
sub sscanf;
sub stderr;
sub stdin;
sub stdout;
sub strcat;
sub strchr;
sub strcmp;
sub strcoll;
sub strcpy;
sub strcspn;
sub strerror;
sub strftime;
sub strlen;
sub strncat;
sub strncmp;
sub strncpy;
sub strpbrk;
sub strrchr;
sub strspn;
sub strstr;
sub strtod;
sub strtok;
sub strtol;
sub strtoul;
sub strxfrm;
sub sysconf;
sub tan;
sub tanh;
sub tcdrain;
sub tcflow;
sub tcflush;
sub tcgetattr;
sub tcgetpgrp;
sub tcsendbreak;
sub tcsetattr;
sub tcsetpgrp;
sub tmpfile;
sub tmpnam;
sub tolower;
sub toupper;
sub ttyname;
sub tzname;
sub tzset;
sub uname;
sub ungetc;
sub vfprintf;
sub vprintf;
sub vsprintf;
sub wcstombs;
sub wctomb;
}
package File::Find {
sub is_tainted($) ;
}
package File::Glob {
sub AUTOLOAD;
sub CLONE;
sub GLOB_ERROR;
sub bsd_glob;
sub bsd_glob_override;
sub csh_glob;
}
package File::Path {
sub getcwd;
}
package File::Spec::Unix {
sub _fn_canonpath;
sub _fn_catdir;
sub _fn_catfile;
sub canonpath;
sub catdir;
sub catfile;
}
package Filter::Util::Call {
sub filter_del() ;
sub filter_read(;$) ;
sub real_import($$$) ;
sub unimport(;$@) ;
}
package Glib {
sub CHECK_VERSION;
sub GET_VERSION_INFO;
sub MAJOR_VERSION;
sub MICRO_VERSION;
sub MINOR_VERSION;
sub critical;
sub error;
sub filename_display_basename;
sub filename_display_name;
sub filename_from_unicode($) ;
sub filename_from_uri($) ;
sub filename_to_unicode($) ;
sub filename_to_uri($$) ;
sub get_application_name;
sub get_home_dir;
sub get_language_names;
sub get_real_name;
sub get_system_config_dirs;
sub get_system_data_dirs;
sub get_tmp_dir;
sub get_user_cache_dir;
sub get_user_config_dir;
sub get_user_data_dir;
sub get_user_name;
sub get_user_special_dir;
sub install_exception_handler;
sub log;
sub main_depth;
sub major_version;
sub message;
sub micro_version;
sub minor_version;
sub remove_exception_handler;
sub set_application_name;
sub strerror;
sub strsignal;
sub warning;
}
package Glib::BookmarkFile {
sub DESTROY;
sub add_application;
sub add_group;
sub get_added;
sub get_app_info;
sub get_applications;
sub get_description;
sub get_groups;
sub get_icon;
sub get_is_private;
sub get_mime_type;
sub get_modified;
sub get_size;
sub get_title;
sub get_uris;
sub get_visited;
sub has_application;
sub has_group;
sub has_item;
sub load_from_data;
sub load_from_data_dirs;
sub load_from_file;
sub move_item;
sub new;
sub remove_application;
sub remove_group;
sub remove_item;
sub set_added;
sub set_app_info;
sub set_description;
sub set_groups;
sub set_icon;
sub set_is_private;
sub set_mime_type;
sub set_modified;
sub set_title;
sub set_visited;
sub to_data;
sub to_file;
}
package Glib::Boxed {
sub DESTROY;
sub copy;
}
package Glib::Bytes {
sub compare;
sub equal;
sub get_data;
sub get_size;
sub hash;
sub new;
}
package Glib::Child {
sub watch_add;
}
package Glib::Error {
sub matches;
sub new;
sub register;
sub throw;
}
package Glib::Flags {
sub all;
sub as_arrayref($;@) ;
sub bool($;@) ;
sub eq;
sub ge;
sub intersect;
sub ne;
sub new;
sub sub;
sub union;
sub xor;
}
package Glib::IO {
sub add_watch;
}
package Glib::Idle {
sub add;
}
package Glib::KeyFile {
sub DESTROY;
sub get_boolean;
sub get_boolean_list;
sub get_comment;
sub get_double;
sub get_double_list;
sub get_groups;
sub get_integer;
sub get_integer_list;
sub get_keys;
sub get_locale_string;
sub get_locale_string_list;
sub get_start_group;
sub get_string;
sub get_string_list;
sub get_value;
sub has_group;
sub has_key;
sub load_from_data;
sub load_from_data_dirs;
sub load_from_dirs;
sub load_from_file;
sub new;
sub remove_comment;
sub remove_group;
sub remove_key;
sub set_boolean;
sub set_boolean_list;
sub set_comment;
sub set_double;
sub set_double_list;
sub set_integer;
sub set_integer_list;
sub set_list_separator;
sub set_locale_string;
sub set_locale_string_list;
sub set_string;
sub set_string_list;
sub set_value;
sub to_data;
}
package Glib::Log {
sub default_handler;
sub remove_handler;
sub set_always_fatal;
sub set_default_handler;
sub set_fatal_mask;
sub set_handler;
}
package Glib::MainContext {
sub DESTROY;
sub default;
sub is_owner;
sub iteration;
sub new;
sub pending;
}
package Glib::MainLoop {
sub DESTROY;
sub get_context;
sub is_running;
sub new;
sub quit;
sub run;
}
package Glib::Markup {
sub escape_text;
}
package Glib::Object {
sub CLONE;
sub DESTROY;
sub find_property;
sub freeze_notify;
sub get;
sub get_data;
sub get_pointer;
sub get_property;
sub list_properties;
sub new;
sub new_from_pointer;
sub notify;
sub set;
sub set_data;
sub set_property;
sub set_threadsafe;
sub signal_add_emission_hook;
sub signal_chain_from_overridden;
sub signal_connect;
sub signal_connect_after;
sub signal_connect_swapped;
sub signal_emit;
sub signal_get_invocation_hint;
sub signal_handler_block;
sub signal_handler_disconnect;
sub signal_handler_is_connected;
sub signal_handler_unblock;
sub signal_handlers_block_by_func;
sub signal_handlers_disconnect_by_func;
sub signal_handlers_unblock_by_func;
sub signal_query;
sub signal_remove_emission_hook;
sub signal_stop_emission_by_name;
sub thaw_notify;
}
package Glib::Object::_LazyLoader {
sub _load;
}
package Glib::OptionContext {
sub add_group;
sub add_main_entries;
sub get_help_enabled;
sub get_ignore_unknown_options;
sub get_main_group;
sub new;
sub parse;
sub set_help_enabled;
sub set_ignore_unknown_options;
sub set_main_group;
}
package Glib::OptionGroup {
sub new;
sub set_translate_func;
sub set_translation_domain;
}
package Glib::Param::Char {
sub get_maximum;
sub get_minimum;
}
package Glib::Param::Double {
sub get_epsilon;
sub get_maximum;
sub get_minimum;
}
package Glib::Param::Enum {
sub get_enum_class;
}
package Glib::Param::Flags {
sub get_flags_class;
}
package Glib::Param::Float {
sub get_epsilon;
sub get_maximum;
sub get_minimum;
}
package Glib::Param::GType {
sub get_is_a_type;
}
package Glib::Param::Int {
sub get_maximum;
sub get_minimum;
}
package Glib::Param::Int64 {
sub get_maximum;
sub get_minimum;
}
package Glib::Param::Long {
sub get_maximum;
sub get_minimum;
}
package Glib::Param::UChar {
sub get_maximum;
sub get_minimum;
}
package Glib::Param::UInt {
sub get_maximum;
sub get_minimum;
}
package Glib::Param::UInt64 {
sub get_maximum;
sub get_minimum;
}
package Glib::Param::ULong {
sub get_maximum;
sub get_minimum;
}
package Glib::ParamSpec {
sub IV;
sub UV;
sub boolean;
sub boxed;
sub char;
sub double;
sub enum;
sub flags;
sub float;
sub get_blurb;
sub get_default_value;
sub get_flags;
sub get_name;
sub get_nick;
sub get_owner_type;
sub get_redirect_target;
sub get_value_type;
sub gtype;
sub int64;
sub int;
sub long;
sub object;
sub override;
sub param_spec;
sub scalar;
sub string;
sub uchar;
sub uint64;
sub uint;
sub ulong;
sub unichar;
sub value_validate;
sub values_cmp;
}
package Glib::Source {
sub remove;
}
package Glib::Timeout {
sub add;
sub add_seconds;
}
package Glib::Type {
sub list_ancestors;
sub list_interfaces;
sub list_signals;
sub list_values;
sub package_from_cname;
sub register;
sub register_enum;
sub register_flags;
sub register_object;
}
package Glib::Variant {
sub DESTROY;
sub byteswap;
sub classify;
sub compare;
sub equal;
sub get_boolean;
sub get_byte;
sub get_bytestring;
sub get_child_value;
sub get_double;
sub get_handle;
sub get_int16;
sub get_int32;
sub get_int64;
sub get_maybe;
sub get_normal_form;
sub get_size;
sub get_string;
sub get_type;
sub get_type_string;
sub get_uint16;
sub get_uint32;
sub get_uint64;
sub get_variant;
sub hash;
sub is_container;
sub is_normal_form;
sub is_object_path;
sub is_of_type;
sub is_signature;
sub lookup_value;
sub n_children;
sub new_array;
sub new_boolean;
sub new_byte;
sub new_bytestring;
sub new_dict_entry;
sub new_double;
sub new_handle;
sub new_int16;
sub new_int32;
sub new_int64;
sub new_maybe;
sub new_object_path;
sub new_signature;
sub new_string;
sub new_tuple;
sub new_uint16;
sub new_uint32;
sub new_uint64;
sub new_variant;
sub parse;
sub print;
}
package Glib::VariantType {
sub element;
sub equal;
sub first;
sub get_string;
sub hash;
sub is_array;
sub is_basic;
sub is_container;
sub is_definite;
sub is_dict_entry;
sub is_maybe;
sub is_subtype_of;
sub is_tuple;
sub is_variant;
sub key;
sub n_items;
sub new;
sub new_array;
sub new_dict_entry;
sub new_maybe;
sub new_tuple;
sub next;
sub string_is_valid;
sub string_scan;
sub value;
}
package Gnome2::Pango::Language {
sub matches;
}
package Gtk2 {
sub CHECK_VERSION;
sub GET_VERSION_INFO;
sub MAJOR_VERSION;
sub MICRO_VERSION;
sub MINOR_VERSION;
sub alternative_dialog_button_order;
sub check_version;
sub draw_insertion_cursor;
sub events_pending;
sub get_current_event;
sub get_current_event_state;
sub get_current_event_time;
sub get_default_language;
sub get_event_widget;
sub get_option_group;
sub get_version_info;
sub grab_add;
sub grab_get_current;
sub grab_remove;
sub hsv_to_rgb;
sub init_add;
sub key_snooper_install;
sub key_snooper_remove;
sub main;
sub main_do_event;
sub main_iteration;
sub main_iteration_do;
sub main_level;
sub main_quit;
sub major_version;
sub micro_version;
sub minor_version;
sub quit_add;
sub quit_add_destroy;
sub quit_remove;
sub rgb_to_hsv;
sub set_locale;
sub show_about_dialog;
sub show_uri;
sub targets_include_image;
sub targets_include_rich_text;
sub targets_include_text;
sub targets_include_uri;
}
package Gtk2::AboutDialog {
sub get_artists;
sub get_authors;
sub get_comments;
sub get_copyright;
sub get_documenters;
sub get_license;
sub get_logo;
sub get_logo_icon_name;
sub get_name;
sub get_program_name;
sub get_translator_credits;
sub get_version;
sub get_website;
sub get_website_label;
sub get_wrap_license;
sub new;
sub set_artists;
sub set_authors;
sub set_comments;
sub set_copyright;
sub set_documenters;
sub set_email_hook;
sub set_license;
sub set_logo;
sub set_logo_icon_name;
sub set_name;
sub set_program_name;
sub set_translator_credits;
sub set_url_hook;
sub set_version;
sub set_website;
sub set_website_label;
sub set_wrap_license;
}
package Gtk2::AccelGroup {
sub connect;
sub connect_by_path;
sub disconnect;
sub disconnect_key;
sub get_is_locked;
sub get_modifier_mask;
sub lock;
sub new;
sub unlock;
}
package Gtk2::AccelGroups {
sub activate;
sub from_object;
}
package Gtk2::AccelLabel {
sub get_accel_widget;
sub get_accel_width;
sub new;
sub refetch;
sub set_accel_widget;
}
package Gtk2::AccelMap {
sub add_entry;
sub add_filter;
sub change_entry;
sub foreach;
sub foreach_unfiltered;
sub get;
sub load;
sub load_fd;
sub lock_path;
sub lookup_entry;
sub save;
sub save_fd;
sub unlock_path;
}
package Gtk2::Accelerator {
sub get_default_mod_mask;
sub get_label;
sub name;
sub parse;
sub set_default_mod_mask;
sub valid;
}
package Gtk2::Action {
sub activate;
sub block_activate;
sub block_activate_from;
sub connect_accelerator;
sub connect_proxy;
sub create_icon;
sub create_menu;
sub create_menu_item;
sub create_tool_item;
sub disconnect_accelerator;
sub disconnect_proxy;
sub get_accel_path;
sub get_always_show_image;
sub get_icon_name;
sub get_is_important;
sub get_label;
sub get_name;
sub get_proxies;
sub get_sensitive;
sub get_short_label;
sub get_stock_id;
sub get_tooltip;
sub get_visible;
sub get_visible_horizontal;
sub get_visible_vertical;
sub is_sensitive;
sub is_visible;
sub set_accel_group;
sub set_accel_path;
sub set_always_show_image;
sub set_icon_name;
sub set_is_important;
sub set_label;
sub set_sensitive;
sub set_short_label;
sub set_stock_id;
sub set_tooltip;
sub set_visible;
sub set_visible_horizontal;
sub set_visible_vertical;
sub unblock_activate;
sub unblock_activate_from;
}
package Gtk2::ActionGroup {
sub add_action;
sub add_action_with_accel;
sub add_actions;
sub add_radio_actions;
sub add_toggle_actions;
sub get_action;
sub get_name;
sub get_sensitive;
sub get_visible;
sub list_actions;
sub new;
sub remove_action;
sub set_sensitive;
sub set_translate_func;
sub set_translation_domain;
sub set_visible;
sub translate_string;
}
package Gtk2::Activatable {
sub do_set_related_action;
sub get_related_action;
sub get_use_action_appearance;
sub set_related_action;
sub set_use_action_appearance;
sub sync_action_properties;
}
package Gtk2::Adjustment {
sub changed;
sub clamp_page;
sub configure;
sub get_value;
sub lower;
sub new;
sub page_increment;
sub page_size;
sub set_lower;
sub set_page_increment;
sub set_page_size;
sub set_step_increment;
sub set_upper;
sub set_value;
sub step_increment;
sub upper;
sub value;
sub value_changed;
}
package Gtk2::Alignment {
sub get_padding;
sub new;
sub set;
sub set_padding;
}
package Gtk2::Arrow {
sub new;
sub set;
}
package Gtk2::AspectFrame {
sub new;
sub set_params;
}
package Gtk2::Assistant {
sub add_action_widget;
sub append_page;
sub commit;
sub get_apply_button;
sub get_back_button;
sub get_cancel_button;
sub get_close_button;
sub get_current_page;
sub get_forward_button;
sub get_last_button;
sub get_n_pages;
sub get_nth_page;
sub get_page_complete;
sub get_page_header_image;
sub get_page_side_image;
sub get_page_title;
sub get_page_type;
sub insert_page;
sub new;
sub prepend_page;
sub remove_action_widget;
sub set_current_page;
sub set_forward_page_func;
sub set_page_complete;
sub set_page_header_image;
sub set_page_side_image;
sub set_page_title;
sub set_page_type;
sub update_buttons_state;
}
package Gtk2::Bin {
sub child;
sub get_child;
}
package Gtk2::BindingSet {
sub activate;
sub add_path;
sub by_class;
sub entry_add_signal;
sub entry_remove;
sub entry_skip;
sub find;
sub new;
sub set_name;
}
package Gtk2::Box {
sub get_homogeneous;
sub get_spacing;
sub pack_end;
sub pack_end_defaults;
sub pack_start;
sub pack_start_defaults;
sub query_child_packing;
sub reorder_child;
sub set_child_packing;
sub set_homogeneous;
sub set_spacing;
}
package Gtk2::Buildable {
sub _ADD_INTERFACE;
sub add_child;
sub construct_child;
sub get_internal_child;
sub get_name;
sub parser_finished;
sub set_buildable_property;
sub set_name;
}
package Gtk2::Buildable::ParseContext {
sub get_element;
sub get_element_stack;
sub get_position;
}
package Gtk2::Builder {
sub add_from_file;
sub add_from_string;
sub add_objects_from_file;
sub add_objects_from_string;
sub connect_signals_full;
sub get_object;
sub get_objects;
sub get_translation_domain;
sub new;
sub set_translation_domain;
}
package Gtk2::Button {
sub clicked;
sub enter;
sub get_alignment;
sub get_event_window;
sub get_focus_on_click;
sub get_image;
sub get_image_position;
sub get_label;
sub get_relief;
sub get_use_stock;
sub get_use_underline;
sub leave;
sub new;
sub new_from_stock;
sub new_with_label;
sub new_with_mnemonic;
sub pressed;
sub released;
sub set_alignment;
sub set_focus_on_click;
sub set_image;
sub set_image_position;
sub set_label;
sub set_relief;
sub set_use_stock;
sub set_use_underline;
}
package Gtk2::ButtonBox {
sub get_child_secondary;
sub get_layout;
sub set_child_secondary;
sub set_layout;
}
package Gtk2::Calendar {
sub clear_marks;
sub display_options;
sub freeze;
sub get_date;
sub get_detail_height_rows;
sub get_detail_width_chars;
sub get_display_options;
sub mark_day;
sub marked_date;
sub month;
sub new;
sub num_marked_dates;
sub select_day;
sub select_month;
sub selected_day;
sub set_detail_func;
sub set_detail_height_rows;
sub set_detail_width_chars;
sub set_display_options;
sub thaw;
sub unmark_day;
sub year;
}
package Gtk2::CellEditable {
sub _ADD_INTERFACE;
sub editing_done;
sub remove_widget;
sub start_editing;
}
package Gtk2::CellLayout {
sub _ADD_INTERFACE;
sub add_attribute;
sub clear;
sub clear_attributes;
sub get_cells;
sub pack_end;
sub pack_start;
sub reorder;
sub set_attributes;
sub set_cell_data_func;
}
package Gtk2::CellLayout::DataFunc {
sub DESTROY;
sub invoke;
}
package Gtk2::CellRenderer {
sub ACTIVATE;
sub GET_SIZE;
sub RENDER;
sub START_EDITING;
sub _INSTALL_OVERRIDES;
sub _install_overrides;
sub activate;
sub editing_canceled;
sub get_alignment;
sub get_fixed_size;
sub get_padding;
sub get_sensitive;
sub get_size;
sub get_visible;
sub parent_activate;
sub parent_get_size;
sub parent_render;
sub parent_start_editing;
sub render;
sub set_alignment;
sub set_fixed_size;
sub set_padding;
sub set_sensitive;
sub set_visible;
sub start_editing;
sub stop_editing;
}
package Gtk2::CellRendererAccel {
sub new;
}
package Gtk2::CellRendererCombo {
sub new;
}
package Gtk2::CellRendererPixbuf {
sub new;
}
package Gtk2::CellRendererProgress {
sub new;
}
package Gtk2::CellRendererSpin {
sub new;
}
package Gtk2::CellRendererSpinner {
sub new;
}
package Gtk2::CellRendererText {
sub new;
sub set_fixed_height_from_font;
}
package Gtk2::CellRendererToggle {
sub get_activatable;
sub get_active;
sub get_radio;
sub new;
sub set_activatable;
sub set_active;
sub set_radio;
}
package Gtk2::CellView {
sub get_cell_renderers;
sub get_displayed_row;
sub get_model;
sub get_size_of_row;
sub new;
sub new_with_markup;
sub new_with_pixbuf;
sub new_with_text;
sub set_background_color;
sub set_displayed_row;
sub set_model;
}
package Gtk2::CheckButton {
sub new;
sub new_with_label;
sub new_with_mnemonic;
}
package Gtk2::CheckMenuItem {
sub get_active;
sub get_draw_as_radio;
sub get_inconsistent;
sub new;
sub new_with_label;
sub new_with_mnemonic;
sub set_active;
sub set_draw_as_radio;
sub set_inconsistent;
sub set_show_toggle;
sub toggled;
}
package Gtk2::Clipboard {
sub clear;
sub get;
sub get_display;
sub get_for_display;
sub get_owner;
sub request_contents;
sub request_image;
sub request_rich_text;
sub request_targets;
sub request_text;
sub request_uris;
sub set_can_store;
sub set_image;
sub set_text;
sub set_with_data;
sub set_with_owner;
sub store;
sub wait_for_contents;
sub wait_for_image;
sub wait_for_rich_text;
sub wait_for_targets;
sub wait_for_text;
sub wait_for_uris;
sub wait_is_image_available;
sub wait_is_rich_text_available;
sub wait_is_target_available;
sub wait_is_text_available;
sub wait_is_uris_available;
}
package Gtk2::ColorButton {
sub get_alpha;
sub get_color;
sub get_title;
sub get_use_alpha;
sub new;
sub new_with_color;
sub set_alpha;
sub set_color;
sub set_title;
sub set_use_alpha;
}
package Gtk2::ColorSelection {
sub get_current_alpha;
sub get_current_color;
sub get_has_opacity_control;
sub get_has_palette;
sub get_previous_alpha;
sub get_previous_color;
sub is_adjusting;
sub new;
sub palette_from_string;
sub palette_to_string;
sub set_current_alpha;
sub set_current_color;
sub set_has_opacity_control;
sub set_has_palette;
sub set_previous_alpha;
sub set_previous_color;
}
package Gtk2::ColorSelectionDialog {
sub cancel_button;
sub colorsel;
sub get_color_selection;
sub help_button;
sub new;
sub ok_button;
}
package Gtk2::Combo {
sub disable_activate;
sub entry;
sub list;
sub new;
sub set_case_sensitive;
sub set_item_string;
sub set_popdown_strings;
sub set_use_arrows;
sub set_use_arrows_always;
sub set_value_in_list;
}
package Gtk2::ComboBox {
sub append_text;
sub get_active;
sub get_active_iter;
sub get_active_text;
sub get_add_tearoffs;
sub get_button_sensitivity;
sub get_column_span_column;
sub get_focus_on_click;
sub get_model;
sub get_row_span_column;
sub get_title;
sub get_wrap_width;
sub insert_text;
sub new;
sub new_text;
sub new_with_model;
sub popdown;
sub popup;
sub prepend_text;
sub remove_text;
sub set_active;
sub set_active_iter;
sub set_add_tearoffs;
sub set_button_sensitivity;
sub set_column_span_column;
sub set_focus_on_click;
sub set_model;
sub set_row_separator_func;
sub set_row_span_column;
sub set_title;
sub set_wrap_width;
}
package Gtk2::ComboBoxEntry {
sub get_text_column;
sub new;
sub new_text;
sub new_with_model;
sub set_text_column;
}
package Gtk2::Container {
sub add;
sub add_with_properties;
sub check_resize;
sub child_get;
sub child_get_property;
sub child_set;
sub child_set_property;
sub child_type;
sub find_child_property;
sub forall;
sub foreach;
sub get_border_width;
sub get_children;
sub get_focus_chain;
sub get_focus_child;
sub get_focus_hadjustment;
sub get_focus_vadjustment;
sub get_resize_mode;
sub list_child_properties;
sub propagate_expose;
sub remove;
sub resize_children;
sub set_border_width;
sub set_focus_chain;
sub set_focus_child;
sub set_focus_hadjustment;
sub set_focus_vadjustment;
sub set_reallocate_redraws;
sub set_resize_mode;
sub unset_focus_chain;
}
package Gtk2::Curve {
sub get_vector;
sub new;
sub reset;
sub set_curve_type;
sub set_gamma;
sub set_range;
sub set_vector;
}
package Gtk2::Dialog {
sub action_area;
sub add_action_widget;
sub add_button;
sub add_buttons;
sub get_action_area;
sub get_content_area;
sub get_has_separator;
sub get_response_for_widget;
sub get_widget_for_response;
sub new;
sub new_with_buttons;
sub response;
sub run;
sub set_alternative_button_order;
sub set_default_response;
sub set_has_separator;
sub set_response_sensitive;
sub vbox;
}
package Gtk2::Drag {
sub begin;
}
package Gtk2::DrawingArea {
sub new;
sub size;
}
package Gtk2::Editable {
sub copy_clipboard;
sub cut_clipboard;
sub delete_selection;
sub delete_text;
sub get_chars;
sub get_editable;
sub get_position;
sub get_selection_bounds;
sub insert_text;
sub paste_clipboard;
sub select_region;
sub set_editable;
sub set_position;
}
package Gtk2::Entry {
sub append_text;
sub get_activates_default;
sub get_alignment;
sub get_buffer;
sub get_completion;
sub get_current_icon_drag_source;
sub get_cursor_hadjustment;
sub get_has_frame;
sub get_icon_activatable;
sub get_icon_at_pos;
sub get_icon_name;
sub get_icon_pixbuf;
sub get_icon_sensitive;
sub get_icon_stock;
sub get_icon_storage_type;
sub get_icon_tooltip_markup;
sub get_icon_tooltip_text;
sub get_icon_window;
sub get_inner_border;
sub get_invisible_char;
sub get_layout;
sub get_layout_offsets;
sub get_max_length;
sub get_overwrite_mode;
sub get_progress_fraction;
sub get_progress_pulse_step;
sub get_text;
sub get_text_length;
sub get_text_window;
sub get_visibility;
sub get_width_chars;
sub im_context_filter_keypress;
sub layout_index_to_text_index;
sub new;
sub new_with_buffer;
sub new_with_max_length;
sub prepend_text;
sub progress_pulse;
sub reset_im_context;
sub select_region;
sub set_activates_default;
sub set_alignment;
sub set_buffer;
sub set_completion;
sub set_cursor_hadjustment;
sub set_editable;
sub set_has_frame;
sub set_icon_activatable;
sub set_icon_drag_source;
sub set_icon_from_icon_name;
sub set_icon_from_pixbuf;
sub set_icon_from_stock;
sub set_icon_sensitive;
sub set_icon_tooltip_markup;
sub set_icon_tooltip_text;
sub set_inner_border;
sub set_invisible_char;
sub set_max_length;
sub set_overwrite_mode;
sub set_position;
sub set_progress_fraction;
sub set_progress_pulse_step;
sub set_text;
sub set_visibility;
sub set_width_chars;
sub text_index_to_layout_index;
sub unset_invisible_char;
}
package Gtk2::EntryBuffer {
sub delete_text;
sub emit_deleted_text;
sub emit_inserted_text;
sub get_bytes;
sub get_length;
sub get_max_length;
sub get_text;
sub insert_text;
sub new;
sub set_max_length;
sub set_text;
}
package Gtk2::EntryCompletion {
sub complete;
sub delete_action;
sub get_completion_prefix;
sub get_entry;
sub get_inline_completion;
sub get_inline_selection;
sub get_minimum_key_length;
sub get_model;
sub get_popup_completion;
sub get_popup_set_width;
sub get_popup_single_match;
sub get_text_column;
sub insert_action_markup;
sub insert_action_text;
sub insert_prefix;
sub new;
sub set_inline_completion;
sub set_inline_selection;
sub set_match_func;
sub set_minimum_key_length;
sub set_model;
sub set_popup_completion;
sub set_popup_set_width;
sub set_popup_single_match;
sub set_text_column;
}
package Gtk2::EventBox {
sub get_above_child;
sub get_visible_window;
sub new;
sub set_above_child;
sub set_visible_window;
}
package Gtk2::Expander {
sub get_expanded;
sub get_label;
sub get_label_fill;
sub get_label_widget;
sub get_spacing;
sub get_use_markup;
sub get_use_underline;
sub new;
sub new_with_mnemonic;
sub set_expanded;
sub set_label;
sub set_label_fill;
sub set_label_widget;
sub set_spacing;
sub set_use_markup;
sub set_use_underline;
}
package Gtk2::FileChooser {
sub add_filter;
sub add_shortcut_folder;
sub add_shortcut_folder_uri;
sub get_action;
sub get_create_folders;
sub get_current_folder;
sub get_current_folder_uri;
sub get_do_overwrite_confirmation;
sub get_extra_widget;
sub get_filename;
sub get_filenames;
sub get_filter;
sub get_local_only;
sub get_preview_filename;
sub get_preview_uri;
sub get_preview_widget;
sub get_preview_widget_active;
sub get_select_multiple;
sub get_show_hidden;
sub get_uri;
sub get_uris;
sub get_use_preview_label;
sub list_filters;
sub list_shortcut_folder_uris;
sub list_shortcut_folders;
sub remove_filter;
sub remove_shortcut_folder;
sub remove_shortcut_folder_uri;
sub select_all;
sub select_filename;
sub select_uri;
sub set_action;
sub set_create_folders;
sub set_current_folder;
sub set_current_folder_uri;
sub set_current_name;
sub set_do_overwrite_confirmation;
sub set_extra_widget;
sub set_filename;
sub set_filter;
sub set_local_only;
sub set_preview_widget;
sub set_preview_widget_active;
sub set_select_multiple;
sub set_show_hidden;
sub set_uri;
sub set_use_preview_label;
sub unselect_all;
sub unselect_filename;
sub unselect_uri;
}
package Gtk2::FileChooserButton {
sub get_focus_on_click;
sub get_title;
sub get_width_chars;
sub new;
sub new_with_backend;
sub new_with_dialog;
sub set_focus_on_click;
sub set_title;
sub set_width_chars;
}
package Gtk2::FileChooserDialog {
sub new;
sub new_with_backend;
}
package Gtk2::FileChooserWidget {
sub new;
sub new_with_backend;
}
package Gtk2::FileFilter {
sub add_custom;
sub add_mime_type;
sub add_pattern;
sub add_pixbuf_formats;
sub filter;
sub get_name;
sub get_needed;
sub new;
sub set_name;
}
package Gtk2::FileSelection {
sub action_area;
sub button_area;
sub cancel_button;
sub complete;
sub dir_list;
sub file_list;
sub fileop_c_dir;
sub fileop_del_file;
sub fileop_dialog;
sub fileop_entry;
sub fileop_file;
sub fileop_ren_file;
sub get_filename;
sub get_select_multiple;
sub get_selections;
sub help_button;
sub hide_fileop_buttons;
sub history_menu;
sub history_pulldown;
sub main_vbox;
sub new;
sub ok_button;
sub selection_entry;
sub selection_text;
sub set_filename;
sub set_select_multiple;
sub show_fileop_buttons;
}
package Gtk2::Fixed {
sub get_has_window;
sub move;
sub new;
sub put;
sub set_has_window;
}
package Gtk2::FontButton {
sub get_font_name;
sub get_show_size;
sub get_show_style;
sub get_title;
sub get_use_font;
sub get_use_size;
sub new;
sub new_with_font;
sub set_font_name;
sub set_show_size;
sub set_show_style;
sub set_title;
sub set_use_font;
sub set_use_size;
}
package Gtk2::FontSelection {
sub get_face;
sub get_face_list;
sub get_family;
sub get_family_list;
sub get_font;
sub get_font_name;
sub get_preview_entry;
sub get_preview_text;
sub get_size;
sub get_size_entry;
sub get_size_list;
sub new;
sub set_font_name;
sub set_preview_text;
}
package Gtk2::FontSelectionDialog {
sub apply_button;
sub cancel_button;
sub get_apply_button;
sub get_cancel_button;
sub get_font;
sub get_font_name;
sub get_font_selection;
sub get_ok_button;
sub get_preview_text;
sub new;
sub ok_button;
sub set_font_name;
sub set_preview_text;
}
package Gtk2::Frame {
sub get_label;
sub get_label_align;
sub get_label_widget;
sub get_shadow_type;
sub new;
sub set_label;
sub set_label_align;
sub set_label_widget;
sub set_shadow_type;
}
package Gtk2::GC {
sub DESTROY;
sub get;
sub release;
}
package Gtk2::GammaCurve {
sub curve;
sub new;
}
package Gtk2::Gdk {
sub SELECTION_CLIPBOARD;
sub SELECTION_PRIMARY;
sub SELECTION_SECONDARY;
sub SELECTION_TYPE_ATOM;
sub SELECTION_TYPE_BITMAP;
sub SELECTION_TYPE_COLORMAP;
sub SELECTION_TYPE_DRAWABLE;
sub SELECTION_TYPE_INTEGER;
sub SELECTION_TYPE_PIXMAP;
sub SELECTION_TYPE_STRING;
sub SELECTION_TYPE_WINDOW;
sub TARGET_BITMAP;
sub TARGET_COLORMAP;
sub TARGET_DRAWABLE;
sub TARGET_PIXMAP;
sub TARGET_STRING;
sub beep;
sub devices_list;
sub error_trap_pop;
sub error_trap_push;
sub events_pending;
sub flush;
sub get_default_root_window;
sub get_display;
sub get_display_arg_name;
sub get_program_class;
sub get_show_events;
sub init;
sub init_check;
sub keyboard_grab;
sub keyboard_ungrab;
sub keyval_convert_case;
sub keyval_from_name;
sub keyval_is_lower;
sub keyval_is_upper;
sub keyval_name;
sub keyval_to_lower;
sub keyval_to_unicode;
sub keyval_to_upper;
sub list_visuals;
sub notify_startup_complete;
sub notify_startup_complete_with_id;
sub parse_args;
sub pointer_grab;
sub pointer_is_grabbed;
sub pointer_ungrab;
sub query_depths;
sub query_visual_types;
sub screen_height;
sub screen_height_mm;
sub screen_width;
sub screen_width_mm;
sub set_locale;
sub set_program_class;
sub set_show_events;
sub set_sm_client_id;
sub setting_get;
sub string_to_compound_text;
sub string_to_compound_text_for_display;
sub text_property_to_text_list;
sub text_property_to_text_list_for_display;
sub text_property_to_utf8_list;
sub text_property_to_utf8_list_for_display;
sub unicode_to_keyval;
sub utf8_to_compound_text;
sub utf8_to_compound_text_for_display;
sub utf8_to_string_target;
}
package Gtk2::Gdk::Atom {
sub eq;
sub intern;
sub name;
sub ne;
sub new;
sub to_xatom;
sub to_xatom_for_display;
}
package Gtk2::Gdk::Bitmap {
sub create_from_data;
}
package Gtk2::Gdk::Cairo::Context {
sub create;
sub rectangle;
sub region;
sub reset_clip;
sub set_source_color;
sub set_source_pixbuf;
sub set_source_pixmap;
}
package Gtk2::Gdk::Color {
sub blue;
sub equal;
sub green;
sub hash;
sub new;
sub parse;
sub pixel;
sub red;
sub to_string;
}
package Gtk2::Gdk::Colormap {
sub alloc_color;
sub alloc_colors;
sub free_colors;
sub get_screen;
sub get_system;
sub get_visual;
sub new;
sub query_color;
sub rgb_find_color;
}
package Gtk2::Gdk::Cursor {
sub get_cursor_type;
sub get_display;
sub get_image;
sub new;
sub new_for_display;
sub new_from_name;
sub new_from_pixbuf;
sub new_from_pixmap;
sub type;
}
package Gtk2::Gdk::Device {
sub axes;
sub get_axis;
sub get_axis_use;
sub get_core_pointer;
sub get_history;
sub get_key;
sub get_mode;
sub get_n_axes;
sub get_name;
sub get_source;
sub get_state;
sub has_cursor;
sub keys;
sub mode;
sub name;
sub set_axis_use;
sub set_key;
sub set_mode;
sub set_source;
sub source;
}
package Gtk2::Gdk::Display {
sub beep;
sub close;
sub flush;
sub get_core_pointer;
sub get_default;
sub get_default_cursor_size;
sub get_default_group;
sub get_default_screen;
sub get_event;
sub get_maximal_cursor_size;
sub get_n_screens;
sub get_name;
sub get_pointer;
sub get_screen;
sub get_startup_notification_id;
sub get_user_time;
sub get_window_at_pointer;
sub grab;
sub is_closed;
sub keyboard_ungrab;
sub list_devices;
sub open;
sub peek_event;
sub pointer_is_grabbed;
sub pointer_ungrab;
sub put_event;
sub register_standard_event_type;
sub request_selection_notification;
sub set_cursor_theme;
sub set_double_click_distance;
sub set_double_click_time;
sub store_clipboard;
sub supports_clipboard_persistence;
sub supports_composite;
sub supports_cursor_alpha;
sub supports_cursor_color;
sub supports_input_shapes;
sub supports_selection_notification;
sub supports_shapes;
sub sync;
sub ungrab;
sub warp_pointer;
}
package Gtk2::Gdk::DisplayManager {
sub get;
sub get_default_display;
sub list_displays;
sub set_default_display;
}
package Gtk2::Gdk::DragContext {
sub abort;
sub action;
sub actions;
sub begin;
sub dest_window;
sub drag_drop_succeeded;
sub drop;
sub drop_finish;
sub drop_reply;
sub find_window;
sub find_window_for_screen;
sub finish;
sub get_actions;
sub get_protocol;
sub get_protocol_for_display;
sub get_selected_action;
sub get_selection;
sub get_source_widget;
sub get_source_window;
sub get_suggested_action;
sub is_source;
sub list_targets;
sub motion;
sub new;
sub protocol;
sub set_icon_default;
sub set_icon_name;
sub set_icon_pixbuf;
sub set_icon_pixmap;
sub set_icon_stock;
sub set_icon_widget;
sub source_window;
sub start_time;
sub status;
sub suggested_action;
sub targets;
}
package Gtk2::Gdk::Drawable {
sub XID;
sub XWINDOW;
sub copy_to_image;
sub draw_arc;
sub draw_drawable;
sub draw_gray_image;
sub draw_image;
sub draw_indexed_image;
sub draw_layout;
sub draw_layout_line;
sub draw_layout_line_with_colors;
sub draw_layout_with_colors;
sub draw_line;
sub draw_lines;
sub draw_pixbuf;
sub draw_point;
sub draw_points;
sub draw_polygon;
sub draw_rectangle;
sub draw_rgb_32_image;
sub draw_rgb_32_image_dithalign;
sub draw_rgb_image;
sub draw_rgb_image_dithalign;
sub draw_segments;
sub get_clip_region;
sub get_colormap;
sub get_depth;
sub get_display;
sub get_image;
sub get_screen;
sub get_size;
sub get_visible_region;
sub get_visual;
sub get_xid;
sub set_colormap;
}
package Gtk2::Gdk::Event {
sub DESTROY;
sub axis;
sub coords;
sub copy;
sub get;
sub get_axis;
sub get_coords;
sub get_graphics_expose;
sub get_root_coords;
sub get_screen;
sub get_state;
sub get_time;
sub handler_set;
sub new;
sub peek;
sub put;
sub root_coords;
sub send_client_message;
sub send_client_message_for_display;
sub send_clientmessage_toall;
sub send_event;
sub set_screen;
sub set_state;
sub set_time;
sub state;
sub time;
sub type;
sub window;
sub x_root;
sub y_root;
}
package Gtk2::Gdk::Event::Button {
sub DESTROY;
sub button;
sub device;
sub x;
sub y;
}
package Gtk2::Gdk::Event::Client {
sub DESTROY;
sub data;
sub data_format;
sub message_type;
}
package Gtk2::Gdk::Event::Configure {
sub DESTROY;
sub height;
sub width;
sub x;
sub y;
}
package Gtk2::Gdk::Event::Crossing {
sub DESTROY;
sub detail;
sub focus;
sub mode;
sub subwindow;
sub x;
sub y;
}
package Gtk2::Gdk::Event::DND {
sub DESTROY;
sub context;
}
package Gtk2::Gdk::Event::Expose {
sub DESTROY;
sub area;
sub count;
sub region;
}
package Gtk2::Gdk::Event::Focus {
sub DESTROY;
sub in;
}
package Gtk2::Gdk::Event::GrabBroken {
sub DESTROY;
sub grab_window;
sub implicit;
sub keyboard;
}
package Gtk2::Gdk::Event::Key {
sub DESTROY;
sub group;
sub hardware_keycode;
sub keyval;
}
package Gtk2::Gdk::Event::Motion {
sub DESTROY;
sub device;
sub is_hint;
sub request_motions;
sub x;
sub y;
}
package Gtk2::Gdk::Event::NoExpose {
sub DESTROY;
}
package Gtk2::Gdk::Event::OwnerChange {
sub DESTROY;
sub owner;
sub reason;
sub selection;
sub selection_time;
}
package Gtk2::Gdk::Event::Property {
sub DESTROY;
sub atom;
sub state;
}
package Gtk2::Gdk::Event::Proximity {
sub DESTROY;
sub device;
}
package Gtk2::Gdk::Event::Scroll {
sub DESTROY;
sub device;
sub direction;
sub x;
sub y;
}
package Gtk2::Gdk::Event::Selection {
sub DESTROY;
sub property;
sub requestor;
sub selection;
sub target;
}
package Gtk2::Gdk::Event::Setting {
sub DESTROY;
sub action;
sub name;
}
package Gtk2::Gdk::Event::Visibility {
sub DESTROY;
sub state;
}
package Gtk2::Gdk::Event::WindowState {
sub DESTROY;
sub changed_mask;
sub new_window_state;
}
package Gtk2::Gdk::GC {
sub copy;
sub get_colormap;
sub get_screen;
sub get_values;
sub new;
sub new_with_values;
sub offset;
sub rgb_gc_set_background;
sub rgb_gc_set_foreground;
sub set_background;
sub set_clip_mask;
sub set_clip_origin;
sub set_clip_rectangle;
sub set_clip_region;
sub set_colormap;
sub set_dashes;
sub set_exposures;
sub set_fill;
sub set_font;
sub set_foreground;
sub set_function;
sub set_line_attributes;
sub set_rgb_background;
sub set_rgb_bg_color;
sub set_rgb_fg_color;
sub set_rgb_foreground;
sub set_stipple;
sub set_subwindow;
sub set_tile;
sub set_ts_origin;
sub set_values;
}
package Gtk2::Gdk::Geometry {
sub base_height;
sub base_width;
sub constrain_size;
sub gravity;
sub height_inc;
sub max_aspect;
sub max_height;
sub max_width;
sub min_aspect;
sub min_height;
sub min_width;
sub new;
sub width_inc;
sub win_gravity;
}
package Gtk2::Gdk::Image {
sub get_bits_per_pixel;
sub get_byte_order;
sub get_bytes_per_line;
sub get_bytes_per_pixel;
sub get_colormap;
sub get_depth;
sub get_height;
sub get_image_type;
sub get_pixel;
sub get_pixels;
sub get_visual;
sub get_width;
sub new;
sub put_pixel;
sub set_colormap;
}
package Gtk2::Gdk::Input {
sub set_extension_events;
}
package Gtk2::Gdk::Keymap {
sub add_virtual_modifiers;
sub get_caps_lock_state;
sub get_default;
sub get_direction;
sub get_entries_for_keycode;
sub get_entries_for_keyval;
sub get_for_display;
sub have_bidi_layouts;
sub lookup_key;
sub map_virtual_modifiers;
sub translate_keyboard_state;
}
package Gtk2::Gdk::Pango::AttrEmbossColor {
sub color;
sub new;
}
package Gtk2::Gdk::Pango::AttrEmbossed {
sub embossed;
sub new;
}
package Gtk2::Gdk::Pango::AttrStipple {
sub new;
sub stipple;
}
package Gtk2::Gdk::PangoRenderer {
sub get_default;
sub new;
sub set_drawable;
sub set_gc;
sub set_override_color;
sub set_stipple;
}
package Gtk2::Gdk::Pixbuf {
sub add_alpha;
sub apply_embedded_orientation;
sub composite;
sub composite_color;
sub composite_color_simple;
sub copy;
sub copy_area;
sub fill;
sub flip;
sub get_bits_per_sample;
sub get_colorspace;
sub get_file_info;
sub get_formats;
sub get_from_drawable;
sub get_from_image;
sub get_has_alpha;
sub get_height;
sub get_n_channels;
sub get_option;
sub get_pixels;
sub get_rowstride;
sub get_width;
sub new;
sub new_from_data;
sub new_from_file;
sub new_from_file_at_scale;
sub new_from_file_at_size;
sub new_from_inline;
sub new_from_xpm_data;
sub new_subpixbuf;
sub render_pixmap_and_mask;
sub render_pixmap_and_mask_for_colormap;
sub render_threshold_alpha;
sub render_to_drawable;
sub render_to_drawable_alpha;
sub rotate_simple;
sub saturate_and_pixelate;
sub save;
sub save_to_buffer;
sub scale;
sub scale_simple;
sub set_option;
}
package Gtk2::Gdk::PixbufAnimation {
sub get_height;
sub get_iter;
sub get_static_image;
sub get_width;
sub is_static_image;
sub new_from_file;
}
package Gtk2::Gdk::PixbufAnimationIter {
sub advance;
sub get_delay_time;
sub get_pixbuf;
sub on_currently_loading_frame;
}
package Gtk2::Gdk::PixbufFormat {
sub DESTROY;
sub set_disabled;
}
package Gtk2::Gdk::PixbufLoader {
sub close;
sub get_animation;
sub get_format;
sub get_pixbuf;
sub new;
sub new_with_mime_type;
sub new_with_type;
sub set_size;
sub write;
}
package Gtk2::Gdk::PixbufSimpleAnim {
sub add_frame;
sub get_loop;
sub new;
sub set_loop;
}
package Gtk2::Gdk::Pixmap {
sub colormap_create_from_xpm;
sub colormap_create_from_xpm_d;
sub create_from_data;
sub create_from_xpm;
sub create_from_xpm_d;
sub foreign_new;
sub foreign_new_for_display;
sub foreign_new_for_screen;
sub lookup;
sub lookup_for_display;
sub new;
}
package Gtk2::Gdk::Rectangle {
sub height;
sub intersect;
sub new;
sub union;
sub values;
sub width;
sub x;
sub y;
}
package Gtk2::Gdk::Region {
sub empty;
sub equal;
sub get_clipbox;
sub get_rectangles;
sub intersect;
sub new;
sub offset;
sub point_in;
sub polygon;
sub rect_equal;
sub rect_in;
sub rectangle;
sub shrink;
sub spans_intersect_foreach;
sub subtract;
sub union;
sub union_with_rect;
sub xor;
}
package Gtk2::Gdk::Rgb {
sub colormap_ditherable;
sub ditherable;
sub set_install;
sub set_min_colors;
sub set_verbose;
}
package Gtk2::Gdk::Screen {
sub broadcast_client_message;
sub get_active_window;
sub get_default;
sub get_default_colormap;
sub get_display;
sub get_font_options;
sub get_height;
sub get_height_mm;
sub get_monitor_at_point;
sub get_monitor_at_window;
sub get_monitor_geometry;
sub get_monitor_height_mm;
sub get_monitor_output;
sub get_monitor_plug_name;
sub get_monitor_width_mm;
sub get_n_monitors;
sub get_number;
sub get_primary_monitor;
sub get_resolution;
sub get_rgb_colormap;
sub get_rgb_visual;
sub get_rgba_colormap;
sub get_rgba_visual;
sub get_root_window;
sub get_screen_number;
sub get_setting;
sub get_system_colormap;
sub get_system_visual;
sub get_toplevel_windows;
sub get_width;
sub get_width_mm;
sub get_window_manager_name;
sub get_window_stack;
sub is_composited;
sub list_visuals;
sub make_display_name;
sub set_default_colormap;
sub set_font_options;
sub set_resolution;
sub supports_net_wm_hint;
}
package Gtk2::Gdk::Selection {
sub convert;
sub owner_get;
sub owner_get_for_display;
sub owner_set;
sub owner_set_for_display;
sub property_get;
sub send_notify;
sub send_notify_for_display;
}
package Gtk2::Gdk::Threads {
sub enter;
sub init;
sub leave;
}
package Gtk2::Gdk::Visual {
sub bits_per_rgb;
sub blue_mask;
sub blue_prec;
sub blue_shift;
sub byte_order;
sub colormap_size;
sub depth;
sub get_best;
sub get_best_depth;
sub get_best_type;
sub get_best_with_both;
sub get_best_with_depth;
sub get_best_with_type;
sub get_bits_per_rgb;
sub get_blue_pixel_details;
sub get_byte_order;
sub get_colormap_size;
sub get_depth;
sub get_green_pixel_details;
sub get_red_pixel_details;
sub get_screen;
sub get_system;
sub get_visual_type;
sub green_mask;
sub green_prec;
sub green_shift;
sub red_mask;
sub red_prec;
sub red_shift;
sub type;
}
package Gtk2::Gdk::Window {
sub at_pointer;
sub beep;
sub begin_move_drag;
sub begin_paint_rect;
sub begin_paint_region;
sub begin_resize_drag;
sub clear;
sub clear_area;
sub clear_area_e;
sub configure_finished;
sub coords_from_parent;
sub coords_to_parent;
sub create_similar_surface;
sub deiconify;
sub destroy;
sub enable_synchronized_configure;
sub end_paint;
sub ensure_native;
sub flush;
sub focus;
sub foreign_new;
sub foreign_new_for_display;
sub freeze_updates;
sub fullscreen;
sub gdk_set_sm_client_id;
sub geometry_changed;
sub get_accept_focus;
sub get_background_pattern;
sub get_children;
sub get_composited;
sub get_cursor;
sub get_decorations;
sub get_effective_parent;
sub get_effective_toplevel;
sub get_embedder;
sub get_events;
sub get_focus_on_map;
sub get_frame_extents;
sub get_geometry;
sub get_group;
sub get_internal_paint_info;
sub get_modal_hint;
sub get_origin;
sub get_parent;
sub get_pixmap;
sub get_pointer;
sub get_position;
sub get_root_coords;
sub get_root_origin;
sub get_state;
sub get_toplevel;
sub get_toplevels;
sub get_type_hint;
sub get_update_area;
sub get_user_data;
sub get_window_type;
sub has_native;
sub hide;
sub iconify;
sub input_shape_combine_mask;
sub input_shape_combine_region;
sub invalidate_maybe_recurse;
sub invalidate_rect;
sub invalidate_region;
sub is_destroyed;
sub is_input_only;
sub is_shaped;
sub is_viewable;
sub is_visible;
sub lookup;
sub lookup_for_display;
sub lower;
sub maximize;
sub merge_child_input_shapes;
sub merge_child_shapes;
sub move;
sub move_region;
sub move_resize;
sub move_to_current_desktop;
sub new;
sub peek_children;
sub process_all_updates;
sub process_updates;
sub property_change;
sub property_delete;
sub property_get;
sub raise;
sub redirect_to_drawable;
sub register_dnd;
sub remove_redirection;
sub reparent;
sub resize;
sub restack;
sub scroll;
sub set_accept_focus;
sub set_back_pixmap;
sub set_background;
sub set_child_input_shapes;
sub set_child_shapes;
sub set_composited;
sub set_cursor;
sub set_debug_updates;
sub set_decorations;
sub set_embedder;
sub set_events;
sub set_focus_on_map;
sub set_functions;
sub set_geometry_hints;
sub set_group;
sub set_icon;
sub set_icon_list;
sub set_icon_name;
sub set_keep_above;
sub set_keep_below;
sub set_modal_hint;
sub set_opacity;
sub set_override_redirect;
sub set_role;
sub set_skip_pager_hint;
sub set_skip_taskbar_hint;
sub set_startup_id;
sub set_static_gravities;
sub set_title;
sub set_transient_for;
sub set_type_hint;
sub set_urgency_hint;
sub set_user_data;
sub set_user_time;
sub shape_combine_mask;
sub shape_combine_region;
sub show;
sub show_unraised;
sub stick;
sub thaw_updates;
sub unfullscreen;
sub unmaximize;
sub unstick;
sub withdraw;
}
package Gtk2::Gdk::X11 {
sub get_default_screen;
sub get_server_time;
sub grab_server;
sub net_wm_supports;
sub ungrab_server;
}
package Gtk2::HBox {
sub new;
}
package Gtk2::HButtonBox {
sub get_layout_default;
sub get_spacing_default;
sub new;
sub set_layout_default;
sub set_spacing_default;
}
package Gtk2::HPaned {
sub new;
}
package Gtk2::HRuler {
sub new;
}
package Gtk2::HSV {
sub get_color;
sub get_metrics;
sub is_adjusting;
sub new;
sub set_color;
sub set_metrics;
}
package Gtk2::HScale {
sub new;
sub new_with_range;
}
package Gtk2::HScrollBar {
sub new;
}
package Gtk2::HScrollbar {
sub new;
}
package Gtk2::HSeparator {
sub new;
}
package Gtk2::HandleBox {
sub get_child_detached;
sub get_handle_position;
sub get_shadow_type;
sub get_snap_edge;
sub new;
sub set_handle_position;
sub set_shadow_type;
sub set_snap_edge;
}
package Gtk2::IMContext {
sub delete_surrounding;
sub filter_keypress;
sub focus_in;
sub focus_out;
sub get_preedit_string;
sub get_surrounding;
sub reset;
sub set_client_window;
sub set_cursor_location;
sub set_surrounding;
sub set_use_preedit;
}
package Gtk2::IMContextSimple {
sub new;
}
package Gtk2::IMMulticontext {
sub append_menuitems;
sub get_context_id;
sub new;
sub set_context_id;
}
package Gtk2::IconFactory {
sub add;
sub add_default;
sub lookup;
sub lookup_default;
sub new;
sub remove_default;
}
package Gtk2::IconInfo {
sub get_attach_points;
sub get_base_size;
sub get_builtin_pixbuf;
sub get_display_name;
sub get_embedded_rect;
sub get_filename;
sub load_icon;
sub new_for_pixbuf;
sub set_raw_coordinates;
}
package Gtk2::IconSet {
sub add_source;
sub get_sizes;
sub new;
sub new_from_pixbuf;
sub render_icon;
}
package Gtk2::IconSize {
sub from_name;
sub lookup;
sub lookup_for_settings;
sub register;
sub register_alias;
}
package Gtk2::IconSource {
sub get_direction;
sub get_direction_wildcarded;
sub get_filename;
sub get_icon_name;
sub get_pixbuf;
sub get_size;
sub get_size_wildcarded;
sub get_state;
sub get_state_wildcarded;
sub new;
sub set_direction;
sub set_direction_wildcarded;
sub set_filename;
sub set_icon_name;
sub set_pixbuf;
sub set_size;
sub set_size_wildcarded;
sub set_state;
sub set_state_wildcarded;
}
package Gtk2::IconTheme {
sub add_builtin_icon;
sub append_search_path;
sub choose_icon;
sub get_default;
sub get_example_icon_name;
sub get_for_screen;
sub get_icon_sizes;
sub get_search_path;
sub has_icon;
sub list_contexts;
sub list_icons;
sub load_icon;
sub lookup_icon;
sub new;
sub prepend_search_path;
sub rescan_if_needed;
sub set_custom_theme;
sub set_screen;
sub set_search_path;
}
package Gtk2::IconView {
sub convert_widget_to_bin_window_coords;
sub create_drag_icon;
sub enable_model_drag_dest;
sub enable_model_drag_source;
sub get_column_spacing;
sub get_columns;
sub get_cursor;
sub get_dest_item_at_pos;
sub get_drag_dest_item;
sub get_item_at_pos;
sub get_item_column;
sub get_item_orientation;
sub get_item_padding;
sub get_item_row;
sub get_item_width;
sub get_margin;
sub get_markup_column;
sub get_model;
sub get_orientation;
sub get_path_at_pos;
sub get_pixbuf_column;
sub get_reorderable;
sub get_row_spacing;
sub get_selected_items;
sub get_selection_mode;
sub get_spacing;
sub get_text_column;
sub get_tooltip_column;
sub get_tooltip_context;
sub get_visible_range;
sub item_activated;
sub new;
sub new_with_model;
sub path_is_selected;
sub scroll_to_path;
sub select_all;
sub select_path;
sub selected_foreach;
sub set_column_spacing;
sub set_columns;
sub set_cursor;
sub set_drag_dest_item;
sub set_item_orientation;
sub set_item_padding;
sub set_item_width;
sub set_margin;
sub set_markup_column;
sub set_model;
sub set_orientation;
sub set_pixbuf_column;
sub set_reorderable;
sub set_row_spacing;
sub set_selection_mode;
sub set_spacing;
sub set_text_column;
sub set_tooltip_cell;
sub set_tooltip_column;
sub set_tooltip_item;
sub unselect_all;
sub unselect_path;
sub unset_model_drag_dest;
sub unset_model_drag_source;
}
package Gtk2::Image {
sub clear;
sub get_animation;
sub get_icon_name;
sub get_icon_set;
sub get_image;
sub get_pixbuf;
sub get_pixel_size;
sub get_pixmap;
sub get_stock;
sub get_storage_type;
sub new;
sub new_from_animation;
sub new_from_file;
sub new_from_icon_name;
sub new_from_icon_set;
sub new_from_image;
sub new_from_pixbuf;
sub new_from_pixmap;
sub new_from_stock;
sub set_from_animation;
sub set_from_file;
sub set_from_icon_name;
sub set_from_icon_set;
sub set_from_image;
sub set_from_pixbuf;
sub set_from_pixmap;
sub set_from_stock;
sub set_pixel_size;
}
package Gtk2::ImageMenuItem {
sub get_always_show_image;
sub get_image;
sub get_use_stock;
sub new;
sub new_from_stock;
sub new_with_label;
sub new_with_mnemonic;
sub set_accel_group;
sub set_always_show_image;
sub set_image;
sub set_use_stock;
}
package Gtk2::InfoBar {
sub add_action_widget;
sub add_button;
sub add_buttons;
sub get_action_area;
sub get_content_area;
sub get_message_type;
sub new;
sub new_with_buttons;
sub response;
sub set_default_response;
sub set_message_type;
sub set_response_sensitive;
}
package Gtk2::InputDialog {
sub new;
}
package Gtk2::Invisible {
sub get_screen;
sub new;
sub new_for_screen;
sub set_screen;
}
package Gtk2::Item {
sub deselect;
sub select;
sub toggle;
}
package Gtk2::ItemFactory {
sub create_item;
sub create_items;
sub delete_entries;
sub delete_entry;
sub delete_item;
sub from_widget;
sub get_item;
sub get_item_by_action;
sub get_widget;
sub get_widget_by_action;
sub new;
sub path_from_widget;
sub popup;
sub popup_data;
sub popup_data_from_widget;
sub set_translate_func;
}
package Gtk2::Label {
sub get_angle;
sub get_attributes;
sub get_current_uri;
sub get_ellipsize;
sub get_justify;
sub get_label;
sub get_layout;
sub get_layout_offsets;
sub get_line_wrap;
sub get_line_wrap_mode;
sub get_max_width_chars;
sub get_mnemonic_keyval;
sub get_mnemonic_widget;
sub get_selectable;
sub get_selection_bounds;
sub get_single_line_mode;
sub get_text;
sub get_track_visited_links;
sub get_use_markup;
sub get_use_underline;
sub get_width_chars;
sub new;
sub new_with_mnemonic;
sub select_region;
sub set_angle;
sub set_attributes;
sub set_ellipsize;
sub set_justify;
sub set_label;
sub set_line_wrap;
sub set_line_wrap_mode;
sub set_markup;
sub set_markup_with_mnemonic;
sub set_max_width_chars;
sub set_mnemonic_widget;
sub set_pattern;
sub set_selectable;
sub set_single_line_mode;
sub set_text;
sub set_text_with_mnemonic;
sub set_track_visited_links;
sub set_use_markup;
sub set_use_underline;
sub set_width_chars;
}
package Gtk2::Layout {
sub bin_window;
sub freeze;
sub get_bin_window;
sub get_hadjustment;
sub get_size;
sub get_vadjustment;
sub move;
sub new;
sub put;
sub set_hadjustment;
sub set_size;
sub set_vadjustment;
sub thaw;
}
package Gtk2::LinkButton {
sub get_uri;
sub get_visited;
sub new;
sub new_with_label;
sub set_uri;
sub set_uri_hook;
sub set_visited;
}
package Gtk2::List {
sub append_items;
sub child_position;
sub clear_items;
sub end_drag_selection;
sub end_selection;
sub extend_selection;
sub insert_items;
sub new;
sub prepend_items;
sub remove_items;
sub scroll_horizontal;
sub scroll_vertical;
sub select_all;
sub select_child;
sub select_item;
sub set_selection_mode;
sub start_selection;
sub toggle_add_mode;
sub toggle_focus_row;
sub toggle_row;
sub undo_selection;
sub unselect_all;
sub unselect_child;
sub unselect_item;
}
package Gtk2::ListItem {
sub deselect;
sub new;
sub new_with_label;
sub select;
}
package Gtk2::ListStore {
sub append;
sub clear;
sub insert;
sub insert_after;
sub insert_before;
sub insert_with_values;
sub iter_is_valid;
sub move_after;
sub move_before;
sub new;
sub prepend;
sub remove;
sub reorder;
sub set;
sub set_column_types;
sub set_value;
sub swap;
}
package Gtk2::Menu {
sub attach;
sub attach_to_widget;
sub detach;
sub get_accel_group;
sub get_accel_path;
sub get_active;
sub get_attach_widget;
sub get_for_attach_widget;
sub get_monitor;
sub get_reserve_toggle_size;
sub get_tearoff_state;
sub get_title;
sub new;
sub popdown;
sub popup;
sub reorder_child;
sub reposition;
sub set_accel_group;
sub set_accel_path;
sub set_active;
sub set_monitor;
sub set_reserve_toggle_size;
sub set_screen;
sub set_tearoff_state;
sub set_title;
}
package Gtk2::MenuBar {
sub get_child_pack_direction;
sub get_pack_direction;
sub new;
sub set_child_pack_direction;
sub set_pack_direction;
}
package Gtk2::MenuItem {
sub activate;
sub deselect;
sub get_accel_path;
sub get_label;
sub get_right_justified;
sub get_submenu;
sub get_use_underline;
sub new;
sub new_with_label;
sub new_with_mnemonic;
sub remove_submenu;
sub select;
sub set_accel_path;
sub set_label;
sub set_right_justified;
sub set_submenu;
sub set_use_underline;
sub toggle_size_allocate;
sub toggle_size_request;
}
package Gtk2::MenuShell {
sub activate_item;
sub append;
sub cancel;
sub deactivate;
sub deselect;
sub get_take_focus;
sub insert;
sub prepend;
sub select_first;
sub select_item;
sub set_take_focus;
}
package Gtk2::MenuToolButton {
sub get_menu;
sub new;
sub new_from_stock;
sub set_arrow_tooltip;
sub set_arrow_tooltip_markup;
sub set_arrow_tooltip_text;
sub set_menu;
}
package Gtk2::MessageDialog {
sub format_secondary_markup;
sub format_secondary_text;
sub get_image;
sub get_message_area;
sub new;
sub new_with_markup;
sub set_image;
sub set_markup;
}
package Gtk2::Misc {
sub get_alignment;
sub get_padding;
sub set_alignment;
sub set_padding;
}
package Gtk2::Notebook {
sub append_page;
sub append_page_menu;
sub get_action_widget;
sub get_current_page;
sub get_group_id;
sub get_menu_label;
sub get_menu_label_text;
sub get_n_pages;
sub get_nth_page;
sub get_scrollable;
sub get_show_border;
sub get_show_tabs;
sub get_tab_detachable;
sub get_tab_hborder;
sub get_tab_label;
sub get_tab_label_text;
sub get_tab_pos;
sub get_tab_reorderable;
sub get_tab_vborder;
sub insert_page;
sub insert_page_menu;
sub new;
sub next_page;
sub page_num;
sub popup_disable;
sub popup_enable;
sub prepend_page;
sub prepend_page_menu;
sub prev_page;
sub query_tab_label_packing;
sub remove_page;
sub reorder_child;
sub set_action_widget;
sub set_current_page;
sub set_group_id;
sub set_menu_label;
sub set_menu_label_text;
sub set_scrollable;
sub set_show_border;
sub set_show_tabs;
sub set_tab_border;
sub set_tab_detachable;
sub set_tab_hborder;
sub set_tab_label;
sub set_tab_label_packing;
sub set_tab_label_text;
sub set_tab_pos;
sub set_tab_reorderable;
sub set_tab_vborder;
sub set_window_creation_hook;
}
package Gtk2::Object {
sub bindings_activate;
sub bindings_activate_event;
sub destroy;
sub new;
}
package Gtk2::OffscreenWindow {
sub get_pixbuf;
sub get_pixmap;
sub new;
}
package Gtk2::OptionMenu {
sub get_history;
sub get_menu;
sub new;
sub remove_menu;
sub set_history;
sub set_menu;
}
package Gtk2::Orientable {
sub get_orientation;
sub set_orientation;
}
package Gtk2::PageSetup {
sub get_bottom_margin;
sub get_left_margin;
sub get_orientation;
sub get_page_height;
sub get_page_width;
sub get_paper_height;
sub get_paper_size;
sub get_paper_width;
sub get_right_margin;
sub get_top_margin;
sub load_file;
sub load_key_file;
sub new;
sub new_from_file;
sub new_from_key_file;
sub set_bottom_margin;
sub set_left_margin;
sub set_orientation;
sub set_paper_size;
sub set_paper_size_and_default_margins;
sub set_right_margin;
sub set_top_margin;
sub to_file;
sub to_key_file;
}
package Gtk2::Paned {
sub add1;
sub add2;
sub child1;
sub child1_resize;
sub child1_shrink;
sub child2;
sub child2_resize;
sub child2_shrink;
sub compute_position;
sub get_child1;
sub get_child2;
sub get_handle_window;
sub get_position;
sub pack1;
sub pack2;
sub set_position;
}
package Gtk2::Pango {
sub CHECK_VERSION;
sub GET_VERSION_INFO;
sub PANGO_PIXELS;
sub extents_to_pixels;
sub find_base_dir;
sub parse_markup;
sub pixels;
sub scale;
sub scale_large;
sub scale_medium;
sub scale_small;
sub scale_x_large;
sub scale_x_small;
sub scale_xx_large;
sub scale_xx_small;
sub units_from_double;
sub units_to_double;
}
package Gtk2::Pango::AttrBackground {
sub new;
}
package Gtk2::Pango::AttrColor {
sub value;
}
package Gtk2::Pango::AttrFallback {
sub new;
sub value;
}
package Gtk2::Pango::AttrFamily {
sub new;
}
package Gtk2::Pango::AttrFontDesc {
sub desc;
sub new;
}
package Gtk2::Pango::AttrForeground {
sub new;
}
package Gtk2::Pango::AttrGravity {
sub new;
sub value;
}
package Gtk2::Pango::AttrGravityHint {
sub new;
sub value;
}
package Gtk2::Pango::AttrInt {
sub value;
}
package Gtk2::Pango::AttrIterator {
sub get;
sub get_attrs;
sub get_font;
sub next;
sub range;
}
package Gtk2::Pango::AttrLanguage {
sub new;
sub value;
}
package Gtk2::Pango::AttrLetterSpacing {
sub new;
}
package Gtk2::Pango::AttrList {
sub change;
sub filter;
sub get_iterator;
sub insert;
sub insert_before;
sub new;
sub splice;
}
package Gtk2::Pango::AttrRise {
sub new;
}
package Gtk2::Pango::AttrScale {
sub new;
sub value;
}
package Gtk2::Pango::AttrShape {
sub ink_rect;
sub logical_rect;
sub new;
}
package Gtk2::Pango::AttrSize {
sub new;
sub new_absolute;
}
package Gtk2::Pango::AttrStretch {
sub new;
sub value;
}
package Gtk2::Pango::AttrStrikethrough {
sub new;
sub value;
}
package Gtk2::Pango::AttrStrikethroughColor {
sub new;
}
package Gtk2::Pango::AttrString {
sub value;
}
package Gtk2::Pango::AttrStyle {
sub new;
sub value;
}
package Gtk2::Pango::AttrUnderline {
sub new;
sub value;
}
package Gtk2::Pango::AttrUnderlineColor {
sub new;
}
package Gtk2::Pango::AttrVariant {
sub new;
sub value;
}
package Gtk2::Pango::AttrWeight {
sub new;
sub value;
}
package Gtk2::Pango::Attribute {
sub end_index;
sub equal;
sub start_index;
}
package Gtk2::Pango::Cairo {
sub create_layout;
sub error_underline_path;
sub glyph_string_path;
sub layout_line_path;
sub layout_path;
sub show_error_underline;
sub show_glyph_string;
sub show_layout;
sub show_layout_line;
sub update_context;
sub update_layout;
}
package Gtk2::Pango::Cairo::Context {
sub get_font_options;
sub get_resolution;
sub set_font_options;
sub set_resolution;
sub set_shape_renderer;
}
package Gtk2::Pango::Cairo::Font {
sub get_scaled_font;
}
package Gtk2::Pango::Cairo::FontMap {
sub create_context;
sub get_default;
sub get_font_type;
sub get_resolution;
sub new;
sub new_for_font_type;
sub set_resolution;
}
package Gtk2::Pango::Color {
sub parse;
sub to_string;
}
package Gtk2::Pango::Context {
sub get_base_dir;
sub get_base_gravity;
sub get_font_description;
sub get_font_map;
sub get_gravity;
sub get_gravity_hint;
sub get_language;
sub get_matrix;
sub get_metrics;
sub list_families;
sub load_font;
sub load_fontset;
sub set_base_dir;
sub set_base_gravity;
sub set_font_description;
sub set_gravity_hint;
sub set_language;
sub set_matrix;
}
package Gtk2::Pango::Font {
sub describe;
sub describe_with_absolute_size;
sub get_font_map;
sub get_glyph_extents;
sub get_metrics;
}
package Gtk2::Pango::FontDescription {
sub better_match;
sub equal;
sub from_string;
sub get_family;
sub get_gravity;
sub get_set_fields;
sub get_size;
sub get_size_is_absolute;
sub get_stretch;
sub get_style;
sub get_variant;
sub get_weight;
sub hash;
sub merge;
sub merge_static;
sub new;
sub set_absolute_size;
sub set_family;
sub set_family_static;
sub set_gravity;
sub set_size;
sub set_stretch;
sub set_style;
sub set_variant;
sub set_weight;
sub to_filename;
sub to_string;
sub unset_fields;
}
package Gtk2::Pango::FontFace {
sub describe;
sub get_face_name;
sub is_synthesized;
sub list_sizes;
}
package Gtk2::Pango::FontFamily {
sub get_name;
sub is_monospace;
sub list_faces;
}
package Gtk2::Pango::FontMap {
sub list_families;
sub load_font;
sub load_fontset;
}
package Gtk2::Pango::FontMetrics {
sub get_approximate_char_width;
sub get_approximate_digit_width;
sub get_ascent;
sub get_descent;
sub get_strikethrough_position;
sub get_strikethrough_thickness;
sub get_underline_position;
sub get_underline_thickness;
}
package Gtk2::Pango::Fontset {
sub foreach;
sub get_font;
sub get_metrics;
}
package Gtk2::Pango::Gravity {
sub get_for_matrix;
sub get_for_script;
sub is_vertical;
sub to_rotation;
}
package Gtk2::Pango::Language {
sub from_string;
sub get_default;
sub includes_script;
sub matches;
sub to_string;
}
package Gtk2::Pango::Layout {
sub context_changed;
sub copy;
sub get_alignment;
sub get_attributes;
sub get_auto_dir;
sub get_baseline;
sub get_context;
sub get_cursor_pos;
sub get_ellipsize;
sub get_extents;
sub get_font_description;
sub get_height;
sub get_indent;
sub get_iter;
sub get_justify;
sub get_line;
sub get_line_count;
sub get_line_readonly;
sub get_lines;
sub get_lines_readonly;
sub get_log_attrs;
sub get_pixel_extents;
sub get_pixel_size;
sub get_single_paragraph_mode;
sub get_size;
sub get_spacing;
sub get_tabs;
sub get_text;
sub get_unknown_glyphs_count;
sub get_width;
sub get_wrap;
sub index_to_pos;
sub is_ellipsized;
sub is_wrapped;
sub move_cursor_visually;
sub new;
sub set_alignment;
sub set_attributes;
sub set_auto_dir;
sub set_ellipsize;
sub set_font_description;
sub set_height;
sub set_indent;
sub set_justify;
sub set_markup;
sub set_markup_with_accel;
sub set_single_paragraph_mode;
sub set_spacing;
sub set_tabs;
sub set_text;
sub set_width;
sub set_wrap;
sub xy_to_index;
}
package Gtk2::Pango::LayoutIter {
sub at_last_line;
sub get_baseline;
sub get_char_extents;
sub get_cluster_extents;
sub get_index;
sub get_layout;
sub get_layout_extents;
sub get_line;
sub get_line_extents;
sub get_line_readonly;
sub get_line_yrange;
sub get_run_extents;
sub next_char;
sub next_cluster;
sub next_line;
sub next_run;
}
package Gtk2::Pango::LayoutLine {
sub get_extents;
sub get_pixel_extents;
sub get_x_ranges;
sub index_to_x;
sub x_to_index;
}
package Gtk2::Pango::Matrix {
sub concat;
sub new;
sub rotate;
sub scale;
sub transform_distance;
sub transform_pixel_rectangle;
sub transform_point;
sub transform_rectangle;
sub translate;
sub x0;
sub xx;
sub xy;
sub y0;
sub yx;
sub yy;
}
package Gtk2::Pango::Renderer {
sub activate;
sub deactivate;
sub draw_error_underline;
sub draw_glyph;
sub draw_layout;
sub draw_layout_line;
sub draw_rectangle;
sub draw_trapezoid;
sub get_color;
sub get_layout;
sub get_layout_line;
sub get_matrix;
sub part_changed;
sub set_color;
sub set_matrix;
}
package Gtk2::Pango::Script {
sub for_unichar;
sub get_sample_language;
}
package Gtk2::Pango::ScriptIter {
sub get_range;
sub new;
sub next;
}
package Gtk2::Pango::TabArray {
sub get_positions_in_pixels;
sub get_size;
sub get_tab;
sub get_tabs;
sub new;
sub new_with_positions;
sub resize;
sub set_tab;
}
package Gtk2::PaperSize {
sub get_default;
sub get_default_bottom_margin;
sub get_default_left_margin;
sub get_default_right_margin;
sub get_default_top_margin;
sub get_display_name;
sub get_height;
sub get_name;
sub get_paper_sizes;
sub get_ppd_name;
sub get_width;
sub is_custom;
sub is_equal;
sub new;
sub new_custom;
sub new_from_key_file;
sub new_from_ppd;
sub set_size;
sub to_key_file;
}
package Gtk2::Plug {
sub construct;
sub construct_for_display;
sub get_embedded;
sub get_id;
sub get_socket_window;
sub new;
sub new_for_display;
}
package Gtk2::Print {
sub run_page_setup_dialog;
sub run_page_setup_dialog_async;
}
package Gtk2::PrintContext {
sub create_pango_context;
sub create_pango_layout;
sub get_cairo_context;
sub get_dpi_x;
sub get_dpi_y;
sub get_hard_margins;
sub get_height;
sub get_page_setup;
sub get_pango_fontmap;
sub get_width;
sub set_cairo_context;
}
package Gtk2::PrintOperation {
sub cancel;
sub draw_page_finish;
sub get_default_page_setup;
sub get_embed_page_setup;
sub get_error;
sub get_has_selection;
sub get_n_pages_to_print;
sub get_print_settings;
sub get_status;
sub get_status_string;
sub get_support_selection;
sub is_finished;
sub new;
sub run;
sub set_allow_async;
sub set_current_page;
sub set_custom_tab_label;
sub set_default_page_setup;
sub set_defer_drawing;
sub set_embed_page_setup;
sub set_export_filename;
sub set_has_selection;
sub set_job_name;
sub set_n_pages;
sub set_print_settings;
sub set_show_progress;
sub set_support_selection;
sub set_track_print_status;
sub set_unit;
sub set_use_full_page;
}
package Gtk2::PrintOperationPreview {
sub end_preview;
sub is_selected;
sub render_page;
}
package Gtk2::PrintSettings {
sub foreach;
sub get;
sub get_printer_lpi;
sub get_resolution_x;
sub get_resolution_y;
sub has_key;
sub load_file;
sub load_key_file;
sub new;
sub new_from_file;
sub new_from_key_file;
sub set;
sub set_printer_lpi;
sub set_resolution_xy;
sub to_file;
sub to_key_file;
sub unset;
}
package Gtk2::ProgressBar {
sub get_ellipsize;
sub get_fraction;
sub get_orientation;
sub get_pulse_step;
sub get_text;
sub new;
sub pulse;
sub set_ellipsize;
sub set_fraction;
sub set_orientation;
sub set_pulse_step;
sub set_text;
}
package Gtk2::RadioAction {
sub get_current_value;
sub get_group;
sub set_current_value;
sub set_group;
}
package Gtk2::RadioButton {
sub get_group;
sub new;
sub new_from_widget;
sub new_with_label;
sub new_with_label_from_widget;
sub new_with_mnemonic;
sub new_with_mnemonic_from_widget;
sub set_group;
}
package Gtk2::RadioMenuItem {
sub get_group;
sub new;
sub new_from_widget;
sub new_with_label;
sub new_with_label_from_widget;
sub new_with_mnemonic;
sub new_with_mnemonic_from_widget;
sub set_group;
}
package Gtk2::RadioToolButton {
sub get_group;
sub new;
sub new_from_stock;
sub new_from_widget;
sub new_with_stock_from_widget;
sub set_group;
}
package Gtk2::Range {
sub get_adjustment;
sub get_fill_level;
sub get_flippable;
sub get_inverted;
sub get_lower_stepper_sensitivity;
sub get_min_slider_size;
sub get_range_rect;
sub get_restrict_to_fill_level;
sub get_show_fill_level;
sub get_slider_range;
sub get_slider_size_fixed;
sub get_update_policy;
sub get_upper_stepper_sensitivity;
sub get_value;
sub set_adjustment;
sub set_fill_level;
sub set_flippable;
sub set_increments;
sub set_inverted;
sub set_lower_stepper_sensitivity;
sub set_min_slider_size;
sub set_range;
sub set_restrict_to_fill_level;
sub set_show_fill_level;
sub set_slider_size_fixed;
sub set_update_policy;
sub set_upper_stepper_sensitivity;
sub set_value;
}
package Gtk2::Rc {
sub add_default_file;
sub get_default_files;
sub get_im_module_file;
sub get_im_module_path;
sub get_module_dir;
sub get_style;
sub get_style_by_paths;
sub get_theme_dir;
sub parse;
sub parse_string;
sub reparse_all;
sub reparse_all_for_settings;
sub reset_styles;
sub set_default_files;
}
package Gtk2::RcStyle {
sub base;
sub bg;
sub bg_pixmap_name;
sub color_flags;
sub copy;
sub fg;
sub font_desc;
sub name;
sub new;
sub text;
sub xthickness;
sub ythickness;
}
package Gtk2::RecentAction {
sub get_show_numbers;
sub set_show_numbers;
}
package Gtk2::RecentChooser {
sub add_filter;
sub get_current_item;
sub get_current_uri;
sub get_filter;
sub get_items;
sub get_limit;
sub get_local_only;
sub get_select_multiple;
sub get_show_icons;
sub get_show_not_found;
sub get_show_private;
sub get_show_tips;
sub get_sort_type;
sub get_uris;
sub list_filters;
sub remove_filter;
sub select_all;
sub select_uri;
sub set_current_uri;
sub set_filter;
sub set_limit;
sub set_local_only;
sub set_select_multiple;
sub set_show_icons;
sub set_show_not_found;
sub set_show_private;
sub set_show_tips;
sub set_sort_func;
sub set_sort_type;
sub unselect_all;
sub unselect_uri;
}
package Gtk2::RecentChooserDialog {
sub new;
sub new_for_manager;
}
package Gtk2::RecentChooserMenu {
sub get_show_numbers;
sub new;
sub new_for_manager;
sub set_show_numbers;
}
package Gtk2::RecentChooserWidget {
sub new;
sub new_for_manager;
}
package Gtk2::RecentFilter {
sub add_age;
sub add_application;
sub add_custom;
sub add_group;
sub add_mime_type;
sub add_pattern;
sub add_pixbuf_formats;
sub filter;
sub get_name;
sub get_needed;
sub new;
sub set_name;
}
package Gtk2::RecentInfo {
sub exists;
sub get_added;
sub get_age;
sub get_application_info;
sub get_applications;
sub get_description;
sub get_display_name;
sub get_groups;
sub get_icon;
sub get_mime_type;
sub get_modified;
sub get_private_hint;
sub get_short_name;
sub get_uri;
sub get_uri_display;
sub get_visited;
sub has_application;
sub has_group;
sub is_local;
sub last_application;
sub match;
}
package Gtk2::RecentManager {
sub add_full;
sub add_item;
sub get_default;
sub get_for_screen;
sub get_items;
sub get_limit;
sub has_item;
sub lookup_item;
sub move_item;
sub new;
sub purge_items;
sub remove_item;
sub set_limit;
sub set_screen;
}
package Gtk2::Requisition {
sub height;
sub new;
sub width;
}
package Gtk2::Ruler {
sub draw_pos;
sub draw_ticks;
sub get_metric;
sub get_range;
sub set_metric;
sub set_range;
}
package Gtk2::Scale {
sub add_mark;
sub clear_marks;
sub get_digits;
sub get_draw_value;
sub get_layout;
sub get_layout_offsets;
sub get_value_pos;
sub set_digits;
sub set_draw_value;
sub set_value_pos;
}
package Gtk2::ScaleButton {
sub get_adjustment;
sub get_minus_button;
sub get_orientation;
sub get_plus_button;
sub get_popup;
sub get_value;
sub new;
sub set_adjustment;
sub set_icons;
sub set_orientation;
sub set_value;
}
package Gtk2::ScrolledWindow {
sub add_with_viewport;
sub get_hadjustment;
sub get_hscrollbar;
sub get_placement;
sub get_policy;
sub get_shadow_type;
sub get_vadjustment;
sub get_vscrollbar;
sub new;
sub set_hadjustment;
sub set_placement;
sub set_policy;
sub set_shadow_type;
sub set_vadjustment;
sub unset_placement;
}
package Gtk2::Selection {
sub owner_set;
sub owner_set_for_display;
}
package Gtk2::SelectionData {
sub data;
sub display;
sub format;
sub get_data;
sub get_data_type;
sub get_display;
sub get_format;
sub get_length;
sub get_pixbuf;
sub get_row_drag_data;
sub get_selection;
sub get_target;
sub get_targets;
sub get_text;
sub get_uris;
sub gtk_selection_clear;
sub length;
sub selection;
sub set;
sub set_pixbuf;
sub set_row_drag_data;
sub set_text;
sub set_uris;
sub target;
sub targets_include_image;
sub targets_include_rich_text;
sub targets_include_text;
sub targets_include_uri;
sub type;
}
package Gtk2::SeparatorMenuItem {
sub new;
}
package Gtk2::SeparatorToolItem {
sub get_draw;
sub new;
sub set_draw;
}
package Gtk2::SizeGroup {
sub add_widget;
sub get_ignore_hidden;
sub get_mode;
sub get_widgets;
sub new;
sub remove_widget;
sub set_ignore_hidden;
sub set_mode;
}
package Gtk2::Socket {
sub add_id;
sub get_id;
sub get_plug_window;
sub new;
sub steal;
}
package Gtk2::SpinButton {
sub configure;
sub get_adjustment;
sub get_digits;
sub get_increments;
sub get_numeric;
sub get_range;
sub get_snap_to_ticks;
sub get_update_policy;
sub get_value;
sub get_value_as_int;
sub get_wrap;
sub new;
sub new_with_range;
sub set_adjustment;
sub set_digits;
sub set_increments;
sub set_numeric;
sub set_range;
sub set_snap_to_ticks;
sub set_update_policy;
sub set_value;
sub set_wrap;
sub spin;
sub update;
}
package Gtk2::Spinner {
sub new;
sub start;
sub stop;
}
package Gtk2::StatusIcon {
sub get_blinking;
sub get_geometry;
sub get_has_tooltip;
sub get_icon_name;
sub get_pixbuf;
sub get_screen;
sub get_size;
sub get_stock;
sub get_storage_type;
sub get_title;
sub get_tooltip_markup;
sub get_tooltip_text;
sub get_visible;
sub get_x11_window_id;
sub is_embedded;
sub new;
sub new_from_file;
sub new_from_icon_name;
sub new_from_pixbuf;
sub new_from_stock;
sub position_menu;
sub set_blinking;
sub set_from_file;
sub set_from_icon_name;
sub set_from_pixbuf;
sub set_from_stock;
sub set_has_tooltip;
sub set_name;
sub set_screen;
sub set_title;
sub set_tooltip;
sub set_tooltip_markup;
sub set_tooltip_text;
sub set_visible;
}
package Gtk2::Statusbar {
sub get_context_id;
sub get_has_resize_grip;
sub get_message_area;
sub new;
sub pop;
sub push;
sub remove;
sub remove_all;
sub set_has_resize_grip;
}
package Gtk2::Stock {
sub add;
sub list_ids;
sub lookup;
sub set_translate_func;
}
package Gtk2::Style {
sub apply_default_background;
sub attach;
sub attached;
sub base;
sub base_gc;
sub bg;
sub bg_gc;
sub bg_pixmap;
sub black;
sub black_gc;
sub copy;
sub dark;
sub dark_gc;
sub detach;
sub fg;
sub fg_gc;
sub font_desc;
sub get;
sub get_style_property;
sub light;
sub light_gc;
sub lookup_color;
sub lookup_icon_set;
sub mid;
sub mid_gc;
sub new;
sub paint_arrow;
sub paint_box;
sub paint_box_gap;
sub paint_check;
sub paint_diamond;
sub paint_expander;
sub paint_extension;
sub paint_flat_box;
sub paint_focus;
sub paint_handle;
sub paint_hline;
sub paint_layout;
sub paint_option;
sub paint_polygon;
sub paint_resize_grip;
sub paint_shadow;
sub paint_shadow_gap;
sub paint_slider;
sub paint_spinner;
sub paint_tab;
sub paint_vline;
sub render_icon;
sub set_background;
sub text;
sub text_aa;
sub text_aa_gc;
sub text_gc;
sub white;
sub white_gc;
sub xthickness;
sub ythickness;
}
package Gtk2::Table {
sub attach;
sub attach_defaults;
sub get_col_spacing;
sub get_default_col_spacing;
sub get_default_row_spacing;
sub get_homogeneous;
sub get_row_spacing;
sub get_size;
sub new;
sub resize;
sub set_col_spacing;
sub set_col_spacings;
sub set_homogeneous;
sub set_row_spacing;
sub set_row_spacings;
}
package Gtk2::TargetList {
sub add;
sub add_image_targets;
sub add_rich_text_targets;
sub add_table;
sub add_text_targets;
sub add_uri_targets;
sub find;
sub new;
sub remove;
}
package Gtk2::TearoffMenuItem {
sub new;
}
package Gtk2::TextAttributes {
sub copy_values;
sub new;
}
package Gtk2::TextBuffer {
sub add_mark;
sub add_selection_clipboard;
sub apply_tag;
sub apply_tag_by_name;
sub backspace;
sub begin_user_action;
sub copy_clipboard;
sub create_child_anchor;
sub create_mark;
sub create_tag;
sub cut_clipboard;
sub delete;
sub delete_interactive;
sub delete_mark;
sub delete_mark_by_name;
sub delete_selection;
sub deserialize;
sub deserialize_get_can_create_tags;
sub deserialize_set_can_create_tags;
sub end_user_action;
sub get_bounds;
sub get_char_count;
sub get_copy_target_list;
sub get_deserialize_formats;
sub get_end_iter;
sub get_has_selection;
sub get_insert;
sub get_iter_at_child_anchor;
sub get_iter_at_line;
sub get_iter_at_line_index;
sub get_iter_at_line_offset;
sub get_iter_at_mark;
sub get_iter_at_offset;
sub get_line_count;
sub get_mark;
sub get_modified;
sub get_paste_target_list;
sub get_selection_bound;
sub get_selection_bounds;
sub get_serialize_formats;
sub get_slice;
sub get_start_iter;
sub get_tag_table;
sub get_text;
sub insert;
sub insert_at_cursor;
sub insert_child_anchor;
sub insert_interactive;
sub insert_interactive_at_cursor;
sub insert_pixbuf;
sub insert_range;
sub insert_range_interactive;
sub insert_with_tags;
sub insert_with_tags_by_name;
sub move_mark;
sub move_mark_by_name;
sub new;
sub paste_clipboard;
sub place_cursor;
sub register_deserialize_format;
sub register_deserialize_tagset;
sub register_serialize_format;
sub register_serialize_tagset;
sub remove_all_tags;
sub remove_selection_clipboard;
sub remove_tag;
sub remove_tag_by_name;
sub select_range;
sub serialize;
sub set_modified;
sub set_text;
sub unregister_deserialize_format;
sub unregister_serialize_format;
}
package Gtk2::TextChildAnchor {
sub get_deleted;
sub get_widgets;
sub new;
}
package Gtk2::TextIter {
sub backward_char;
sub backward_chars;
sub backward_cursor_position;
sub backward_cursor_positions;
sub backward_find_char;
sub backward_line;
sub backward_lines;
sub backward_search;
sub backward_sentence_start;
sub backward_sentence_starts;
sub backward_to_tag_toggle;
sub backward_visible_cursor_position;
sub backward_visible_cursor_positions;
sub backward_visible_line;
sub backward_visible_lines;
sub backward_visible_word_start;
sub backward_visible_word_starts;
sub backward_word_start;
sub backward_word_starts;
sub begins_tag;
sub can_insert;
sub compare;
sub editable;
sub ends_line;
sub ends_sentence;
sub ends_tag;
sub ends_word;
sub equal;
sub forward_char;
sub forward_chars;
sub forward_cursor_position;
sub forward_cursor_positions;
sub forward_find_char;
sub forward_line;
sub forward_lines;
sub forward_search;
sub forward_sentence_end;
sub forward_sentence_ends;
sub forward_to_end;
sub forward_to_line_end;
sub forward_to_tag_toggle;
sub forward_visible_cursor_position;
sub forward_visible_cursor_positions;
sub forward_visible_line;
sub forward_visible_lines;
sub forward_visible_word_end;
sub forward_visible_word_ends;
sub forward_word_end;
sub forward_word_ends;
sub get_attributes;
sub get_buffer;
sub get_bytes_in_line;
sub get_char;
sub get_chars_in_line;
sub get_child_anchor;
sub get_language;
sub get_line;
sub get_line_index;
sub get_line_offset;
sub get_marks;
sub get_offset;
sub get_pixbuf;
sub get_slice;
sub get_tags;
sub get_text;
sub get_toggled_tags;
sub get_visible_line_index;
sub get_visible_line_offset;
sub get_visible_slice;
sub get_visible_text;
sub has_tag;
sub in_range;
sub inside_sentence;
sub inside_word;
sub is_cursor_position;
sub is_end;
sub is_start;
sub order;
sub set_line;
sub set_line_index;
sub set_line_offset;
sub set_offset;
sub set_visible_line_index;
sub set_visible_line_offset;
sub starts_line;
sub starts_sentence;
sub starts_word;
sub toggles_tag;
}
package Gtk2::TextMark {
sub get_buffer;
sub get_deleted;
sub get_left_gravity;
sub get_name;
sub get_visible;
sub new;
sub set_visible;
}
package Gtk2::TextTag {
sub event;
sub get_priority;
sub new;
sub set_priority;
}
package Gtk2::TextTagTable {
sub add;
sub foreach;
sub get_size;
sub lookup;
sub new;
sub remove;
}
package Gtk2::TextView {
sub add_child_at_anchor;
sub add_child_in_window;
sub backward_display_line;
sub backward_display_line_start;
sub buffer_to_window_coords;
sub forward_display_line;
sub forward_display_line_end;
sub get_accepts_tab;
sub get_border_window_size;
sub get_buffer;
sub get_cursor_visible;
sub get_default_attributes;
sub get_editable;
sub get_hadjustment;
sub get_indent;
sub get_iter_at_location;
sub get_iter_at_position;
sub get_iter_location;
sub get_justification;
sub get_left_margin;
sub get_line_at_y;
sub get_line_yrange;
sub get_overwrite;
sub get_pixels_above_lines;
sub get_pixels_below_lines;
sub get_pixels_inside_wrap;
sub get_right_margin;
sub get_tabs;
sub get_vadjustment;
sub get_visible_rect;
sub get_window;
sub get_window_type;
sub get_wrap_mode;
sub im_context_filter_keypress;
sub move_child;
sub move_mark_onscreen;
sub move_visually;
sub new;
sub new_with_buffer;
sub place_cursor_onscreen;
sub reset_im_context;
sub scroll_mark_onscreen;
sub scroll_to_iter;
sub scroll_to_mark;
sub set_accepts_tab;
sub set_border_window_size;
sub set_buffer;
sub set_cursor_visible;
sub set_editable;
sub set_indent;
sub set_justification;
sub set_left_margin;
sub set_overwrite;
sub set_pixels_above_lines;
sub set_pixels_below_lines;
sub set_pixels_inside_wrap;
sub set_right_margin;
sub set_tabs;
sub set_wrap_mode;
sub starts_display_line;
sub window_to_buffer_coords;
}
package Gtk2::ToggleAction {
sub get_active;
sub get_draw_as_radio;
sub set_active;
sub set_draw_as_radio;
sub toggled;
}
package Gtk2::ToggleButton {
sub get_active;
sub get_inconsistent;
sub get_mode;
sub new;
sub new_with_label;
sub new_with_mnemonic;
sub set_active;
sub set_inconsistent;
sub set_mode;
sub toggled;
}
package Gtk2::ToggleToolButton {
sub get_active;
sub new;
sub new_from_stock;
sub set_active;
}
package Gtk2::ToolButton {
sub get_icon_name;
sub get_icon_widget;
sub get_label;
sub get_label_widget;
sub get_stock_id;
sub get_use_underline;
sub new;
sub new_from_stock;
sub set_icon_name;
sub set_icon_widget;
sub set_label;
sub set_label_widget;
sub set_stock_id;
sub set_use_underline;
}
package Gtk2::ToolItem {
sub get_ellipsize_mode;
sub get_expand;
sub get_homogeneous;
sub get_icon_size;
sub get_is_important;
sub get_orientation;
sub get_proxy_menu_item;
sub get_relief_style;
sub get_text_alignment;
sub get_text_orientation;
sub get_text_size_group;
sub get_toolbar_style;
sub get_use_drag_window;
sub get_visible_horizontal;
sub get_visible_vertical;
sub new;
sub rebuild_menu;
sub retrieve_proxy_menu_item;
sub set_expand;
sub set_homogeneous;
sub set_is_important;
sub set_proxy_menu_item;
sub set_tooltip;
sub set_tooltip_markup;
sub set_tooltip_text;
sub set_use_drag_window;
sub set_visible_horizontal;
sub set_visible_vertical;
sub toolbar_reconfigured;
}
package Gtk2::ToolItemGroup {
sub get_collapsed;
sub get_drop_item;
sub get_ellipsize;
sub get_header_relief;
sub get_item_position;
sub get_label;
sub get_label_widget;
sub get_n_items;
sub get_nth_item;
sub insert;
sub new;
sub set_collapsed;
sub set_ellipsize;
sub set_header_relief;
sub set_item_position;
sub set_label;
sub set_label_widget;
}
package Gtk2::ToolPalette {
sub add_drag_dest;
sub get_drag_item;
sub get_drag_target_group;
sub get_drag_target_item;
sub get_drop_group;
sub get_drop_item;
sub get_exclusive;
sub get_expand;
sub get_group_position;
sub get_hadjustment;
sub get_icon_size;
sub get_style;
sub get_vadjustment;
sub new;
sub set_drag_source;
sub set_exclusive;
sub set_expand;
sub set_group_position;
sub set_icon_size;
sub set_style;
sub unset_icon_size;
sub unset_style;
}
package Gtk2::ToolShell {
sub get_ellipsize_mode;
sub get_icon_size;
sub get_orientation;
sub get_relief_style;
sub get_style;
sub get_text_alignment;
sub get_text_orientation;
sub get_text_size_group;
sub rebuild_menu;
}
package Gtk2::Toolbar {
sub append_element;
sub append_item;
sub append_space;
sub append_widget;
sub get_drop_index;
sub get_icon_size;
sub get_item_index;
sub get_n_items;
sub get_nth_item;
sub get_orientation;
sub get_relief_style;
sub get_show_arrow;
sub get_style;
sub get_tooltips;
sub insert;
sub insert_element;
sub insert_item;
sub insert_space;
sub insert_stock;
sub insert_widget;
sub new;
sub prepend_element;
sub prepend_item;
sub prepend_space;
sub prepend_widget;
sub remove_space;
sub set_drop_highlight_item;
sub set_icon_size;
sub set_orientation;
sub set_show_arrow;
sub set_style;
sub set_tooltips;
sub unset_icon_size;
sub unset_style;
}
package Gtk2::Tooltip {
sub set_custom;
sub set_icon;
sub set_icon_from_icon_name;
sub set_icon_from_stock;
sub set_markup;
sub set_text;
sub set_tip_area;
sub trigger_tooltip_query;
}
package Gtk2::Tooltips {
sub data_get;
sub disable;
sub enable;
sub force_window;
sub new;
sub set_tip;
}
package Gtk2::TreeDragDest {
sub _ADD_INTERFACE;
sub drag_data_received;
sub row_drop_possible;
}
package Gtk2::TreeDragSource {
sub _ADD_INTERFACE;
sub drag_data_delete;
sub drag_data_get;
sub row_draggable;
}
package Gtk2::TreeIter {
sub new_from_arrayref;
sub set;
sub to_arrayref;
}
package Gtk2::TreeModel {
sub _ADD_INTERFACE;
sub foreach;
sub get;
sub get_column_type;
sub get_flags;
sub get_iter;
sub get_iter_first;
sub get_iter_from_string;
sub get_n_columns;
sub get_path;
sub get_string_from_iter;
sub get_value;
sub iter_children;
sub iter_has_child;
sub iter_n_children;
sub iter_next;
sub iter_nth_child;
sub iter_parent;
sub ref_node;
sub row_changed;
sub row_deleted;
sub row_has_child_toggled;
sub row_inserted;
sub rows_reordered;
sub unref_node;
}
package Gtk2::TreeModelFilter {
sub clear_cache;
sub convert_child_iter_to_iter;
sub convert_child_path_to_path;
sub convert_iter_to_child_iter;
sub convert_path_to_child_path;
sub get_model;
sub new;
sub refilter;
sub set_modify_func;
sub set_visible_column;
sub set_visible_func;
}
package Gtk2::TreeModelSort {
sub clear_cache;
sub convert_child_iter_to_iter;
sub convert_child_path_to_path;
sub convert_iter_to_child_iter;
sub convert_path_to_child_path;
sub get_model;
sub iter_is_valid;
sub new;
sub new_with_model;
sub reset_default_sort_func;
}
package Gtk2::TreePath {
sub append_index;
sub compare;
sub down;
sub get_depth;
sub get_indices;
sub is_ancestor;
sub is_descendant;
sub new;
sub new_first;
sub new_from_indices;
sub new_from_string;
sub next;
sub prepend_index;
sub prev;
sub to_string;
sub up;
}
package Gtk2::TreeRowReference {
sub get_model;
sub get_path;
sub new;
sub valid;
}
package Gtk2::TreeSelection {
sub count_selected_rows;
sub get_mode;
sub get_selected;
sub get_selected_rows;
sub get_tree_view;
sub get_user_data;
sub iter_is_selected;
sub path_is_selected;
sub select_all;
sub select_iter;
sub select_path;
sub select_range;
sub selected_foreach;
sub set_mode;
sub set_select_function;
sub unselect_all;
sub unselect_iter;
sub unselect_path;
sub unselect_range;
}
package Gtk2::TreeSortable {
sub _ADD_INTERFACE;
sub get_sort_column_id;
sub has_default_sort_func;
sub set_default_sort_func;
sub set_sort_column_id;
sub set_sort_func;
sub sort_column_changed;
}
package Gtk2::TreeSortable::IterCompareFunc {
sub DESTROY;
sub invoke;
}
package Gtk2::TreeStore {
sub append;
sub clear;
sub insert;
sub insert_after;
sub insert_before;
sub insert_with_values;
sub is_ancestor;
sub iter_depth;
sub iter_is_valid;
sub move_after;
sub move_before;
sub new;
sub prepend;
sub remove;
sub reorder;
sub set;
sub set_column_types;
sub set_value;
sub swap;
}
package Gtk2::TreeView {
sub append_column;
sub collapse_all;
sub collapse_row;
sub columns_autosize;
sub convert_bin_window_to_tree_coords;
sub convert_bin_window_to_widget_coords;
sub convert_tree_to_bin_window_coords;
sub convert_tree_to_widget_coords;
sub convert_widget_to_bin_window_coords;
sub convert_widget_to_tree_coords;
sub create_row_drag_icon;
sub enable_model_drag_dest;
sub enable_model_drag_source;
sub expand_all;
sub expand_row;
sub expand_to_path;
sub get_background_area;
sub get_bin_window;
sub get_cell_area;
sub get_column;
sub get_columns;
sub get_cursor;
sub get_dest_row_at_pos;
sub get_drag_dest_row;
sub get_enable_search;
sub get_enable_tree_lines;
sub get_expander_column;
sub get_fixed_height_mode;
sub get_grid_lines;
sub get_hadjustment;
sub get_headers_clickable;
sub get_headers_visible;
sub get_hover_expand;
sub get_hover_selection;
sub get_level_indentation;
sub get_model;
sub get_path_at_pos;
sub get_reorderable;
sub get_rubber_banding;
sub get_rules_hint;
sub get_search_column;
sub get_search_entry;
sub get_selection;
sub get_show_expanders;
sub get_tooltip_column;
sub get_tooltip_context;
sub get_vadjustment;
sub get_visible_range;
sub get_visible_rect;
sub insert_column;
sub insert_column_with_attributes;
sub insert_column_with_data_func;
sub is_rubber_banding_active;
sub map_expanded_rows;
sub move_column_after;
sub new;
sub new_with_model;
sub remove_column;
sub row_activated;
sub row_expanded;
sub scroll_to_cell;
sub scroll_to_point;
sub set_column_drag_function;
sub set_cursor;
sub set_cursor_on_cell;
sub set_drag_dest_row;
sub set_enable_search;
sub set_enable_tree_lines;
sub set_expander_column;
sub set_fixed_height_mode;
sub set_grid_lines;
sub set_hadjustment;
sub set_headers_clickable;
sub set_headers_visible;
sub set_hover_expand;
sub set_hover_selection;
sub set_level_indentation;
sub set_model;
sub set_reorderable;
sub set_row_separator_func;
sub set_rubber_banding;
sub set_rules_hint;
sub set_search_column;
sub set_search_entry;
sub set_search_equal_func;
sub set_search_position_func;
sub set_show_expanders;
sub set_tooltip_cell;
sub set_tooltip_column;
sub set_tooltip_row;
sub set_vadjustment;
sub tree_to_widget_coords;
sub unset_rows_drag_dest;
sub unset_rows_drag_source;
sub widget_to_tree_coords;
}
package Gtk2::TreeViewColumn {
sub add_attribute;
sub cell_get_position;
sub cell_get_size;
sub cell_is_visible;
sub cell_set_cell_data;
sub clear;
sub clear_attributes;
sub clicked;
sub focus_cell;
sub get_alignment;
sub get_cell_renderers;
sub get_clickable;
sub get_expand;
sub get_fixed_width;
sub get_max_width;
sub get_min_width;
sub get_reorderable;
sub get_resizable;
sub get_sizing;
sub get_sort_column_id;
sub get_sort_indicator;
sub get_sort_order;
sub get_spacing;
sub get_title;
sub get_tree_view;
sub get_visible;
sub get_widget;
sub get_width;
sub new;
sub new_with_attributes;
sub pack_end;
sub pack_start;
sub queue_resize;
sub set_alignment;
sub set_attributes;
sub set_cell_data_func;
sub set_clickable;
sub set_expand;
sub set_fixed_width;
sub set_max_width;
sub set_min_width;
sub set_reorderable;
sub set_resizable;
sub set_sizing;
sub set_sort_column_id;
sub set_sort_indicator;
sub set_sort_order;
sub set_spacing;
sub set_title;
sub set_visible;
sub set_widget;
}
package Gtk2::UIManager {
sub add_ui;
sub add_ui_from_file;
sub add_ui_from_string;
sub ensure_update;
sub get_accel_group;
sub get_action;
sub get_action_groups;
sub get_add_tearoffs;
sub get_toplevels;
sub get_ui;
sub get_widget;
sub insert_action_group;
sub new;
sub new_merge_id;
sub remove_action_group;
sub remove_ui;
sub set_add_tearoffs;
}
package Gtk2::VBox {
sub new;
}
package Gtk2::VButtonBox {
sub get_layout_default;
sub get_spacing_default;
sub new;
sub set_layout_default;
sub set_spacing_default;
}
package Gtk2::VPaned {
sub new;
}
package Gtk2::VRuler {
sub new;
}
package Gtk2::VScale {
sub new;
sub new_with_range;
}
package Gtk2::VScrollBar {
sub new;
}
package Gtk2::VScrollbar {
sub new;
}
package Gtk2::VSeparator {
sub new;
}
package Gtk2::Viewport {
sub get_bin_window;
sub get_hadjustment;
sub get_shadow_type;
sub get_vadjustment;
sub get_view_window;
sub new;
sub set_hadjustment;
sub set_shadow_type;
sub set_vadjustment;
}
package Gtk2::VolumeButton {
sub new;
}
package Gtk2::Widget {
sub _INSTALL_OVERRIDES;
sub activate;
sub add_accelerator;
sub add_events;
sub add_mnemonic_label;
sub allocation;
sub app_paintable;
sub can_activate_accel;
sub can_default;
sub can_focus;
sub child_focus;
sub child_notify;
sub class_path;
sub composite_child;
sub create_pango_context;
sub create_pango_layout;
sub destroy;
sub double_buffered;
sub drag_begin;
sub drag_check_threshold;
sub drag_dest_add_image_targets;
sub drag_dest_add_text_targets;
sub drag_dest_add_uri_targets;
sub drag_dest_find_target;
sub drag_dest_get_target_list;
sub drag_dest_get_track_motion;
sub drag_dest_set;
sub drag_dest_set_proxy;
sub drag_dest_set_target_list;
sub drag_dest_set_track_motion;
sub drag_dest_unset;
sub drag_get_data;
sub drag_highlight;
sub drag_source_add_image_targets;
sub drag_source_add_text_targets;
sub drag_source_add_uri_targets;
sub drag_source_get_target_list;
sub drag_source_set;
sub drag_source_set_icon;
sub drag_source_set_icon_name;
sub drag_source_set_icon_pixbuf;
sub drag_source_set_icon_stock;
sub drag_source_set_target_list;
sub drag_source_unset;
sub drag_unhighlight;
sub drawable;
sub ensure_style;
sub error_bell;
sub event;
sub find_style_property;
sub flags;
sub freeze_child_notify;
sub get_accessible;
sub get_action;
sub get_allocation;
sub get_ancestor;
sub get_app_paintable;
sub get_can_default;
sub get_can_focus;
sub get_child_requisition;
sub get_child_visible;
sub get_clipboard;
sub get_colormap;
sub get_composite_name;
sub get_default_colormap;
sub get_default_direction;
sub get_default_style;
sub get_default_visual;
sub get_direction;
sub get_display;
sub get_double_buffered;
sub get_events;
sub get_extension_events;
sub get_flags;
sub get_has_tooltip;
sub get_has_window;
sub get_mapped;
sub get_modifier_style;
sub get_name;
sub get_no_show_all;
sub get_pango_context;
sub get_parent;
sub get_parent_window;
sub get_pointer;
sub get_realized;
sub get_receives_default;
sub get_requisition;
sub get_root_window;
sub get_screen;
sub get_sensitive;
sub get_settings;
sub get_size_request;
sub get_snapshot;
sub get_state;
sub get_style;
sub get_tooltip_markup;
sub get_tooltip_text;
sub get_tooltip_window;
sub get_toplevel;
sub get_visible;
sub get_visual;
sub get_window;
sub grab_default;
sub grab_focus;
sub has_default;
sub has_focus;
sub has_grab;
sub has_rc_style;
sub has_screen;
sub hide;
sub hide_all;
sub hide_on_delete;
sub input_shape_combine_mask;
sub intersect;
sub is_ancestor;
sub is_composited;
sub is_drawable;
sub is_focus;
sub is_sensitive;
sub is_toplevel;
sub keynav_failed;
sub list_mnemonic_labels;
sub list_style_properties;
sub map;
sub mapped;
sub mnemonic_activate;
sub modify_base;
sub modify_bg;
sub modify_cursor;
sub modify_fg;
sub modify_font;
sub modify_style;
sub modify_text;
sub no_window;
sub parent;
sub parent_sensitive;
sub path;
sub pop_colormap;
sub pop_composite_child;
sub propagate_event;
sub push_colormap;
sub push_composite_child;
sub queue_draw;
sub queue_draw_area;
sub queue_resize;
sub queue_resize_no_redraw;
sub rc_style;
sub realize;
sub realized;
sub receives_default;
sub region_intersect;
sub remove_accelerator;
sub remove_mnemonic_label;
sub render_icon;
sub reparent;
sub requisition;
sub reset_rc_styles;
sub reset_shapes;
sub saved_state;
sub selection_add_target;
sub selection_add_targets;
sub selection_clear_targets;
sub selection_convert;
sub selection_remove_all;
sub send_focus_change;
sub sensitive;
sub set_accel_path;
sub set_allocation;
sub set_app_paintable;
sub set_can_default;
sub set_can_focus;
sub set_child_visible;
sub set_colormap;
sub set_composite_name;
sub set_default_colormap;
sub set_default_direction;
sub set_direction;
sub set_double_buffered;
sub set_events;
sub set_extension_events;
sub set_flags;
sub set_has_tooltip;
sub set_has_window;
sub set_mapped;
sub set_name;
sub set_no_show_all;
sub set_parent;
sub set_parent_window;
sub set_realized;
sub set_receives_default;
sub set_redraw_on_allocate;
sub set_scroll_adjustments;
sub set_sensitive;
sub set_size_request;
sub set_state;
sub set_style;
sub set_tooltip_markup;
sub set_tooltip_text;
sub set_tooltip_window;
sub set_visible;
sub set_window;
sub shape_combine_mask;
sub show;
sub show_all;
sub show_now;
sub size_allocate;
sub size_request;
sub state;
sub style;
sub style_attach;
sub style_get;
sub style_get_property;
sub thaw_child_notify;
sub toplevel;
sub translate_coordinates;
sub trigger_tooltip_query;
sub unmap;
sub unparent;
sub unrealize;
sub unset_flags;
sub visible;
sub window;
}
package Gtk2::Window {
sub activate_default;
sub activate_focus;
sub activate_key;
sub add_accel_group;
sub add_embedded_xid;
sub add_mnemonic;
sub begin_move_drag;
sub begin_resize_drag;
sub deiconify;
sub fullscreen;
sub get_accept_focus;
sub get_decorated;
sub get_default_icon_list;
sub get_default_icon_name;
sub get_default_size;
sub get_default_widget;
sub get_deletable;
sub get_destroy_with_parent;
sub get_focus;
sub get_focus_on_map;
sub get_frame_dimensions;
sub get_gravity;
sub get_group;
sub get_has_frame;
sub get_icon;
sub get_icon_list;
sub get_icon_name;
sub get_mnemonic_modifier;
sub get_mnemonics_visible;
sub get_modal;
sub get_opacity;
sub get_position;
sub get_resizable;
sub get_role;
sub get_screen;
sub get_size;
sub get_skip_pager_hint;
sub get_skip_taskbar_hint;
sub get_title;
sub get_transient_for;
sub get_type_hint;
sub get_urgency_hint;
sub get_window_type;
sub has_group;
sub has_toplevel_focus;
sub iconify;
sub is_active;
sub list_toplevels;
sub maximize;
sub mnemonic_activate;
sub move;
sub new;
sub parse_geometry;
sub present;
sub present_with_time;
sub propagate_key_event;
sub remove_accel_group;
sub remove_embedded_xid;
sub remove_mnemonic;
sub reshow_with_initial_size;
sub resize;
sub set_accept_focus;
sub set_auto_startup_notification;
sub set_decorated;
sub set_default;
sub set_default_icon;
sub set_default_icon_from_file;
sub set_default_icon_list;
sub set_default_icon_name;
sub set_default_size;
sub set_deletable;
sub set_destroy_with_parent;
sub set_focus;
sub set_focus_on_map;
sub set_frame_dimensions;
sub set_geometry_hints;
sub set_gravity;
sub set_has_frame;
sub set_icon;
sub set_icon_from_file;
sub set_icon_list;
sub set_icon_name;
sub set_keep_above;
sub set_keep_below;
sub set_mnemonic_modifier;
sub set_mnemonics_visible;
sub set_modal;
sub set_opacity;
sub set_position;
sub set_resizable;
sub set_role;
sub set_screen;
sub set_skip_pager_hint;
sub set_skip_taskbar_hint;
sub set_startup_id;
sub set_title;
sub set_transient_for;
sub set_type_hint;
sub set_urgency_hint;
sub set_wmclass;
sub stick;
sub unfullscreen;
sub unmaximize;
sub unstick;
}
package Gtk2::WindowGroup {
sub add_window;
sub get_current_grab;
sub list_windows;
sub new;
sub remove_window;
}
package HTML::Entities {
sub UNICODE_SUPPORT() ;
sub _decode_entities;
sub _probably_utf8_chunk;
sub decode;
sub decode_entities;
}
package HTML::Parser {
sub _alloc_pstate;
sub attr_encoded;
sub backquote;
sub boolean_attribute_value;
sub case_sensitive;
sub closing_plaintext;
sub empty_element_tags;
sub eof;
sub handler;
sub ignore_elements;
sub ignore_tags;
sub marked_sections;
sub parse;
sub report_tags;
sub strict_comment;
sub strict_end;
sub strict_names;
sub unbroken_text;
sub utf8_mode;
sub xml_mode;
sub xml_pic;
}
package HTTP::Parser::XS {
sub parse_http_request($$) ;
sub parse_http_response;
}
package Hash::Util {
sub all_keys(\%\@\@) ;
sub bucket_array;
sub bucket_info;
sub hash_seed() ;
sub hash_traversal_mask;
sub hash_value($;$) ;
sub hidden_ref_keys;
sub hv_store(\%$$) ;
sub legal_ref_keys;
sub reftype($) ;
}
package Hash::Util::FieldHash {
sub CLONE;
sub _active_fields;
sub _fieldhash($$) ;
sub _test_uvar_get;
sub _test_uvar_same;
sub _test_uvar_set;
sub id($) ;
sub id_2obj($) ;
sub reftype($) ;
sub register($@) ;
}
package I18N::Langinfo {
sub AUTOLOAD;
sub langinfo(_) ;
}
package IO::File {
sub O_ALIAS() ;
sub O_DEFER() ;
sub O_EXLOCK() ;
sub O_NOINHERIT() ;
sub O_RANDOM() ;
sub O_RAW() ;
sub O_RSRC() ;
sub O_SEQUENTIAL() ;
sub O_SHLOCK() ;
sub O_TEMPORARY() ;
sub new_tmpfile;
}
package IO::Handle {
sub _create_getline_subs;
sub blocking($;$) ;
sub clearerr;
sub error;
sub flush;
sub setbuf;
sub setvbuf;
sub sync;
sub ungetc;
sub untaint;
}
package IO::Poll {
sub _poll;
}
package IO::Pty {
sub pty_allocate;
}
package IO::Seekable {
sub getpos;
sub setpos;
}
package IO::Socket {
sub AF_802() ;
sub AF_AAL() ;
sub AF_CCITT() ;
sub AF_CHAOS() ;
sub AF_CTF() ;
sub AF_DATAKIT() ;
sub AF_DLI() ;
sub AF_ECMA() ;
sub AF_GOSIP() ;
sub AF_HYLINK() ;
sub AF_IMPLINK() ;
sub AF_ISO() ;
sub AF_LAST() ;
sub AF_LAT() ;
sub AF_LINK() ;
sub AF_NBS() ;
sub AF_NIT() ;
sub AF_NS() ;
sub AF_OSI() ;
sub AF_OSINET() ;
sub AF_PUP() ;
sub AF_USER() ;
sub AF_WAN() ;
sub MSG_BCAST() ;
sub MSG_BTAG() ;
sub MSG_CTLFLAGS() ;
sub MSG_CTLIGNORE() ;
sub MSG_EOF() ;
sub MSG_ETAG() ;
sub MSG_MAXIOVLEN() ;
sub MSG_MCAST() ;
sub MSG_URG() ;
sub MSG_WIRE() ;
sub PF_802() ;
sub PF_AAL() ;
sub PF_CCITT() ;
sub PF_CHAOS() ;
sub PF_CTF() ;
sub PF_DATAKIT() ;
sub PF_DLI() ;
sub PF_ECMA() ;
sub PF_GOSIP() ;
sub PF_HYLINK() ;
sub PF_IMPLINK() ;
sub PF_ISO() ;
sub PF_LAST() ;
sub PF_LAT() ;
sub PF_LINK() ;
sub PF_NBS() ;
sub PF_NIT() ;
sub PF_NS() ;
sub PF_OSI() ;
sub PF_OSINET() ;
sub PF_PUP() ;
sub PF_USER() ;
sub PF_WAN() ;
sub SCM_CONNECT() ;
sub SCM_CREDS() ;
sub SO_BACKLOG() ;
sub SO_CHAMELEON() ;
sub SO_DGRAM_ERRIND() ;
sub SO_DONTLINGER() ;
sub SO_FAMILY() ;
sub SO_PASSIFNAME() ;
sub SO_PROTOTYPE() ;
sub SO_STATE() ;
sub SO_USELOOPBACK() ;
sub SO_XOPEN() ;
sub SO_XSE() ;
sub inet_aton;
sub inet_ntoa;
sub pack_sockaddr_in6;
sub pack_sockaddr_in;
sub pack_sockaddr_un;
sub sockaddr_family;
sub sockatmark($) ;
sub unpack_sockaddr_in6;
sub unpack_sockaddr_in;
sub unpack_sockaddr_un;
}
package IO::Socket::INET {
sub AF_802() ;
sub AF_AAL() ;
sub AF_CCITT() ;
sub AF_CHAOS() ;
sub AF_CTF() ;
sub AF_DATAKIT() ;
sub AF_DLI() ;
sub AF_ECMA() ;
sub AF_GOSIP() ;
sub AF_HYLINK() ;
sub AF_IMPLINK() ;
sub AF_ISO() ;
sub AF_LAST() ;
sub AF_LAT() ;
sub AF_LINK() ;
sub AF_NBS() ;
sub AF_NIT() ;
sub AF_NS() ;
sub AF_OSI() ;
sub AF_OSINET() ;
sub AF_PUP() ;
sub AF_USER() ;
sub AF_WAN() ;
sub MSG_BCAST() ;
sub MSG_BTAG() ;
sub MSG_CTLFLAGS() ;
sub MSG_CTLIGNORE() ;
sub MSG_EOF() ;
sub MSG_ETAG() ;
sub MSG_MAXIOVLEN() ;
sub MSG_MCAST() ;
sub MSG_URG() ;
sub MSG_WIRE() ;
sub PF_802() ;
sub PF_AAL() ;
sub PF_CCITT() ;
sub PF_CHAOS() ;
sub PF_CTF() ;
sub PF_DATAKIT() ;
sub PF_DLI() ;
sub PF_ECMA() ;
sub PF_GOSIP() ;
sub PF_HYLINK() ;
sub PF_IMPLINK() ;
sub PF_ISO() ;
sub PF_LAST() ;
sub PF_LAT() ;
sub PF_LINK() ;
sub PF_NBS() ;
sub PF_NIT() ;
sub PF_NS() ;
sub PF_OSI() ;
sub PF_OSINET() ;
sub PF_PUP() ;
sub PF_USER() ;
sub PF_WAN() ;
sub SCM_CONNECT() ;
sub SCM_CREDS() ;
sub SO_BACKLOG() ;
sub SO_CHAMELEON() ;
sub SO_DGRAM_ERRIND() ;
sub SO_DONTLINGER() ;
sub SO_FAMILY() ;
sub SO_PASSIFNAME() ;
sub SO_PROTOTYPE() ;
sub SO_STATE() ;
sub SO_USELOOPBACK() ;
sub SO_XOPEN() ;
sub SO_XSE() ;
sub inet_aton;
sub inet_ntoa;
sub pack_sockaddr_in6;
sub pack_sockaddr_in;
sub pack_sockaddr_un;
sub sockaddr_family;
sub unpack_sockaddr_in6;
sub unpack_sockaddr_in;
sub unpack_sockaddr_un;
}
package IO::Socket::INET6 {
sub AI_PASSIVE;
sub getaddrinfo;
sub in6addr_any;
sub pack_sockaddr_in6_all;
sub unpack_sockaddr_in6_all;
}
package IO::Socket::UNIX {
sub AF_802() ;
sub AF_AAL() ;
sub AF_CCITT() ;
sub AF_CHAOS() ;
sub AF_CTF() ;
sub AF_DATAKIT() ;
sub AF_DLI() ;
sub AF_ECMA() ;
sub AF_GOSIP() ;
sub AF_HYLINK() ;
sub AF_IMPLINK() ;
sub AF_ISO() ;
sub AF_LAST() ;
sub AF_LAT() ;
sub AF_LINK() ;
sub AF_NBS() ;
sub AF_NIT() ;
sub AF_NS() ;
sub AF_OSI() ;
sub AF_OSINET() ;
sub AF_PUP() ;
sub AF_USER() ;
sub AF_WAN() ;
sub MSG_BCAST() ;
sub MSG_BTAG() ;
sub MSG_CTLFLAGS() ;
sub MSG_CTLIGNORE() ;
sub MSG_EOF() ;
sub MSG_ETAG() ;
sub MSG_MAXIOVLEN() ;
sub MSG_MCAST() ;
sub MSG_URG() ;
sub MSG_WIRE() ;
sub PF_802() ;
sub PF_AAL() ;
sub PF_CCITT() ;
sub PF_CHAOS() ;
sub PF_CTF() ;
sub PF_DATAKIT() ;
sub PF_DLI() ;
sub PF_ECMA() ;
sub PF_GOSIP() ;
sub PF_HYLINK() ;
sub PF_IMPLINK() ;
sub PF_ISO() ;
sub PF_LAST() ;
sub PF_LAT() ;
sub PF_LINK() ;
sub PF_NBS() ;
sub PF_NIT() ;
sub PF_NS() ;
sub PF_OSI() ;
sub PF_OSINET() ;
sub PF_PUP() ;
sub PF_USER() ;
sub PF_WAN() ;
sub SCM_CONNECT() ;
sub SCM_CREDS() ;
sub SO_BACKLOG() ;
sub SO_CHAMELEON() ;
sub SO_DGRAM_ERRIND() ;
sub SO_DONTLINGER() ;
sub SO_FAMILY() ;
sub SO_PASSIFNAME() ;
sub SO_PROTOTYPE() ;
sub SO_STATE() ;
sub SO_USELOOPBACK() ;
sub SO_XOPEN() ;
sub SO_XSE() ;
sub inet_aton;
sub inet_ntoa;
sub pack_sockaddr_in6;
sub pack_sockaddr_in;
sub pack_sockaddr_un;
sub sockaddr_family;
sub unpack_sockaddr_in6;
sub unpack_sockaddr_in;
sub unpack_sockaddr_un;
}
package IO::Tty {
sub O_ALIAS() ;
sub O_DEFER() ;
sub O_EXLOCK() ;
sub O_NOINHERIT() ;
sub O_RANDOM() ;
sub O_RAW() ;
sub O_RSRC() ;
sub O_SEQUENTIAL() ;
sub O_SHLOCK() ;
sub O_TEMPORARY() ;
sub ttyname;
}
package IPC::Msg::stat {
sub pack($) ;
sub unpack($$) ;
}
package IPC::Semaphore::stat {
sub pack($) ;
sub unpack($$) ;
}
package IPC::SharedMem::stat {
sub pack($) ;
sub unpack($$) ;
}
package IPC::SysV {
sub _constant($) ;
sub ftok($;$) ;
sub memread($$$$) ;
sub memwrite($$$$) ;
sub shmat($$$) ;
sub shmdt($) ;
}
package Internals {
sub SvREADONLY(\[$%@];$) ;
sub SvREFCNT(\[$%@];$) ;
sub V;
sub hv_clear_placeholders(\%) ;
}
package JSON::XS {
sub CLONE;
sub DESTROY;
sub allow_blessed;
sub allow_nonref;
sub allow_tags;
sub allow_unknown;
sub ascii;
sub canonical;
sub convert_blessed;
sub decode;
sub decode_json($) ;
sub decode_prefix;
sub encode;
sub encode_json($) ;
sub filter_json_object;
sub filter_json_single_key_object;
sub get_allow_blessed;
sub get_allow_nonref;
sub get_allow_tags;
sub get_allow_unknown;
sub get_ascii;
sub get_canonical;
sub get_convert_blessed;
sub get_indent;
sub get_latin1;
sub get_max_depth;
sub get_max_size;
sub get_relaxed;
sub get_shrink;
sub get_space_after;
sub get_space_before;
sub get_utf8;
sub incr_parse;
sub incr_reset;
sub incr_skip;
sub indent;
sub latin1;
sub max_depth;
sub max_size;
sub new;
sub pretty;
sub relaxed;
sub shrink;
sub space_after;
sub space_before;
sub utf8;
}
package LibAppArmor {
sub _aa_is_blacklisted;
sub aa_change_hat;
sub aa_change_hat_vargs;
sub aa_change_hatv;
sub aa_change_onexec;
sub aa_change_profile;
sub aa_find_mountpoint;
sub aa_getcon;
sub aa_getpeercon;
sub aa_getpeercon_raw;
sub aa_getprocattr;
sub aa_getprocattr_raw;
sub aa_gettaskcon;
sub aa_is_enabled;
sub aa_query_file_path;
sub aa_query_file_path_len;
sub aa_query_label;
sub aa_query_link_path;
sub aa_query_link_path_len;
sub aa_splitcon;
sub aa_stack_onexec;
sub aa_stack_profile;
sub free_record;
sub parse_record;
}
package LibAppArmor::aa_log_record {
sub swig_active_hat_get;
sub swig_active_hat_set;
sub swig_attribute_get;
sub swig_attribute_set;
sub swig_audit_id_get;
sub swig_audit_id_set;
sub swig_audit_sub_id_get;
sub swig_audit_sub_id_set;
sub swig_bitmask_get;
sub swig_bitmask_set;
sub swig_comm_get;
sub swig_comm_set;
sub swig_dbus_bus_get;
sub swig_dbus_bus_set;
sub swig_dbus_interface_get;
sub swig_dbus_interface_set;
sub swig_dbus_member_get;
sub swig_dbus_member_set;
sub swig_dbus_path_get;
sub swig_dbus_path_set;
sub swig_denied_mask_get;
sub swig_denied_mask_set;
sub swig_epoch_get;
sub swig_epoch_set;
sub swig_error_code_get;
sub swig_error_code_set;
sub swig_event_get;
sub swig_event_set;
sub swig_flags_get;
sub swig_flags_set;
sub swig_fs_type_get;
sub swig_fs_type_set;
sub swig_fsuid_get;
sub swig_fsuid_set;
sub swig_info_get;
sub swig_info_set;
sub swig_magic_token_get;
sub swig_magic_token_set;
sub swig_name2_get;
sub swig_name2_set;
sub swig_name_get;
sub swig_name_set;
sub swig_namespace_get;
sub swig_namespace_set;
sub swig_net_family_get;
sub swig_net_family_set;
sub swig_net_foreign_addr_get;
sub swig_net_foreign_addr_set;
sub swig_net_foreign_port_get;
sub swig_net_foreign_port_set;
sub swig_net_local_addr_get;
sub swig_net_local_addr_set;
sub swig_net_local_port_get;
sub swig_net_local_port_set;
sub swig_net_protocol_get;
sub swig_net_protocol_set;
sub swig_net_sock_type_get;
sub swig_net_sock_type_set;
sub swig_operation_get;
sub swig_operation_set;
sub swig_ouid_get;
sub swig_ouid_set;
sub swig_parent_get;
sub swig_parent_set;
sub swig_peer_get;
sub swig_peer_info_get;
sub swig_peer_info_set;
sub swig_peer_pid_get;
sub swig_peer_pid_set;
sub swig_peer_profile_get;
sub swig_peer_profile_set;
sub swig_peer_set;
sub swig_pid_get;
sub swig_pid_set;
sub swig_profile_get;
sub swig_profile_set;
sub swig_requested_mask_get;
sub swig_requested_mask_set;
sub swig_signal_get;
sub swig_signal_set;
sub swig_src_name_get;
sub swig_src_name_set;
sub swig_task_get;
sub swig_task_set;
sub swig_version_get;
sub swig_version_set;
}
package LibAppArmorc {
sub _aa_is_blacklisted;
sub aa_change_hat;
sub aa_change_hat_vargs;
sub aa_change_hatv;
sub aa_change_onexec;
sub aa_change_profile;
sub aa_find_mountpoint;
sub aa_getcon;
sub aa_getpeercon;
sub aa_getpeercon_raw;
sub aa_getprocattr;
sub aa_getprocattr_raw;
sub aa_gettaskcon;
sub aa_is_enabled;
sub aa_log_record_active_hat_get;
sub aa_log_record_active_hat_set;
sub aa_log_record_attribute_get;
sub aa_log_record_attribute_set;
sub aa_log_record_audit_id_get;
sub aa_log_record_audit_id_set;
sub aa_log_record_audit_sub_id_get;
sub aa_log_record_audit_sub_id_set;
sub aa_log_record_bitmask_get;
sub aa_log_record_bitmask_set;
sub aa_log_record_comm_get;
sub aa_log_record_comm_set;
sub aa_log_record_dbus_bus_get;
sub aa_log_record_dbus_bus_set;
sub aa_log_record_dbus_interface_get;
sub aa_log_record_dbus_interface_set;
sub aa_log_record_dbus_member_get;
sub aa_log_record_dbus_member_set;
sub aa_log_record_dbus_path_get;
sub aa_log_record_dbus_path_set;
sub aa_log_record_denied_mask_get;
sub aa_log_record_denied_mask_set;
sub aa_log_record_epoch_get;
sub aa_log_record_epoch_set;
sub aa_log_record_error_code_get;
sub aa_log_record_error_code_set;
sub aa_log_record_event_get;
sub aa_log_record_event_set;
sub aa_log_record_flags_get;
sub aa_log_record_flags_set;
sub aa_log_record_fs_type_get;
sub aa_log_record_fs_type_set;
sub aa_log_record_fsuid_get;
sub aa_log_record_fsuid_set;
sub aa_log_record_info_get;
sub aa_log_record_info_set;
sub aa_log_record_magic_token_get;
sub aa_log_record_magic_token_set;
sub aa_log_record_name2_get;
sub aa_log_record_name2_set;
sub aa_log_record_name_get;
sub aa_log_record_name_set;
sub aa_log_record_namespace_get;
sub aa_log_record_namespace_set;
sub aa_log_record_net_family_get;
sub aa_log_record_net_family_set;
sub aa_log_record_net_foreign_addr_get;
sub aa_log_record_net_foreign_addr_set;
sub aa_log_record_net_foreign_port_get;
sub aa_log_record_net_foreign_port_set;
sub aa_log_record_net_local_addr_get;
sub aa_log_record_net_local_addr_set;
sub aa_log_record_net_local_port_get;
sub aa_log_record_net_local_port_set;
sub aa_log_record_net_protocol_get;
sub aa_log_record_net_protocol_set;
sub aa_log_record_net_sock_type_get;
sub aa_log_record_net_sock_type_set;
sub aa_log_record_operation_get;
sub aa_log_record_operation_set;
sub aa_log_record_ouid_get;
sub aa_log_record_ouid_set;
sub aa_log_record_parent_get;
sub aa_log_record_parent_set;
sub aa_log_record_peer_get;
sub aa_log_record_peer_info_get;
sub aa_log_record_peer_info_set;
sub aa_log_record_peer_pid_get;
sub aa_log_record_peer_pid_set;
sub aa_log_record_peer_profile_get;
sub aa_log_record_peer_profile_set;
sub aa_log_record_peer_set;
sub aa_log_record_pid_get;
sub aa_log_record_pid_set;
sub aa_log_record_profile_get;
sub aa_log_record_profile_set;
sub aa_log_record_requested_mask_get;
sub aa_log_record_requested_mask_set;
sub aa_log_record_signal_get;
sub aa_log_record_signal_set;
sub aa_log_record_src_name_get;
sub aa_log_record_src_name_set;
sub aa_log_record_task_get;
sub aa_log_record_task_set;
sub aa_log_record_version_get;
sub aa_log_record_version_set;
sub aa_query_file_path;
sub aa_query_file_path_len;
sub aa_query_label;
sub aa_query_link_path;
sub aa_query_link_path_len;
sub aa_splitcon;
sub aa_stack_onexec;
sub aa_stack_profile;
sub delete_aa_log_record;
sub free_record;
sub new_aa_log_record;
sub parse_record;
}
package List::MoreUtils {
sub _XScompiled;
sub _array_iterator(;$) ;
sub _natatime_iterator() ;
sub after(&@) ;
sub after_incl(&@) ;
sub all(&@) ;
sub all_u(&@) ;
sub any(&@) ;
sub any_u(&@) ;
sub apply(&@) ;
sub before(&@) ;
sub before_incl(&@) ;
sub bsearch(&@) ;
sub bsearch_index(&@) ;
sub bsearchidx(&@) ;
sub distinct(@) ;
sub each_array(\@;\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@) ;
sub each_arrayref;
sub false(&@) ;
sub first_index(&@) ;
sub first_result(&@) ;
sub first_value(&@) ;
sub firstidx(&@) ;
sub firstres(&@) ;
sub firstval(&@) ;
sub indexes(&@) ;
sub insert_after(&$\@) ;
sub insert_after_string($$\@) ;
sub last_index(&@) ;
sub last_result(&@) ;
sub last_value(&@) ;
sub lastidx(&@) ;
sub lastres(&@) ;
sub lastval(&@) ;
sub mesh(\@\@;\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@) ;
sub minmax(@) ;
sub natatime($@) ;
sub none(&@) ;
sub none_u(&@) ;
sub notall(&@) ;
sub notall_u(&@) ;
sub one(&@) ;
sub one_u(&@) ;
sub only_index(&@) ;
sub only_result(&@) ;
sub only_value(&@) ;
sub onlyidx(&@) ;
sub onlyres(&@) ;
sub onlyval(&@) ;
sub pairwise(&\@\@) ;
sub part(&@) ;
sub singleton(@) ;
sub true(&@) ;
sub uniq(@) ;
sub zip(\@\@;\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@\@) ;
}
package List::MoreUtils_ea {
sub DESTROY;
}
package List::MoreUtils_na {
sub DESTROY;
}
package List::Util {
sub all(&@) ;
sub any(&@) ;
sub first(&@) ;
sub max(@) ;
sub maxstr(@) ;
sub min(@) ;
sub minstr(@) ;
sub none(&@) ;
sub notall(&@) ;
sub pairfirst(&@) ;
sub pairgrep(&@) ;
sub pairkeys(@) ;
sub pairmap(&@) ;
sub pairs(@) ;
sub pairvalues(@) ;
sub product(@) ;
sub reduce(&@) ;
sub shuffle(@) ;
sub sum(@) ;
sub sum0(@) ;
sub uniq(@) ;
sub uniqnum(@) ;
sub uniqstr(@) ;
sub unpairs(@) ;
}
package Locale::gettext {
sub bind_textdomain_codeset;
sub bindtextdomain;
sub constant;
sub dcgettext;
sub dcngettext;
sub dgettext;
sub dngettext;
sub gettext;
sub localeconv;
sub ngettext;
sub setlocale;
sub textdomain;
}
package MIME::Base64 {
sub decode($) ;
sub decode_base64($) ;
sub decoded_base64_length($) ;
sub encode($;$) ;
sub encode_base64($;$) ;
sub encoded_base64_length($;$) ;
}
package MIME::Charset {
sub FB_CROAK() ;
sub FB_HTMLCREF() ;
sub FB_PERLQQ() ;
sub FB_XMLCREF() ;
sub is_utf8($;$) ;
}
package MIME::QuotedPrint {
sub decode_qp($) ;
sub encode_qp($;$$) ;
}
package Math::BigInt::FastCalc {
sub __strip_zeros;
sub _acmp;
sub _copy;
sub _dec;
sub _inc;
sub _is_even;
sub _is_odd;
sub _is_one;
sub _is_ten;
sub _is_two;
sub _is_zero;
sub _len;
sub _new;
sub _one;
sub _ten;
sub _two;
sub _zero;
}
package Moose {
sub is_class_loaded;
}
package Moose::Exporter {
sub _export_is_flagged;
sub _flag_as_reexport;
sub is_class_loaded;
sub reftype($) ;
sub subname;
sub uniq(@) ;
}
package Moose::Meta::Attribute {
sub any(&@) ;
sub blessed($) ;
}
package Moose::Meta::Class {
sub any(&@) ;
sub blessed($) ;
}
package Moose::Meta::Class::Immutable::Trait {
sub blessed($) ;
}
package Moose::Meta::Method::Constructor {
sub weaken($) ;
}
package Moose::Meta::Method::Delegation {
sub blessed($) ;
sub weaken($) ;
}
package Moose::Meta::Method::Destructor {
sub blessed($) ;
sub weaken($) ;
}
package Moose::Meta::Object::Trait {
sub blessed($) ;
}
package Moose::Meta::Role {
sub blessed($) ;
}
package Moose::Meta::Role::Application {
sub all(&@) ;
}
package Moose::Meta::Role::Application::RoleSummation {
sub all(&@) ;
sub blessed($) ;
}
package Moose::Meta::Role::Application::ToClass {
sub first(&@) ;
sub weaken($) ;
}
package Moose::Meta::Role::Application::ToInstance {
sub _reset_amagic;
sub all(&@) ;
sub blessed($) ;
}
package Moose::Meta::Role::Attribute {
sub all(&@) ;
sub blessed($) ;
sub weaken($) ;
}
package Moose::Meta::Role::Composite {
sub blessed($) ;
}
package Moose::Meta::TypeCoercion::Union {
sub blessed($) ;
}
package Moose::Meta::TypeConstraint {
sub refaddr($) ;
sub subname;
}
package Moose::Meta::TypeConstraint::DuckType {
sub all(&@) ;
sub blessed($) ;
}
package Moose::Meta::TypeConstraint::Parameterized {
sub blessed($) ;
}
package Moose::Meta::TypeConstraint::Registry {
sub blessed($) ;
}
package Moose::Meta::TypeConstraint::Union {
sub all(&@) ;
sub first(&@) ;
}
package Moose::Role {
sub is_class_loaded;
}
package Moose::Util {
sub _STRING($) ;
sub all(&@) ;
sub any(&@) ;
sub blessed($) ;
sub first(&@) ;
}
package Moose::Util::MetaRole {
sub all(&@) ;
sub blessed($) ;
sub first(&@) ;
}
package Moose::Util::TypeConstraints {
sub blessed($) ;
}
package Moose::Util::TypeConstraints::Builtins {
sub _RegexpRef;
sub blessed($) ;
sub is_class_loaded;
}
package Net::DBus::Binding::Bus {
sub _open($) ;
sub _open_private($) ;
}
package Net::DBus::Binding::C::Connection {
sub DESTROY($) ;
sub _add_filter($$) ;
sub _dispatch($) ;
sub _register_fallback($$$) ;
sub _register_object_path($$$) ;
sub _send($$) ;
sub _send_with_reply($$$) ;
sub _send_with_reply_and_block($$$) ;
sub _set_owner($$) ;
sub _set_timeout_callbacks($) ;
sub _set_watch_callbacks($) ;
sub _unregister_object_path($$) ;
sub dbus_bus_add_match($$) ;
sub dbus_bus_get_unique_name($) ;
sub dbus_bus_register($) ;
sub dbus_bus_remove_match($$) ;
sub dbus_bus_request_name($$) ;
sub dbus_connection_borrow_message($) ;
sub dbus_connection_disconnect($) ;
sub dbus_connection_flush($) ;
sub dbus_connection_get_is_authenticated($) ;
sub dbus_connection_get_is_connected($) ;
sub dbus_connection_pop_message($) ;
sub dbus_connection_ref($) ;
sub dbus_connection_return_message($$) ;
sub dbus_connection_steal_borrowed_message($$) ;
sub dbus_connection_unref($) ;
}
package Net::DBus::Binding::C::Message {
sub DESTROY($) ;
sub dbus_message_get_destination($) ;
sub dbus_message_get_error_name($) ;
sub dbus_message_get_interface($) ;
sub dbus_message_get_member($) ;
sub dbus_message_get_no_reply($) ;
sub dbus_message_get_path($) ;
sub dbus_message_get_sender($) ;
sub dbus_message_get_serial($) ;
sub dbus_message_get_signature($) ;
sub dbus_message_get_type($) ;
sub dbus_message_set_destination($$) ;
sub dbus_message_set_no_reply($$) ;
sub dbus_message_set_sender($$) ;
}
package Net::DBus::Binding::C::PendingCall {
sub DESTROY($) ;
sub _set_notify($$) ;
sub _steal_reply($) ;
sub dbus_pending_call_block($) ;
sub dbus_pending_call_cancel($) ;
sub dbus_pending_call_get_completed($) ;
}
package Net::DBus::Binding::C::Server {
sub DESTROY($) ;
sub _set_connection_callback($) ;
sub _set_owner($$) ;
sub _set_timeout_callbacks($) ;
sub _set_watch_callbacks($) ;
sub dbus_server_disconnect($) ;
sub dbus_server_get_is_connected($) ;
}
package Net::DBus::Binding::C::Timeout {
sub get_data($) ;
sub get_interval($) ;
sub handle($) ;
sub is_enabled($) ;
sub set_data($$) ;
}
package Net::DBus::Binding::C::Watch {
sub get_data($) ;
sub get_fileno($) ;
sub get_flags($) ;
sub handle($$) ;
sub is_enabled($) ;
sub set_data($$) ;
}
package Net::DBus::Binding::Connection {
sub _open($) ;
sub _open_private($) ;
}
package Net::DBus::Binding::Iterator {
sub DESTROY($) ;
sub _append_int64($$) ;
sub _append_uint64($$) ;
sub _close_container($$) ;
sub _get_int64($) ;
sub _get_uint64($) ;
sub _open_container($$$) ;
sub _recurse($) ;
sub append_boolean($$) ;
sub append_byte($$) ;
sub append_double($$) ;
sub append_int16($$) ;
sub append_int32($$) ;
sub append_object_path($$) ;
sub append_signature($$) ;
sub append_string($$) ;
sub append_uint16($$) ;
sub append_uint32($$) ;
sub append_unix_fd($$) ;
sub get_arg_type($) ;
sub get_boolean($) ;
sub get_byte($) ;
sub get_double($) ;
sub get_element_type($) ;
sub get_int16($) ;
sub get_int32($) ;
sub get_object_path($) ;
sub get_signature($) ;
sub get_string($) ;
sub get_uint16($) ;
sub get_uint32($) ;
sub get_unix_fd($) ;
sub has_next($) ;
sub next($) ;
}
package Net::DBus::Binding::Message {
sub _create($) ;
sub _iterator($) ;
sub _iterator_append($) ;
}
package Net::DBus::Binding::Message::Error {
sub _create($$$) ;
}
package Net::DBus::Binding::Message::MethodCall {
sub _create($$$$) ;
}
package Net::DBus::Binding::Message::MethodReturn {
sub _create($) ;
}
package Net::DBus::Binding::Message::Signal {
sub _create($$$) ;
}
package Net::DBus::Binding::Server {
sub _open($) ;
}
package Net::DNS::Packet {
sub dn_expand_XS;
}
package Net::DNS::Resolver::Base {
sub AF_802() ;
sub AF_AAL() ;
sub AF_CCITT() ;
sub AF_CHAOS() ;
sub AF_CTF() ;
sub AF_DATAKIT() ;
sub AF_DLI() ;
sub AF_ECMA() ;
sub AF_GOSIP() ;
sub AF_HYLINK() ;
sub AF_IMPLINK() ;
sub AF_ISO() ;
sub AF_LAST() ;
sub AF_LAT() ;
sub AF_LINK() ;
sub AF_NBS() ;
sub AF_NIT() ;
sub AF_NS() ;
sub AF_OSI() ;
sub AF_OSINET() ;
sub AF_PUP() ;
sub AF_USER() ;
sub AF_WAN() ;
sub MSG_BCAST() ;
sub MSG_BTAG() ;
sub MSG_CTLFLAGS() ;
sub MSG_CTLIGNORE() ;
sub MSG_EOF() ;
sub MSG_ETAG() ;
sub MSG_MAXIOVLEN() ;
sub MSG_MCAST() ;
sub MSG_URG() ;
sub MSG_WIRE() ;
sub PF_802() ;
sub PF_AAL() ;
sub PF_CCITT() ;
sub PF_CHAOS() ;
sub PF_CTF() ;
sub PF_DATAKIT() ;
sub PF_DLI() ;
sub PF_ECMA() ;
sub PF_GOSIP() ;
sub PF_HYLINK() ;
sub PF_IMPLINK() ;
sub PF_ISO() ;
sub PF_LAST() ;
sub PF_LAT() ;
sub PF_LINK() ;
sub PF_NBS() ;
sub PF_NIT() ;
sub PF_NS() ;
sub PF_OSI() ;
sub PF_OSINET() ;
sub PF_PUP() ;
sub PF_USER() ;
sub PF_WAN() ;
sub SCM_CONNECT() ;
sub SCM_CREDS() ;
sub SO_BACKLOG() ;
sub SO_CHAMELEON() ;
sub SO_DGRAM_ERRIND() ;
sub SO_DONTLINGER() ;
sub SO_FAMILY() ;
sub SO_PASSIFNAME() ;
sub SO_PROTOTYPE() ;
sub SO_STATE() ;
sub SO_USELOOPBACK() ;
sub SO_XOPEN() ;
sub SO_XSE() ;
sub inet_aton;
sub inet_ntoa;
sub pack_sockaddr_in6;
sub pack_sockaddr_in;
sub pack_sockaddr_un;
sub sockaddr_family;
sub unpack_sockaddr_in6;
sub unpack_sockaddr_in;
sub unpack_sockaddr_un;
}
package Net::LibIDN {
sub constant;
sub idn_prep_iscsi($;$) ;
sub idn_prep_kerberos5($;$) ;
sub idn_prep_name($;$) ;
sub idn_prep_node($;$) ;
sub idn_prep_plain($;$) ;
sub idn_prep_resource($;$) ;
sub idn_prep_sasl($;$) ;
sub idn_prep_trace($;$) ;
sub idn_punycode_decode($;$) ;
sub idn_punycode_encode($;$) ;
sub idn_to_ascii($;$$) ;
sub idn_to_unicode($;$$) ;
sub tld_check($$;$$) ;
sub tld_get($) ;
sub tld_get_table($) ;
}
package Net::SSLeay {
sub AF_802() ;
sub AF_AAL() ;
sub AF_CCITT() ;
sub AF_CHAOS() ;
sub AF_CTF() ;
sub AF_DATAKIT() ;
sub AF_DLI() ;
sub AF_ECMA() ;
sub AF_GOSIP() ;
sub AF_HYLINK() ;
sub AF_IMPLINK() ;
sub AF_ISO() ;
sub AF_LAST() ;
sub AF_LAT() ;
sub AF_LINK() ;
sub AF_NBS() ;
sub AF_NIT() ;
sub AF_NS() ;
sub AF_OSI() ;
sub AF_OSINET() ;
sub AF_PUP() ;
sub AF_USER() ;
sub AF_WAN() ;
sub ASN1_INTEGER_free($) ;
sub ASN1_INTEGER_get($) ;
sub ASN1_INTEGER_new() ;
sub ASN1_INTEGER_set($$) ;
sub ASN1_TIME_free($) ;
sub ASN1_TIME_new() ;
sub ASN1_TIME_set($$) ;
sub ASN1_TIME_timet($) ;
sub BIO_eof($) ;
sub BIO_f_ssl() ;
sub BIO_free($) ;
sub BIO_new($) ;
sub BIO_new_buffer_ssl_connect($) ;
sub BIO_new_file($$) ;
sub BIO_new_ssl($$) ;
sub BIO_new_ssl_connect($) ;
sub BIO_pending($) ;
sub BIO_read($;$) ;
sub BIO_s_mem() ;
sub BIO_ssl_copy_session_id($$) ;
sub BIO_ssl_shutdown($) ;
sub BIO_wpending($) ;
sub BIO_write($$) ;
sub CIPHER_description($$$) ;
sub CIPHER_get_bits($;$) ;
sub CIPHER_get_name($) ;
sub CLONE(;@) ;
sub COMP_add_compression_method($$) ;
sub CTX_add_client_CA($$) ;
sub CTX_add_extra_chain_cert($$) ;
sub CTX_add_session($$) ;
sub CTX_callback_ctrl($$$) ;
sub CTX_check_private_key($) ;
sub CTX_ctrl($$$$) ;
sub CTX_flush_sessions($$) ;
sub CTX_free($) ;
sub CTX_get_app_data($) ;
sub CTX_get_cert_store($) ;
sub CTX_get_client_CA_list($) ;
sub CTX_get_ex_data($$) ;
sub CTX_get_ex_new_index($$$$$) ;
sub CTX_get_mode($) ;
sub CTX_get_options($) ;
sub CTX_get_quiet_shutdown($) ;
sub CTX_get_read_ahead($) ;
sub CTX_get_session_cache_mode($) ;
sub CTX_get_timeout($) ;
sub CTX_get_verify_depth($) ;
sub CTX_get_verify_mode($) ;
sub CTX_load_verify_locations($$$) ;
sub CTX_need_tmp_RSA($) ;
sub CTX_new() ;
sub CTX_new_with_method($) ;
sub CTX_remove_session($$) ;
sub CTX_sess_accept($) ;
sub CTX_sess_accept_good($) ;
sub CTX_sess_accept_renegotiate($) ;
sub CTX_sess_cache_full($) ;
sub CTX_sess_cb_hits($) ;
sub CTX_sess_connect($) ;
sub CTX_sess_connect_good($) ;
sub CTX_sess_connect_renegotiate($) ;
sub CTX_sess_get_cache_size($) ;
sub CTX_sess_hits($) ;
sub CTX_sess_misses($) ;
sub CTX_sess_number($) ;
sub CTX_sess_set_cache_size($$) ;
sub CTX_sess_timeouts($) ;
sub CTX_sessions($) ;
sub CTX_set1_param($$) ;
sub CTX_set_alpn_protos($;$) ;
sub CTX_set_alpn_select_cb($$;$) ;
sub CTX_set_app_data($$) ;
sub CTX_set_cert_store($$) ;
sub CTX_set_cert_verify_callback($$;$) ;
sub CTX_set_cipher_list($$) ;
sub CTX_set_client_CA_list($$) ;
sub CTX_set_default_passwd_cb($;$) ;
sub CTX_set_default_passwd_cb_userdata($;$) ;
sub CTX_set_default_verify_paths($) ;
sub CTX_set_ex_data($$$) ;
sub CTX_set_info_callback($$;$) ;
sub CTX_set_mode($$) ;
sub CTX_set_next_proto_select_cb($$;$) ;
sub CTX_set_next_protos_advertised_cb($$;$) ;
sub CTX_set_options($$) ;
sub CTX_set_purpose($$) ;
sub CTX_set_quiet_shutdown($$) ;
sub CTX_set_read_ahead($$) ;
sub CTX_set_session_cache_mode($$) ;
sub CTX_set_session_id_context($$$) ;
sub CTX_set_ssl_version($$) ;
sub CTX_set_timeout($$) ;
sub CTX_set_tlsext_servername_callback($;$$) ;
sub CTX_set_tlsext_status_cb($$;$) ;
sub CTX_set_tmp_dh($$) ;
sub CTX_set_tmp_dh_callback($$) ;
sub CTX_set_tmp_ecdh($$) ;
sub CTX_set_tmp_rsa($$) ;
sub CTX_set_tmp_rsa_callback($$) ;
sub CTX_set_trust($$) ;
sub CTX_set_verify($$;$) ;
sub CTX_set_verify_depth($$) ;
sub CTX_tlsv1_1_new() ;
sub CTX_tlsv1_2_new() ;
sub CTX_tlsv1_new() ;
sub CTX_use_PKCS12_file($$;$) ;
sub CTX_use_PrivateKey($$) ;
sub CTX_use_PrivateKey_file($$$) ;
sub CTX_use_RSAPrivateKey($$) ;
sub CTX_use_RSAPrivateKey_file($$$) ;
sub CTX_use_certificate($$) ;
sub CTX_use_certificate_chain_file($$) ;
sub CTX_use_certificate_file($$$) ;
sub CTX_v23_new() ;
sub DH_free($) ;
sub EC_KEY_free($) ;
sub EC_KEY_new_by_curve_name($) ;
sub ENGINE_by_id($) ;
sub ENGINE_load_builtin_engines() ;
sub ENGINE_register_all_complete() ;
sub ENGINE_set_default($$) ;
sub ERR_clear_error() ;
sub ERR_error_string($;$) ;
sub ERR_get_error() ;
sub ERR_load_RAND_strings() ;
sub ERR_load_SSL_strings() ;
sub ERR_load_crypto_strings() ;
sub ERR_peek_error() ;
sub ERR_put_error($$$$$) ;
sub EVP_Digest(;@) ;
sub EVP_DigestFinal($) ;
sub EVP_DigestFinal_ex($) ;
sub EVP_DigestInit($$) ;
sub EVP_DigestInit_ex($$$) ;
sub EVP_DigestUpdate($$) ;
sub EVP_MD_CTX_create() ;
sub EVP_MD_CTX_destroy($) ;
sub EVP_MD_CTX_md($) ;
sub EVP_MD_size($) ;
sub EVP_MD_type($) ;
sub EVP_PKEY_assign_RSA($$) ;
sub EVP_PKEY_bits($) ;
sub EVP_PKEY_copy_parameters($$) ;
sub EVP_PKEY_free($) ;
sub EVP_PKEY_id($) ;
sub EVP_PKEY_new() ;
sub EVP_PKEY_size($) ;
sub EVP_add_digest($) ;
sub EVP_get_cipherbyname($) ;
sub EVP_get_digestbyname($) ;
sub EVP_sha1() ;
sub EVP_sha256() ;
sub EVP_sha512() ;
sub FIPS_mode_set($) ;
sub MD4($) ;
sub MD5($) ;
sub MSG_BCAST() ;
sub MSG_BTAG() ;
sub MSG_CTLFLAGS() ;
sub MSG_CTLIGNORE() ;
sub MSG_EOF() ;
sub MSG_ETAG() ;
sub MSG_MAXIOVLEN() ;
sub MSG_MCAST() ;
sub MSG_URG() ;
sub MSG_WIRE() ;
sub OBJ_cmp($$) ;
sub OBJ_dup($) ;
sub OBJ_ln2nid($) ;
sub OBJ_nid2ln($) ;
sub OBJ_nid2obj($) ;
sub OBJ_nid2sn($) ;
sub OBJ_obj2nid($) ;
sub OBJ_obj2txt($;$) ;
sub OBJ_sn2nid($) ;
sub OBJ_txt2nid($) ;
sub OBJ_txt2obj($;$) ;
sub OCSP_REQUEST_free($) ;
sub OCSP_RESPONSE_free($) ;
sub OCSP_cert2ids($;@) ;
sub OCSP_ids2req(;@) ;
sub OCSP_response_results($;@) ;
sub OCSP_response_status($) ;
sub OCSP_response_status_str($) ;
sub OCSP_response_verify($$;$$) ;
sub OPENSSL_add_all_algorithms_conf() ;
sub OPENSSL_add_all_algorithms_noconf() ;
sub OpenSSL_add_all_algorithms() ;
sub OpenSSL_add_all_digests() ;
sub OpenSSL_add_ssl_algorithms() ;
sub PEM_get_string_PrivateKey($;$$) ;
sub PEM_get_string_X509($) ;
sub PEM_get_string_X509_CRL($) ;
sub PEM_get_string_X509_REQ($) ;
sub PEM_read_bio_DHparams($;$$$) ;
sub PEM_read_bio_PrivateKey($;$$) ;
sub PEM_read_bio_X509($;$$$) ;
sub PEM_read_bio_X509_CRL($;$$$) ;
sub PEM_read_bio_X509_REQ($;$$$) ;
sub PF_802() ;
sub PF_AAL() ;
sub PF_CCITT() ;
sub PF_CHAOS() ;
sub PF_CTF() ;
sub PF_DATAKIT() ;
sub PF_DLI() ;
sub PF_ECMA() ;
sub PF_GOSIP() ;
sub PF_HYLINK() ;
sub PF_IMPLINK() ;
sub PF_ISO() ;
sub PF_LAST() ;
sub PF_LAT() ;
sub PF_LINK() ;
sub PF_NBS() ;
sub PF_NIT() ;
sub PF_NS() ;
sub PF_OSI() ;
sub PF_OSINET() ;
sub PF_PUP() ;
sub PF_USER() ;
sub PF_WAN() ;
sub P_ASN1_INTEGER_get_dec($) ;
sub P_ASN1_INTEGER_get_hex($) ;
sub P_ASN1_INTEGER_set_dec($$) ;
sub P_ASN1_INTEGER_set_hex($$) ;
sub P_ASN1_STRING_get($;$) ;
sub P_ASN1_TIME_get_isotime($) ;
sub P_ASN1_TIME_put2string($) ;
sub P_ASN1_TIME_set_isotime($$) ;
sub P_ASN1_UTCTIME_put2string($) ;
sub P_EVP_MD_list_all() ;
sub P_PKCS12_load_file($;$$) ;
sub P_X509_CRL_add_revoked_serial_hex($$$;$$) ;
sub P_X509_CRL_get_serial($) ;
sub P_X509_CRL_set_serial($$) ;
sub P_X509_REQ_add_extensions($;@) ;
sub P_X509_REQ_get_attr($$) ;
sub P_X509_add_extensions($$;@) ;
sub P_X509_copy_extensions($$;$) ;
sub P_X509_get_crl_distribution_points($) ;
sub P_X509_get_ext_key_usage($;$) ;
sub P_X509_get_key_usage($) ;
sub P_X509_get_netscape_cert_type($) ;
sub P_X509_get_ocsp_uri($) ;
sub P_X509_get_pubkey_alg($) ;
sub P_X509_get_signature_alg($) ;
sub P_alpn_selected($) ;
sub P_next_proto_last_status($) ;
sub P_next_proto_negotiated($) ;
sub RAND_add($$$) ;
sub RAND_bytes($$) ;
sub RAND_cleanup() ;
sub RAND_file_name($) ;
sub RAND_load_file($$) ;
sub RAND_poll() ;
sub RAND_pseudo_bytes($$) ;
sub RAND_seed($) ;
sub RAND_status() ;
sub RAND_write_file($) ;
sub RIPEMD160($) ;
sub RSA_free($) ;
sub RSA_generate_key($$;$$) ;
sub SCM_CONNECT() ;
sub SCM_CREDS() ;
sub SESSION_free($) ;
sub SESSION_get_app_data($) ;
sub SESSION_get_ex_data($$) ;
sub SESSION_get_ex_new_index($$$$$) ;
sub SESSION_get_master_key($) ;
sub SESSION_get_time($) ;
sub SESSION_get_timeout($) ;
sub SESSION_new() ;
sub SESSION_print($$) ;
sub SESSION_print_fp($$) ;
sub SESSION_set_app_data($$) ;
sub SESSION_set_ex_data($$$) ;
sub SESSION_set_master_key($$) ;
sub SESSION_set_time($$) ;
sub SESSION_set_timeout($$) ;
sub SHA1($) ;
sub SHA256($) ;
sub SHA512($) ;
sub SO_BACKLOG() ;
sub SO_CHAMELEON() ;
sub SO_DGRAM_ERRIND() ;
sub SO_DONTLINGER() ;
sub SO_FAMILY() ;
sub SO_PASSIFNAME() ;
sub SO_PROTOTYPE() ;
sub SO_STATE() ;
sub SO_USELOOPBACK() ;
sub SO_XOPEN() ;
sub SO_XSE() ;
sub SSL_get0_session($) ;
sub SSLeay() ;
sub SSLeay_add_ssl_algorithms() ;
sub SSLeay_version(;$) ;
sub TLSv1_1_method() ;
sub TLSv1_2_method() ;
sub TLSv1_method() ;
sub X509V3_EXT_d2i($) ;
sub X509V3_EXT_print($;$$) ;
sub X509_CRL_digest($$) ;
sub X509_CRL_free($) ;
sub X509_CRL_get_ext($$) ;
sub X509_CRL_get_ext_by_NID($$;$) ;
sub X509_CRL_get_ext_count($) ;
sub X509_CRL_get_issuer($) ;
sub X509_CRL_get_lastUpdate($) ;
sub X509_CRL_get_nextUpdate($) ;
sub X509_CRL_get_version($) ;
sub X509_CRL_new() ;
sub X509_CRL_set_issuer_name($$) ;
sub X509_CRL_set_lastUpdate($$) ;
sub X509_CRL_set_nextUpdate($$) ;
sub X509_CRL_set_version($$) ;
sub X509_CRL_sign($$$) ;
sub X509_CRL_sort($) ;
sub X509_CRL_verify($$) ;
sub X509_EXTENSION_get_critical($) ;
sub X509_EXTENSION_get_data($) ;
sub X509_EXTENSION_get_object($) ;
sub X509_NAME_ENTRY_get_data($) ;
sub X509_NAME_ENTRY_get_object($) ;
sub X509_NAME_add_entry_by_NID($$$$;$$) ;
sub X509_NAME_add_entry_by_OBJ($$$$;$$) ;
sub X509_NAME_add_entry_by_txt($$$$;$$) ;
sub X509_NAME_cmp($$) ;
sub X509_NAME_digest($$) ;
sub X509_NAME_entry_count($) ;
sub X509_NAME_get_entry($$) ;
sub X509_NAME_get_text_by_NID($$) ;
sub X509_NAME_hash($) ;
sub X509_NAME_new() ;
sub X509_NAME_oneline($) ;
sub X509_NAME_print_ex($;$$) ;
sub X509_REQ_add1_attr_by_NID($$$$) ;
sub X509_REQ_digest($$) ;
sub X509_REQ_free($) ;
sub X509_REQ_get_attr_by_NID($$;$) ;
sub X509_REQ_get_attr_by_OBJ($$;$) ;
sub X509_REQ_get_attr_count($) ;
sub X509_REQ_get_pubkey($) ;
sub X509_REQ_get_subject_name($) ;
sub X509_REQ_get_version($) ;
sub X509_REQ_new() ;
sub X509_REQ_set_pubkey($$) ;
sub X509_REQ_set_subject_name($$) ;
sub X509_REQ_set_version($$) ;
sub X509_REQ_sign($$$) ;
sub X509_REQ_verify($$) ;
sub X509_STORE_CTX_get_current_cert($) ;
sub X509_STORE_CTX_get_error($) ;
sub X509_STORE_CTX_get_error_depth($) ;
sub X509_STORE_CTX_get_ex_data($$) ;
sub X509_STORE_CTX_set_cert($$) ;
sub X509_STORE_CTX_set_error($$) ;
sub X509_STORE_CTX_set_ex_data($$$) ;
sub X509_STORE_add_cert($$) ;
sub X509_STORE_add_crl($$) ;
sub X509_STORE_set1_param($$) ;
sub X509_STORE_set_flags($$) ;
sub X509_STORE_set_purpose($$) ;
sub X509_STORE_set_trust($$) ;
sub X509_VERIFY_PARAM_add0_policy($$) ;
sub X509_VERIFY_PARAM_add0_table($) ;
sub X509_VERIFY_PARAM_clear_flags($$) ;
sub X509_VERIFY_PARAM_free($) ;
sub X509_VERIFY_PARAM_get_depth($) ;
sub X509_VERIFY_PARAM_get_flags($) ;
sub X509_VERIFY_PARAM_inherit($$) ;
sub X509_VERIFY_PARAM_lookup($) ;
sub X509_VERIFY_PARAM_new() ;
sub X509_VERIFY_PARAM_set1($$) ;
sub X509_VERIFY_PARAM_set1_name($$) ;
sub X509_VERIFY_PARAM_set1_policies($$) ;
sub X509_VERIFY_PARAM_set_depth($$) ;
sub X509_VERIFY_PARAM_set_flags($$) ;
sub X509_VERIFY_PARAM_set_purpose($$) ;
sub X509_VERIFY_PARAM_set_time($$) ;
sub X509_VERIFY_PARAM_set_trust($$) ;
sub X509_VERIFY_PARAM_table_cleanup() ;
sub X509_certificate_type($;$) ;
sub X509_check_email($$;$) ;
sub X509_check_host($$;$$) ;
sub X509_check_ip($$;$) ;
sub X509_check_ip_asc($$;$) ;
sub X509_digest($$) ;
sub X509_free($) ;
sub X509_get_ext($$) ;
sub X509_get_ext_by_NID($$;$) ;
sub X509_get_ext_count($) ;
sub X509_get_fingerprint($$) ;
sub X509_get_issuer_name($) ;
sub X509_get_notAfter($) ;
sub X509_get_notBefore($) ;
sub X509_get_pubkey($) ;
sub X509_get_serialNumber($) ;
sub X509_get_subjectAltNames($) ;
sub X509_get_subject_name($) ;
sub X509_get_version($) ;
sub X509_gmtime_adj($$) ;
sub X509_issuer_and_serial_hash($) ;
sub X509_issuer_name_hash($) ;
sub X509_load_cert_crl_file($$$) ;
sub X509_load_cert_file($$$) ;
sub X509_load_crl_file($$$) ;
sub X509_new() ;
sub X509_policy_level_get0_node($$) ;
sub X509_policy_level_node_count($) ;
sub X509_policy_node_get0_parent($) ;
sub X509_policy_node_get0_policy($) ;
sub X509_policy_node_get0_qualifiers($) ;
sub X509_policy_tree_free($) ;
sub X509_policy_tree_get0_level($$) ;
sub X509_policy_tree_get0_policies($) ;
sub X509_policy_tree_get0_user_policies($) ;
sub X509_policy_tree_level_count($) ;
sub X509_pubkey_digest($$) ;
sub X509_set_issuer_name($$) ;
sub X509_set_pubkey($$) ;
sub X509_set_serialNumber($$) ;
sub X509_set_subject_name($$) ;
sub X509_set_version($$) ;
sub X509_sign($$$) ;
sub X509_subject_name_hash($) ;
sub X509_verify($$) ;
sub X509_verify_cert_error_string($) ;
sub accept($) ;
sub add_client_CA($$) ;
sub add_dir_cert_subjects_to_stack($$) ;
sub add_file_cert_subjects_to_stack($$) ;
sub add_ssl_algorithms() ;
sub alert_desc_string($) ;
sub alert_desc_string_long($) ;
sub alert_type_string($) ;
sub alert_type_string_long($) ;
sub callback_ctrl($$$) ;
sub check_private_key($) ;
sub clear($) ;
sub clear_num_renegotiations($) ;
sub connect($) ;
sub constant($) ;
sub copy_session_id($$) ;
sub ctrl($$$$) ;
sub d2i_OCSP_REQUEST($) ;
sub d2i_OCSP_RESPONSE($) ;
sub d2i_SSL_SESSION($$$) ;
sub d2i_X509_CRL_bio($;$) ;
sub d2i_X509_REQ_bio($;$) ;
sub d2i_X509_bio($;$) ;
sub debug_read;
sub do_handshake($) ;
sub do_https2;
sub do_https3;
sub do_https4;
sub do_https;
sub do_httpx2;
sub do_httpx3;
sub do_httpx4;
sub dump_peer_certificate($) ;
sub dup($) ;
sub export_keying_material($$$$) ;
sub free($) ;
sub get1_session($) ;
sub get_SSL_CTX($) ;
sub get_app_data($) ;
sub get_certificate($) ;
sub get_cipher($) ;
sub get_cipher_bits($;$) ;
sub get_cipher_list($$) ;
sub get_client_CA_list($) ;
sub get_client_random($) ;
sub get_current_cipher($) ;
sub get_default_timeout($) ;
sub get_error($$) ;
sub get_ex_data($$) ;
sub get_ex_new_index($$$$$) ;
sub get_fd($) ;
sub get_finished($$$) ;
sub get_http3;
sub get_http4;
sub get_http;
sub get_https3;
sub get_https4;
sub get_https;
sub get_httpx3;
sub get_httpx4;
sub get_httpx;
sub get_keyblock_size($) ;
sub get_mode($) ;
sub get_options($) ;
sub get_peer_cert_chain($) ;
sub get_peer_certificate($) ;
sub get_peer_finished($$$) ;
sub get_quiet_shutdown($) ;
sub get_rbio($) ;
sub get_read_ahead($) ;
sub get_server_random($) ;
sub get_servername($;$) ;
sub get_servername_type($) ;
sub get_session($) ;
sub get_shared_ciphers($;$$) ;
sub get_shutdown($) ;
sub get_ssl_method($) ;
sub get_state($) ;
sub get_time($) ;
sub get_timeout($) ;
sub get_verify_depth($) ;
sub get_verify_mode($) ;
sub get_verify_result($) ;
sub get_wbio($) ;
sub head_http3;
sub head_http4;
sub head_http;
sub head_https3;
sub head_https4;
sub head_https;
sub head_httpx3;
sub head_httpx4;
sub head_httpx;
sub hello() ;
sub http_cat;
sub https_cat;
sub httpx_cat;
sub i2d_OCSP_REQUEST($) ;
sub i2d_OCSP_RESPONSE($) ;
sub i2d_SSL_SESSION($$) ;
sub inet_aton;
sub inet_ntoa;
sub initialize;
sub library_init() ;
sub load_client_CA_file($) ;
sub load_error_strings() ;
sub make_form;
sub make_headers;
sub need_tmp_RSA($) ;
sub new($) ;
sub new_x_ctx;
sub num_renegotiations($) ;
sub open_proxy_tcp_connection;
sub open_tcp_connection;
sub pack_sockaddr_in6;
sub pack_sockaddr_in;
sub pack_sockaddr_un;
sub peek($;$) ;
sub pending($) ;
sub post_http3;
sub post_http4;
sub post_http;
sub post_https3;
sub post_https4;
sub post_https;
sub post_httpx3;
sub post_httpx4;
sub post_httpx;
sub put_http3;
sub put_http4;
sub put_http;
sub put_https3;
sub put_https4;
sub put_https;
sub put_httpx3;
sub put_httpx4;
sub put_httpx;
sub randomize(;$$$) ;
sub read($;$) ;
sub renegotiate($) ;
sub rstate_string($) ;
sub rstate_string_long($) ;
sub session_reused($) ;
sub set1_param($$) ;
sub set_SSL_CTX($$) ;
sub set_accept_state($) ;
sub set_alpn_protos($;$) ;
sub set_app_data($$) ;
sub set_bio($$$) ;
sub set_cert_and_key($$$) ;
sub set_cipher_list($$) ;
sub set_client_CA_list($$) ;
sub set_connect_state($) ;
sub set_ex_data($$$) ;
sub set_fd($$) ;
sub set_info_callback($$;$) ;
sub set_mode($$) ;
sub set_options($$) ;
sub set_pref_cipher($$) ;
sub set_proxy($$;**) ;
sub set_purpose($$) ;
sub set_quiet_shutdown($$) ;
sub set_read_ahead($;$) ;
sub set_rfd($$) ;
sub set_server_cert_and_key($$$) ;
sub set_session($$) ;
sub set_session_id_context($$$) ;
sub set_session_secret_cb($;$$) ;
sub set_shutdown($$) ;
sub set_ssl_method($$) ;
sub set_state($$) ;
sub set_time($$) ;
sub set_timeout($$) ;
sub set_tlsext_host_name($$) ;
sub set_tlsext_status_type($$) ;
sub set_tmp_dh($$) ;
sub set_tmp_dh_callback($$) ;
sub set_tmp_rsa($$) ;
sub set_tmp_rsa_callback($$) ;
sub set_trust($$) ;
sub set_verify($$$) ;
sub set_verify_depth($$) ;
sub set_verify_result($$) ;
sub set_wfd($$) ;
sub shutdown($) ;
sub sk_X509_NAME_free($) ;
sub sk_X509_NAME_num($) ;
sub sk_X509_NAME_value($$) ;
sub sockaddr_family;
sub ssl_read_CRLF($;$) ;
sub ssl_read_all;
sub ssl_read_until($;$$) ;
sub ssl_write_CRLF($$) ;
sub ssl_write_all;
sub sslcat;
sub state($) ;
sub state_string($) ;
sub state_string_long($) ;
sub tcp_read_CRLF;
sub tcp_read_all;
sub tcp_read_until;
sub tcp_write_CRLF;
sub tcp_write_all;
sub tcpcat;
sub tcpxcat;
sub total_renegotiations($) ;
sub unpack_sockaddr_in6;
sub unpack_sockaddr_in;
sub unpack_sockaddr_un;
sub use_PrivateKey($$) ;
sub use_PrivateKey_ASN1($$$$) ;
sub use_PrivateKey_file($$$) ;
sub use_RSAPrivateKey($$) ;
sub use_RSAPrivateKey_ASN1($$$) ;
sub use_RSAPrivateKey_file($$$) ;
sub use_certificate($$) ;
sub use_certificate_ASN1($$$) ;
sub use_certificate_file($$$) ;
sub version($) ;
sub want($) ;
sub want_X509_lookup;
sub want_nothing;
sub want_read;
sub want_write;
sub write($$) ;
sub write_partial($$$$) ;
}
package Opcode {
sub _safe_call_sv($$$) ;
sub _safe_pkg_prep($) ;
sub define_optag($$) ;
sub deny($;@) ;
sub deny_only($;@) ;
sub empty_opset() ;
sub full_opset() ;
sub invert_opset($) ;
sub opcodes() ;
sub opdesc(;@) ;
sub opmask() ;
sub opmask_add($) ;
sub opset(;@) ;
sub opset_to_ops($;$) ;
sub permit($;@) ;
sub permit_only($;@) ;
sub verify_opset($;$) ;
}
package POSIX {
sub ARG_MAX() ;
sub CHILD_MAX() ;
sub CLK_TCK() ;
sub EOTHER() ;
sub EPROCLIM() ;
sub LDBL_EPSILON() ;
sub LDBL_MAX() ;
sub LDBL_MIN() ;
sub LINK_MAX() ;
sub L_tmpname() ;
sub NDEBUG;
sub OPEN_MAX() ;
sub STREAM_MAX() ;
sub S_ISBLK;
sub S_ISCHR;
sub S_ISDIR;
sub S_ISFIFO;
sub S_ISREG;
sub TZNAME_MAX() ;
sub WEXITSTATUS;
sub WIFEXITED;
sub WIFSIGNALED;
sub WIFSTOPPED;
sub WSTOPSIG;
sub WTERMSIG;
sub _exit;
sub abort;
sub abs;
sub access;
sub acos;
sub acosh;
sub alarm;
sub asctime;
sub asin;
sub asinh;
sub assert;
sub atan2;
sub atan;
sub atanh;
sub atexit;
sub atof;
sub atoi;
sub atol;
sub bsearch;
sub calloc;
sub cbrt;
sub ceil;
sub cfgetispeed;
sub cfgetospeed;
sub cfsetispeed;
sub cfsetospeed;
sub chdir;
sub chmod;
sub chown;
sub clearerr;
sub clock;
sub close;
sub closedir;
sub constant;
sub copysign;
sub cos;
sub cosh;
sub creat;
sub ctermid;
sub ctime;
sub cuserid;
sub difftime;
sub div;
sub dup2;
sub dup;
sub erf;
sub erfc;
sub errno;
sub execl;
sub execle;
sub execlp;
sub execv;
sub execve;
sub execvp;
sub exit;
sub exp2;
sub exp;
sub expm1;
sub fabs;
sub fclose;
sub fcntl;
sub fdim;
sub fdopen;
sub fegetround;
sub feof;
sub ferror;
sub fesetround;
sub fflush;
sub fgetc;
sub fgetpos;
sub fgets;
sub fileno;
sub floor;
sub fma;
sub fmax;
sub fmin;
sub fmod;
sub fopen;
sub fork;
sub fpathconf;
sub fpclassify;
sub fprintf;
sub fputc;
sub fputs;
sub fread;
sub free;
sub freopen;
sub frexp;
sub fscanf;
sub fseek;
sub fsetpos;
sub fstat;
sub fsync;
sub ftell;
sub fwrite;
sub getc;
sub getchar;
sub getcwd;
sub getegid;
sub getenv;
sub geteuid;
sub getgid;
sub getgrgid;
sub getgrnam;
sub getgroups;
sub getlogin;
sub getpgrp;
sub getpid;
sub getppid;
sub getpwnam;
sub getpwuid;
sub gets;
sub getuid;
sub gmtime;
sub hypot;
sub ilogb;
sub isalnum;
sub isalpha;
sub isatty;
sub iscntrl;
sub isdigit;
sub isfinite;
sub isgraph;
sub isgreater;
sub isgreaterequal;
sub isinf;
sub isless;
sub islessequal;
sub islessgreater;
sub islower;
sub isnan;
sub isnormal;
sub isprint;
sub ispunct;
sub isspace;
sub isunordered;
sub isupper;
sub isxdigit;
sub j0;
sub j1;
sub jn;
sub kill;
sub labs;
sub lchown;
sub ldexp;
sub ldiv;
sub lgamma;
sub link;
sub localeconv;
sub localtime;
sub log10;
sub log1p;
sub log2;
sub log;
sub logb;
sub longjmp;
sub lrint;
sub lround;
sub lseek;
sub malloc;
sub mblen;
sub mbstowcs;
sub mbtowc;
sub memchr;
sub memcmp;
sub memcpy;
sub memmove;
sub memset;
sub mkdir;
sub mkfifo;
sub mktime;
sub modf;
sub nan;
sub nearbyint;
sub nextafter;
sub nexttoward;
sub nice;
sub offsetof;
sub open;
sub opendir;
sub pathconf;
sub pause;
sub pipe;
sub pow;
sub putc;
sub putchar;
sub puts;
sub qsort;
sub raise;
sub rand;
sub read;
sub readdir;
sub realloc;
sub remainder;
sub remove;
sub remquo;
sub rename;
sub rewind;
sub rewinddir;
sub rint;
sub rmdir;
sub round;
sub scalbn;
sub scanf;
sub setbuf;
sub setgid;
sub setjmp;
sub setlocale;
sub setpgid;
sub setsid;
sub setuid;
sub setvbuf;
sub sigaction;
sub siglongjmp;
sub signal;
sub signbit;
sub sigpending;
sub sigprocmask;
sub sigsetjmp;
sub sigsuspend;
sub sin;
sub sinh;
sub sleep;
sub sqrt;
sub srand;
sub sscanf;
sub stat;
sub stderr;
sub stdin;
sub stdout;
sub strcat;
sub strchr;
sub strcmp;
sub strcoll;
sub strcpy;
sub strcspn;
sub strerror;
sub strftime;
sub strlen;
sub strncat;
sub strncmp;
sub strncpy;
sub strpbrk;
sub strrchr;
sub strspn;
sub strstr;
sub strtod;
sub strtok;
sub strtol;
sub strtold;
sub strtoul;
sub strxfrm;
sub sysconf;
sub system;
sub tan;
sub tanh;
sub tcdrain;
sub tcflow;
sub tcflush;
sub tcgetattr;
sub tcgetpgrp;
sub tcsendbreak;
sub tcsetattr;
sub tcsetpgrp;
sub tgamma;
sub time;
sub times;
sub tmpfile;
sub tmpnam;
sub tolower;
sub toupper;
sub trunc;
sub ttyname;
sub tzname;
sub tzset;
sub umask;
sub uname;
sub ungetc;
sub unlink;
sub utime;
sub vfprintf;
sub vprintf;
sub vsprintf;
sub wait;
sub waitpid;
sub wcstombs;
sub wctomb;
sub write;
sub y0;
sub y1;
sub yn;
}
package POSIX::SigSet {
sub addset;
sub delset;
sub emptyset;
sub fillset;
sub ismember;
sub new;
}
package POSIX::Termios {
sub getattr;
sub getcc;
sub getcflag;
sub getiflag;
sub getispeed;
sub getlflag;
sub getoflag;
sub getospeed;
sub new;
sub setattr;
sub setcc;
sub setcflag;
sub setiflag;
sub setispeed;
sub setlflag;
sub setoflag;
sub setospeed;
}
package Package::DeprecationManager {
sub _HASH0($) ;
sub any(&@) ;
sub subname;
}
package Package::Stash {
sub add_symbol;
sub get_all_symbols;
sub get_or_add_symbol;
sub get_symbol;
sub has_symbol;
sub list_all_symbols;
sub name;
sub namespace;
sub new;
sub remove_glob;
sub remove_symbol;
}
package Package::Stash::XS {
sub add_symbol;
sub get_all_symbols;
sub get_or_add_symbol;
sub get_symbol;
sub has_symbol;
sub list_all_symbols;
sub name;
sub namespace;
sub new;
sub remove_glob;
sub remove_symbol;
}
package PadWalker {
sub _upcontext;
sub closed_over;
sub peek_my;
sub peek_our;
sub peek_sub;
sub set_closed_over;
sub var_name;
}
package Pango {
sub CHECK_VERSION;
sub GET_VERSION_INFO;
sub PANGO_PIXELS;
sub extents_to_pixels;
sub find_base_dir;
sub parse_markup;
sub pixels;
sub scale;
sub scale_large;
sub scale_medium;
sub scale_small;
sub scale_x_large;
sub scale_x_small;
sub scale_xx_large;
sub scale_xx_small;
sub units_from_double;
sub units_to_double;
}
package Pango::AttrBackground {
sub new;
}
package Pango::AttrColor {
sub value;
}
package Pango::AttrFallback {
sub new;
sub value;
}
package Pango::AttrFamily {
sub new;
}
package Pango::AttrFontDesc {
sub desc;
sub new;
}
package Pango::AttrForeground {
sub new;
}
package Pango::AttrGravity {
sub new;
sub value;
}
package Pango::AttrGravityHint {
sub new;
sub value;
}
package Pango::AttrInt {
sub value;
}
package Pango::AttrIterator {
sub get;
sub get_attrs;
sub get_font;
sub next;
sub range;
}
package Pango::AttrLanguage {
sub new;
sub value;
}
package Pango::AttrLetterSpacing {
sub new;
}
package Pango::AttrList {
sub change;
sub filter;
sub get_iterator;
sub insert;
sub insert_before;
sub new;
sub splice;
}
package Pango::AttrRise {
sub new;
}
package Pango::AttrScale {
sub new;
sub value;
}
package Pango::AttrShape {
sub ink_rect;
sub logical_rect;
sub new;
}
package Pango::AttrSize {
sub new;
sub new_absolute;
}
package Pango::AttrStretch {
sub new;
sub value;
}
package Pango::AttrStrikethrough {
sub new;
sub value;
}
package Pango::AttrStrikethroughColor {
sub new;
}
package Pango::AttrString {
sub value;
}
package Pango::AttrStyle {
sub new;
sub value;
}
package Pango::AttrUnderline {
sub new;
sub value;
}
package Pango::AttrUnderlineColor {
sub new;
}
package Pango::AttrVariant {
sub new;
sub value;
}
package Pango::AttrWeight {
sub new;
sub value;
}
package Pango::Attribute {
sub end_index;
sub equal;
sub start_index;
}
package Pango::Cairo {
sub create_layout;
sub error_underline_path;
sub glyph_string_path;
sub layout_line_path;
sub layout_path;
sub show_error_underline;
sub show_glyph_string;
sub show_layout;
sub show_layout_line;
sub update_context;
sub update_layout;
}
package Pango::Cairo::Context {
sub get_font_options;
sub get_resolution;
sub set_font_options;
sub set_resolution;
sub set_shape_renderer;
}
package Pango::Cairo::Font {
sub get_scaled_font;
}
package Pango::Cairo::FontMap {
sub create_context;
sub get_default;
sub get_font_type;
sub get_resolution;
sub new;
sub new_for_font_type;
sub set_resolution;
}
package Pango::Color {
sub parse;
sub to_string;
}
package Pango::Context {
sub get_base_dir;
sub get_base_gravity;
sub get_font_description;
sub get_font_map;
sub get_gravity;
sub get_gravity_hint;
sub get_language;
sub get_matrix;
sub get_metrics;
sub list_families;
sub load_font;
sub load_fontset;
sub set_base_dir;
sub set_base_gravity;
sub set_font_description;
sub set_gravity_hint;
sub set_language;
sub set_matrix;
}
package Pango::Font {
sub describe;
sub describe_with_absolute_size;
sub get_font_map;
sub get_glyph_extents;
sub get_metrics;
}
package Pango::FontDescription {
sub better_match;
sub equal;
sub from_string;
sub get_family;
sub get_gravity;
sub get_set_fields;
sub get_size;
sub get_size_is_absolute;
sub get_stretch;
sub get_style;
sub get_variant;
sub get_weight;
sub hash;
sub merge;
sub merge_static;
sub new;
sub set_absolute_size;
sub set_family;
sub set_family_static;
sub set_gravity;
sub set_size;
sub set_stretch;
sub set_style;
sub set_variant;
sub set_weight;
sub to_filename;
sub to_string;
sub unset_fields;
}
package Pango::FontFace {
sub describe;
sub get_face_name;
sub is_synthesized;
sub list_sizes;
}
package Pango::FontFamily {
sub get_name;
sub is_monospace;
sub list_faces;
}
package Pango::FontMap {
sub list_families;
sub load_font;
sub load_fontset;
}
package Pango::FontMetrics {
sub get_approximate_char_width;
sub get_approximate_digit_width;
sub get_ascent;
sub get_descent;
sub get_strikethrough_position;
sub get_strikethrough_thickness;
sub get_underline_position;
sub get_underline_thickness;
}
package Pango::Fontset {
sub foreach;
sub get_font;
sub get_metrics;
}
package Pango::Gravity {
sub get_for_matrix;
sub get_for_script;
sub is_vertical;
sub to_rotation;
}
package Pango::Language {
sub from_string;
sub get_default;
sub includes_script;
sub matches;
sub to_string;
}
package Pango::Layout {
sub context_changed;
sub copy;
sub get_alignment;
sub get_attributes;
sub get_auto_dir;
sub get_baseline;
sub get_context;
sub get_cursor_pos;
sub get_ellipsize;
sub get_extents;
sub get_font_description;
sub get_height;
sub get_indent;
sub get_iter;
sub get_justify;
sub get_line;
sub get_line_count;
sub get_line_readonly;
sub get_lines;
sub get_lines_readonly;
sub get_log_attrs;
sub get_pixel_extents;
sub get_pixel_size;
sub get_single_paragraph_mode;
sub get_size;
sub get_spacing;
sub get_tabs;
sub get_text;
sub get_unknown_glyphs_count;
sub get_width;
sub get_wrap;
sub index_to_pos;
sub is_ellipsized;
sub is_wrapped;
sub move_cursor_visually;
sub new;
sub set_alignment;
sub set_attributes;
sub set_auto_dir;
sub set_ellipsize;
sub set_font_description;
sub set_height;
sub set_indent;
sub set_justify;
sub set_markup;
sub set_markup_with_accel;
sub set_single_paragraph_mode;
sub set_spacing;
sub set_tabs;
sub set_text;
sub set_width;
sub set_wrap;
sub xy_to_index;
}
package Pango::LayoutIter {
sub at_last_line;
sub get_baseline;
sub get_char_extents;
sub get_cluster_extents;
sub get_index;
sub get_layout;
sub get_layout_extents;
sub get_line;
sub get_line_extents;
sub get_line_readonly;
sub get_line_yrange;
sub get_run_extents;
sub next_char;
sub next_cluster;
sub next_line;
sub next_run;
}
package Pango::LayoutLine {
sub get_extents;
sub get_pixel_extents;
sub get_x_ranges;
sub index_to_x;
sub x_to_index;
}
package Pango::Matrix {
sub concat;
sub new;
sub rotate;
sub scale;
sub transform_distance;
sub transform_pixel_rectangle;
sub transform_point;
sub transform_rectangle;
sub translate;
sub x0;
sub xx;
sub xy;
sub y0;
sub yx;
sub yy;
}
package Pango::Renderer {
sub activate;
sub deactivate;
sub draw_error_underline;
sub draw_glyph;
sub draw_layout;
sub draw_layout_line;
sub draw_rectangle;
sub draw_trapezoid;
sub get_color;
sub get_layout;
sub get_layout_line;
sub get_matrix;
sub part_changed;
sub set_color;
sub set_matrix;
}
package Pango::Script {
sub for_unichar;
sub get_sample_language;
}
package Pango::ScriptIter {
sub get_range;
sub new;
sub next;
}
package Pango::TabArray {
sub get_positions_in_pixels;
sub get_size;
sub get_tab;
sub get_tabs;
sub new;
sub new_with_positions;
sub resize;
sub set_tab;
}
package Params::Classify {
sub blessed_class($) ;
sub check_able($;$) ;
sub check_blessed($;$) ;
sub check_glob($) ;
sub check_ref($;$) ;
sub check_regexp($) ;
sub check_strictly_blessed($;$) ;
sub check_string($) ;
sub check_undef($) ;
sub is_able($;$) ;
sub is_blessed($;$) ;
sub is_glob($) ;
sub is_ref($;$) ;
sub is_regexp($) ;
sub is_strictly_blessed($;$) ;
sub is_string($) ;
sub is_undef($) ;
sub ref_type($) ;
sub scalar_class($) ;
}
package Params::Util {
sub _ARRAY($) ;
sub _ARRAY0($) ;
sub _ARRAYLIKE($) ;
sub _CODE($) ;
sub _CODELIKE($) ;
sub _HASH($) ;
sub _HASH0($) ;
sub _HASHLIKE($) ;
sub _INSTANCE($$) ;
sub _NUMBER($) ;
sub _REGEX($) ;
sub _SCALAR($) ;
sub _SCALAR0($) ;
sub _STRING($) ;
sub looks_like_number($) ;
}
package Params::Validate::XS {
sub validate(\@$) ;
sub validate_pos(\@@) ;
sub validate_with;
}
package Params::ValidationCompiler::Compiler {
sub blessed($) ;
sub looks_like_number($) ;
sub pairkeys(@) ;
sub pairvalues(@) ;
sub perlstring;
sub reftype($) ;
sub set_subname;
}
package PerlIO {
sub get_layers(*;@) ;
}
package PerlIO::Layer {
sub NoWarnings;
sub find;
}
package Ref::Util {
sub _using_custom_ops;
sub is_arrayref($) ;
sub is_blessed_arrayref($) ;
sub is_blessed_coderef($) ;
sub is_blessed_formatref($) ;
sub is_blessed_globref($) ;
sub is_blessed_hashref($) ;
sub is_blessed_ref($) ;
sub is_blessed_refref($) ;
sub is_blessed_scalarref($) ;
sub is_coderef($) ;
sub is_formatref($) ;
sub is_globref($) ;
sub is_hashref($) ;
sub is_ioref($) ;
sub is_plain_arrayref($) ;
sub is_plain_coderef($) ;
sub is_plain_formatref($) ;
sub is_plain_globref($) ;
sub is_plain_hashref($) ;
sub is_plain_ref($) ;
sub is_plain_refref($) ;
sub is_plain_scalarref($) ;
sub is_ref($) ;
sub is_refref($) ;
sub is_regexpref($) ;
sub is_scalarref($) ;
}
package Regexp {
sub DESTROY() ;
}
package SDBM_File {
sub DELETE;
sub DESTROY;
sub EXISTS;
sub FETCH;
sub FIRSTKEY;
sub NEXTKEY;
sub STORE;
sub TIEHASH;
sub error;
sub filter_fetch_key;
sub filter_fetch_value;
sub filter_store_key;
sub filter_store_value;
sub sdbm_clearerr;
}
package Scalar::Util {
sub blessed($) ;
sub dualvar($$) ;
sub isdual($) ;
sub isvstring($) ;
sub isweak($) ;
sub looks_like_number($) ;
sub openhandle($) ;
sub readonly($) ;
sub refaddr($) ;
sub reftype($) ;
sub tainted($) ;
sub unweaken($) ;
sub weaken($) ;
}
package Set::Object {
sub CLONE;
sub DESTROY;
sub _STORABLE_thaw;
sub _ish_int($) ;
sub _strengthen;
sub _weaken;
sub blessed($) ;
sub clear;
sub get_flat($) ;
sub get_magic($) ;
sub includes;
sub insert;
sub is_double($) ;
sub is_int($) ;
sub is_null;
sub is_object($) ;
sub is_overloaded($) ;
sub is_string($) ;
sub is_weak;
sub members;
sub new;
sub rc;
sub refaddr($) ;
sub reftype($) ;
sub remove;
sub rvrc;
sub size;
}
package Set::Object::Weak {
sub blessed($) ;
}
package Socket {
sub AF_802() ;
sub AF_AAL() ;
sub AF_CCITT() ;
sub AF_CHAOS() ;
sub AF_CTF() ;
sub AF_DATAKIT() ;
sub AF_DLI() ;
sub AF_ECMA() ;
sub AF_GOSIP() ;
sub AF_HYLINK() ;
sub AF_IMPLINK() ;
sub AF_ISO() ;
sub AF_LAST() ;
sub AF_LAT() ;
sub AF_LINK() ;
sub AF_NBS() ;
sub AF_NIT() ;
sub AF_NS() ;
sub AF_OSI() ;
sub AF_OSINET() ;
sub AF_PUP() ;
sub AF_USER() ;
sub AF_WAN() ;
sub AUTOLOAD;
sub EAI_BADHINTS() ;
sub EAI_PROTOCOL() ;
sub IPTOS_LOWDELAY() ;
sub IPTOS_MINCOST() ;
sub IPTOS_RELIABILITY() ;
sub IPTOS_THROUGHPUT() ;
sub MSG_BCAST() ;
sub MSG_BTAG() ;
sub MSG_CTLFLAGS() ;
sub MSG_CTLIGNORE() ;
sub MSG_EOF() ;
sub MSG_ETAG() ;
sub MSG_MAXIOVLEN() ;
sub MSG_MCAST() ;
sub MSG_URG() ;
sub MSG_WIRE() ;
sub PF_802() ;
sub PF_AAL() ;
sub PF_CCITT() ;
sub PF_CHAOS() ;
sub PF_CTF() ;
sub PF_DATAKIT() ;
sub PF_DLI() ;
sub PF_ECMA() ;
sub PF_GOSIP() ;
sub PF_HYLINK() ;
sub PF_IMPLINK() ;
sub PF_ISO() ;
sub PF_LAST() ;
sub PF_LAT() ;
sub PF_LINK() ;
sub PF_NBS() ;
sub PF_NIT() ;
sub PF_NS() ;
sub PF_OSI() ;
sub PF_OSINET() ;
sub PF_PUP() ;
sub PF_USER() ;
sub PF_WAN() ;
sub SCM_CONNECT() ;
sub SCM_CREDS() ;
sub SO_BACKLOG() ;
sub SO_CHAMELEON() ;
sub SO_DGRAM_ERRIND() ;
sub SO_DONTLINGER() ;
sub SO_FAMILY() ;
sub SO_PASSIFNAME() ;
sub SO_PROTOTYPE() ;
sub SO_STATE() ;
sub SO_USELOOPBACK() ;
sub SO_XOPEN() ;
sub SO_XSE() ;
sub TCP_CONNECTIONTIMEOUT() ;
sub TCP_INIT_CWND() ;
sub TCP_KEEPALIVE() ;
sub TCP_MAXRT() ;
sub TCP_NOOPT() ;
sub TCP_NOPUSH() ;
sub TCP_SACK_ENABLE() ;
sub TCP_STDURG() ;
sub getaddrinfo;
sub getnameinfo;
sub inet_aton;
sub inet_ntoa;
sub inet_ntop;
sub inet_pton;
sub pack_ip_mreq;
sub pack_ip_mreq_source;
sub pack_ipv6_mreq;
sub pack_sockaddr_in6;
sub pack_sockaddr_in;
sub pack_sockaddr_un;
sub sockaddr_family;
sub unpack_ip_mreq;
sub unpack_ip_mreq_source;
sub unpack_ipv6_mreq;
sub unpack_sockaddr_in6;
sub unpack_sockaddr_in;
sub unpack_sockaddr_un;
}
package Socket6 {
sub AI_PASSIVE;
sub constant;
sub gai_strerror;
sub getaddrinfo;
sub gethostbyname2;
sub getipnodebyaddr;
sub getipnodebyname;
sub getnameinfo;
sub in6addr_any;
sub in6addr_loopback;
sub inet_ntop;
sub inet_pton;
sub pack_sockaddr_in6;
sub pack_sockaddr_in6_all;
sub unpack_sockaddr_in6;
sub unpack_sockaddr_in6_all;
}
package Specio::Constraint::Enum {
sub dclone($) ;
sub refaddr($) ;
}
package Specio::Constraint::Parameterized {
sub dclone($) ;
}
package Specio::Constraint::Role::CanType {
sub blessed($) ;
sub dclone($) ;
}
package Specio::Constraint::Role::Interface {
sub all(&@) ;
sub any(&@) ;
sub first(&@) ;
}
package Specio::Constraint::Role::IsaType {
sub dclone($) ;
}
package Specio::Constraint::Union {
sub all(&@) ;
sub any(&@) ;
sub dclone($) ;
}
package Specio::Exception {
sub blessed($) ;
}
package Specio::Helpers {
sub blessed($) ;
}
package Specio::OO {
sub all(&@) ;
sub blessed($) ;
sub dclone($) ;
sub perlstring;
sub weaken($) ;
}
package Specio::PartialDump {
sub blessed($) ;
sub looks_like_number($) ;
sub reftype($) ;
}
package Specio::TypeChecks {
sub blessed($) ;
}
package Storable {
sub dclone($) ;
sub init_perinterp() ;
sub is_retrieving() ;
sub is_storing() ;
sub last_op_in_netorder() ;
sub mretrieve($) ;
sub mstore($) ;
sub net_mstore($) ;
sub net_pstore($$) ;
sub pretrieve($) ;
sub pstore($$) ;
}
package Sub::Identify {
sub get_code_info($) ;
sub get_code_location($) ;
sub is_sub_constant($) ;
}
package Sub::Name {
sub subname;
}
package Sub::Util {
sub set_prototype;
sub set_subname;
sub subname;
}
package Sys::Hostname {
sub ghname;
}
package Sys::Syslog {
sub AF_802() ;
sub AF_AAL() ;
sub AF_CCITT() ;
sub AF_CHAOS() ;
sub AF_CTF() ;
sub AF_DATAKIT() ;
sub AF_DLI() ;
sub AF_ECMA() ;
sub AF_GOSIP() ;
sub AF_HYLINK() ;
sub AF_IMPLINK() ;
sub AF_ISO() ;
sub AF_LAST() ;
sub AF_LAT() ;
sub AF_LINK() ;
sub AF_NBS() ;
sub AF_NIT() ;
sub AF_NS() ;
sub AF_OSI() ;
sub AF_OSINET() ;
sub AF_PUP() ;
sub AF_USER() ;
sub AF_WAN() ;
sub EAI_BADHINTS() ;
sub EAI_PROTOCOL() ;
sub IPTOS_LOWDELAY() ;
sub IPTOS_MINCOST() ;
sub IPTOS_RELIABILITY() ;
sub IPTOS_THROUGHPUT() ;
sub LOG_FAC;
sub LOG_MAKEPRI;
sub LOG_MASK;
sub LOG_PRI;
sub LOG_UPTO;
sub MSG_BCAST() ;
sub MSG_BTAG() ;
sub MSG_CTLFLAGS() ;
sub MSG_CTLIGNORE() ;
sub MSG_EOF() ;
sub MSG_ETAG() ;
sub MSG_MAXIOVLEN() ;
sub MSG_MCAST() ;
sub MSG_URG() ;
sub MSG_WIRE() ;
sub PF_802() ;
sub PF_AAL() ;
sub PF_CCITT() ;
sub PF_CHAOS() ;
sub PF_CTF() ;
sub PF_DATAKIT() ;
sub PF_DLI() ;
sub PF_ECMA() ;
sub PF_GOSIP() ;
sub PF_HYLINK() ;
sub PF_IMPLINK() ;
sub PF_ISO() ;
sub PF_LAST() ;
sub PF_LAT() ;
sub PF_LINK() ;
sub PF_NBS() ;
sub PF_NIT() ;
sub PF_NS() ;
sub PF_OSI() ;
sub PF_OSINET() ;
sub PF_PUP() ;
sub PF_USER() ;
sub PF_WAN() ;
sub SCM_CONNECT() ;
sub SCM_CREDS() ;
sub SO_BACKLOG() ;
sub SO_CHAMELEON() ;
sub SO_DGRAM_ERRIND() ;
sub SO_DONTLINGER() ;
sub SO_FAMILY() ;
sub SO_PASSIFNAME() ;
sub SO_PROTOTYPE() ;
sub SO_STATE() ;
sub SO_USELOOPBACK() ;
sub SO_XOPEN() ;
sub SO_XSE() ;
sub TCP_CONNECTIONTIMEOUT() ;
sub TCP_INIT_CWND() ;
sub TCP_KEEPALIVE() ;
sub TCP_MAXRT() ;
sub TCP_NOOPT() ;
sub TCP_NOPUSH() ;
sub TCP_SACK_ENABLE() ;
sub TCP_STDURG() ;
sub closelog_xs;
sub constant;
sub getaddrinfo;
sub getnameinfo;
sub inet_aton;
sub inet_ntoa;
sub inet_ntop;
sub inet_pton;
sub openlog_xs;
sub pack_ip_mreq;
sub pack_ip_mreq_source;
sub pack_ipv6_mreq;
sub pack_sockaddr_in6;
sub pack_sockaddr_in;
sub pack_sockaddr_un;
sub setlocale;
sub setlogmask_xs;
sub sockaddr_family;
sub strftime;
sub syslog_xs;
sub unpack_ip_mreq;
sub unpack_ip_mreq_source;
sub unpack_ipv6_mreq;
sub unpack_sockaddr_in6;
sub unpack_sockaddr_in;
sub unpack_sockaddr_un;
}
package Template {
sub blessed($) ;
}
package Template::Document {
sub is_utf8;
}
package Template::Filters {
sub blessed($) ;
}
package Template::Service {
sub blessed($) ;
}
package Template::Stash {
sub blessed($) ;
sub reftype($) ;
}
package Template::Stash::XS {
sub get;
sub set;
}
package Template::VMethods {
sub blessed($) ;
sub looks_like_number($) ;
}
package Term::ReadKey {
sub GetControlChars;
sub GetSpeed;
sub GetTermSizeGSIZE;
sub GetTermSizeGWINSZ;
sub GetTermSizeVIO;
sub GetTermSizeWin32;
sub SetControlChars;
sub SetReadMode;
sub SetTerminalSize;
sub Win32PeekChar;
sub blockoptions;
sub pollfile;
sub selectfile;
sub setnodelay;
sub termoptions;
sub termsizeoptions;
}
package Test2::API {
sub blessed($) ;
sub weaken($) ;
}
package Test2::API::Context {
sub blessed($) ;
sub weaken($) ;
}
package Test2::API::Instance {
sub reftype($) ;
}
package Test2::Event::Info {
sub blessed($) ;
}
package Test2::Hub {
sub weaken($) ;
}
package Test2::Util::HashBase {
sub _isa($;$) ;
}
package Test::Builder {
sub blessed($) ;
sub reftype($) ;
sub weaken($) ;
}
package Test::LeakTrace {
sub CLONE;
sub _finish;
sub _runops_installed;
sub _start;
sub count_sv;
}
package Text::CharWidth {
sub mblen;
sub mbswidth;
sub mbwidth;
}
package Text::Iconv {
sub new($$$) ;
sub raise_error(;@) ;
}
package Text::IconvPtr {
sub DESTROY($) ;
sub convert($$) ;
sub get_attr($$) ;
sub raise_error($;@) ;
sub retval($) ;
sub set_attr($$$) ;
}
package Time::HiRes {
sub alarm($;$) ;
sub clock() ;
sub clock_getres(;$) ;
sub clock_gettime(;$) ;
sub clock_nanosleep($$;$) ;
sub constant($) ;
sub getitimer($) ;
sub gettimeofday() ;
sub lstat(;$) ;
sub nanosleep($) ;
sub setitimer($$;$) ;
sub sleep(;@) ;
sub stat(;$) ;
sub time() ;
sub ualarm($;$) ;
sub usleep($) ;
}
package Time::Piece {
sub _crt_gmtime($) ;
sub _crt_localtime($) ;
sub _mini_mktime($$$$$$) ;
sub _strftime($$$$$$$;$$$) ;
sub _strptime($$) ;
sub _tzset() ;
}
package Try::Tiny {
sub _subname;
}
package UNIVERSAL {
sub DOES;
sub VERSION;
sub can;
sub isa;
}
package UUID {
sub clear($) ;
sub compare;
sub copy;
sub debug() ;
sub generate($) ;
sub generate_random($) ;
sub generate_time($) ;
sub is_null($) ;
sub parse($$) ;
sub unparse($$) ;
sub unparse_lower($$) ;
sub unparse_upper($$) ;
sub uuid() ;
}
package Unicode::GCString {
sub DESTROY($) ;
sub _new($$;$) ;
sub as_array($) ;
sub as_scalarref;
sub as_string($;$;$) ;
sub chars($) ;
sub cmp($$;$) ;
sub columns;
sub concat($$;$) ;
sub copy($) ;
sub eos;
sub flag($;$;$) ;
sub item($;$) ;
sub join;
sub lbc($) ;
sub lbcext($) ;
sub lbclass($;$) ;
sub lbclass_ext($;$) ;
sub length($) ;
sub next($;$;$) ;
sub pos($;$) ;
sub substr($$;$;$) ;
}
package Unicode::LineBreak {
sub DESTROY($) ;
sub EAWidths;
sub LBClasses;
sub SOMBOK_VERSION;
sub UNICODE_VERSION;
sub _config;
sub _new($) ;
sub as_hashref;
sub as_scalarref;
sub as_string;
sub break($$) ;
sub break_partial($$) ;
sub breakingRule($$$) ;
sub copy($) ;
sub is_utf8($;$) ;
sub lbrule($$$) ;
sub reset($) ;
sub strsize($$$$$;$) ;
}
package Unicode::LineBreak::SouthEastAsian {
sub supported() ;
}
package Unicode::UTF8 {
sub decode_utf8;
sub encode_utf8;
sub valid_utf8;
}
package Variable::Magic {
sub CLONE;
sub _wizard;
sub cast(\[$@%&*]$@) ;
sub dispell(\[$@%&*]$) ;
sub getdata(\[$@%&*]$) ;
}
package XML::Parser::Expat {
sub DefaultCurrent;
sub Do_External_Parse;
sub ElementIndex;
sub ErrorString;
sub FreeEncoding;
sub GenerateNSName;
sub GetBase;
sub GetCurrentByteIndex;
sub GetCurrentColumnNumber;
sub GetCurrentLineNumber;
sub GetErrorCode;
sub GetSpecifiedAttributeCount;
sub LoadEncoding;
sub OriginalString;
sub ParseDone;
sub ParsePartial;
sub ParseStream;
sub ParseString;
sub ParserCreate;
sub ParserFree;
sub ParserRelease;
sub PositionContext;
sub RecognizedString;
sub SetAttListDeclHandler;
sub SetBase;
sub SetCharacterDataHandler;
sub SetCommentHandler;
sub SetDefaultHandler;
sub SetDoctypeHandler;
sub SetElementDeclHandler;
sub SetEndCdataHandler;
sub SetEndDoctypeHandler;
sub SetEndElementHandler;
sub SetEntityDeclHandler;
sub SetExtEntFinishHandler;
sub SetExternalEntityRefHandler;
sub SetNotationDeclHandler;
sub SetProcessingInstructionHandler;
sub SetStartCdataHandler;
sub SetStartElementHandler;
sub SetUnparsedEntityDeclHandler;
sub SetXMLDeclHandler;
sub SkipUntil;
sub UnsetAllHandlers;
}
package XML::Twig {
sub DIE_ON_ERR() ;
sub FB_CROAK() ;
sub FB_DEFAULT() ;
sub FB_HTMLCREF() ;
sub FB_PERLQQ() ;
sub FB_QUIET() ;
sub FB_WARN() ;
sub FB_XMLCREF() ;
sub HTMLCREF() ;
sub LEAVE_SRC() ;
sub PERLQQ() ;
sub RETURN_ON_ERR() ;
sub STOP_AT_PARTIAL() ;
sub WARN_ON_ERR() ;
sub XMLCREF() ;
sub _utf8_off($) ;
sub _utf8_on($) ;
sub is_16bit;
sub is_8bit;
sub is_utf8($;$) ;
sub isa;
sub utf8_downgrade;
sub utf8_upgrade;
sub weaken($) ;
}
package XML::Twig::Elt {
sub isa;
sub weaken($) ;
}
package XML::Twig::Entity_list {
sub isa;
}
package YAML::XS::LibYAML {
sub Dump;
sub Load;
}
package attributes {
sub _fetch_attrs($) ;
sub _guess_stash($) ;
sub _modify_attrs;
sub reftype($) ;
}
package bytes {
sub chr(_) ;
sub index($$;$) ;
sub length(_) ;
sub ord(_) ;
sub rindex($$;$) ;
sub substr($$;$$) ;
}
package constant {
sub _make_const(\[$@]) ;
}
package indirect {
sub CLONE;
sub _global($) ;
sub _tag($) ;
}
package mro {
sub _nextcan;
sub get_isarev($) ;
sub get_linear_isa($;$) ;
sub get_mro($) ;
sub get_pkg_gen($) ;
sub invalidate_all_method_caches() ;
sub is_universal($) ;
sub method_changed_in($) ;
sub set_mro($$) ;
}
package re {
sub install;
sub is_regexp($) ;
sub regexp_pattern($) ;
sub regmust($) ;
sub regname(;$$) ;
sub regnames(;$) ;
sub regnames_count() ;
}
package threads {
sub DESTROY;
sub _handle;
sub create;
sub detach;
sub equal;
sub error;
sub get_stack_size;
sub is_detached;
sub is_joinable;
sub is_running;
sub join;
sub kill;
sub list;
sub new;
sub object;
sub self;
sub set_stack_size;
sub set_thread_exit_only;
sub tid;
sub wantarray;
sub yield;
}
package threads::shared {
sub _id(\[$@%]) ;
sub _refcnt(\[$@%]) ;
sub bless($;$) ;
sub blessed($) ;
sub cond_broadcast(\[$@%]) ;
sub cond_signal(\[$@%]) ;
sub cond_timedwait(\[$@%]$;\[$@%]) ;
sub cond_wait(\[$@%];\[$@%]) ;
sub is_shared(\[$@%]) ;
sub refaddr($) ;
sub reftype($) ;
sub share(\[$@%]) ;
}
package threads::shared::tie {
sub EXISTS;
sub EXTEND;
sub FIRSTKEY;
sub NEXTKEY;
sub POP;
sub PUSH;
sub SHIFT;
sub STORESIZE;
sub UNSHIFT;
}
package utf8 {
sub decode;
sub downgrade;
sub encode;
sub is_utf8;
sub native_to_unicode;
sub unicode_to_native;
sub upgrade;
sub valid;
}
package version {
sub _VERSION;
sub boolean;
sub declare;
sub is_alpha;
sub is_qv;
sub new;
sub noop;
sub normal;
sub numify;
sub parse;
sub qv;
sub stringify;
sub vcmp;
}
package version::vxs {
sub VCMP;
sub _VERSION;
sub boolean;
sub declare;
sub is_alpha;
sub is_qv;
sub new;
sub noop;
sub normal;
sub numify;
sub parse;
sub qv;
sub stringify;
}
